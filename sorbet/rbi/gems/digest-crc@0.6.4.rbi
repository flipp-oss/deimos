# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `digest-crc` gem.
# Please instead update this file by running `bin/tapioca gem digest-crc`.

# source://digest-crc//lib/digest/crc.rb#7
class Digest::CRC < ::Digest::Class
  # source://digest-crc//lib/digest/crc.rb#57
  def initialize; end

  # source://digest-crc//lib/digest/crc.rb#100
  def <<(data); end

  # source://digest-crc//lib/digest/crc.rb#71
  def block_length; end

  # source://digest-crc//lib/digest/crc.rb#121
  def checksum; end

  # source://digest-crc//lib/digest/crc.rb#81
  def digest_length; end

  # source://digest-crc//lib/digest/crc.rb#130
  def finish; end

  # source://digest-crc//lib/digest/crc.rb#111
  def reset; end

  # source://digest-crc//lib/digest/crc.rb#93
  def update(data); end

  class << self
    # source://digest-crc//lib/digest/crc.rb#32
    def checksum(data); end

    # source://digest-crc//lib/digest/crc.rb#50
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc1.rb#7
class Digest::CRC1 < ::Digest::CRC
  # source://digest-crc//lib/digest/crc1.rb#25
  def update(data); end

  class << self
    # source://digest-crc//lib/digest/crc1.rb#15
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc15.rb#9
class Digest::CRC15 < ::Digest::CRC
  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc15.rb#42
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc15.rb#14
Digest::CRC15::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc15.rb#11
Digest::CRC15::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc16.rb#7
class Digest::CRC16 < ::Digest::CRC
  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc16.rb#58
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc16.rb#11
Digest::CRC16::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc16.rb#14
Digest::CRC16::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc16.rb#9
Digest::CRC16::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc24.rb#7
class Digest::CRC24 < ::Digest::CRC
  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc24.rb#58
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc24.rb#11
Digest::CRC24::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc24.rb#14
Digest::CRC24::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc24.rb#9
Digest::CRC24::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc32.rb#7
class Digest::CRC32 < ::Digest::CRC
  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc32.rb#92
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc32.rb#11
Digest::CRC32::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc32.rb#16
Digest::CRC32::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc32.rb#9
Digest::CRC32::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc32.rb#13
Digest::CRC32::XOR_MASK = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc32c.rb#7
class Digest::CRC32c < ::Digest::CRC32
  def update(_arg0); end
end

# source://digest-crc//lib/digest/crc32c.rb#10
Digest::CRC32c::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc5.rb#7
class Digest::CRC5 < ::Digest::CRC
  # source://digest-crc//lib/digest/crc5.rb#40
  def initialize; end

  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc5.rb#55
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc5.rb#15
Digest::CRC5::CRC_MASK = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc5.rb#11
Digest::CRC5::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc5.rb#18
Digest::CRC5::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc5.rb#9
Digest::CRC5::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc5.rb#13
Digest::CRC5::XOR_MASK = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc64.rb#7
class Digest::CRC64 < ::Digest::CRC
  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc64.rb#92
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc64.rb#11
Digest::CRC64::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc64.rb#16
Digest::CRC64::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc64.rb#9
Digest::CRC64::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc64.rb#13
Digest::CRC64::XOR_MASK = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc8.rb#7
class Digest::CRC8 < ::Digest::CRC
  def update(_arg0); end

  class << self
    # source://digest-crc//lib/digest/crc8.rb#42
    def pack(crc); end
  end
end

# source://digest-crc//lib/digest/crc8.rb#11
Digest::CRC8::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc8.rb#14
Digest::CRC8::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc8.rb#9
Digest::CRC8::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc8_1wire.rb#7
class Digest::CRC8_1Wire < ::Digest::CRC8
  def update(_arg0); end
end

# source://digest-crc//lib/digest/crc8_1wire.rb#10
Digest::CRC8_1Wire::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc.rb#12
Digest::CRC::INIT_CRC = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc.rb#21
Digest::CRC::TABLE = T.let(T.unsafe(nil), Array)

# source://digest-crc//lib/digest/crc.rb#18
Digest::CRC::WIDTH = T.let(T.unsafe(nil), Integer)

# source://digest-crc//lib/digest/crc.rb#15
Digest::CRC::XOR_MASK = T.let(T.unsafe(nil), Integer)
