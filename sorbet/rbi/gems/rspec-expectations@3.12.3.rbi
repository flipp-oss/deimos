# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-expectations` gem.
# Please instead update this file by running `bin/tapioca gem rspec-expectations`.

# source://rspec-expectations//lib/rspec/matchers/english_phrasing.rb#1
module RSpec
  class << self
    # source://rspec-core/3.12.2/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.12.2/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.12.2/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.12.2/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#2
module RSpec::Expectations
  class << self
    # source://rspec-expectations//lib/rspec/expectations/configuration.rb#223
    def configuration; end

    # source://rspec-expectations//lib/rspec/expectations/fail_with.rb#13
    def differ; end

    # source://rspec-expectations//lib/rspec/expectations/fail_with.rb#27
    def fail_with(message, expected = T.unsafe(nil), actual = T.unsafe(nil)); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#136
class RSpec::Expectations::BlockExpectationTarget < ::RSpec::Expectations::ExpectationTarget
  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#142
  def not_to(matcher, message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#137
  def to(matcher, message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#142
  def to_not(matcher, message = T.unsafe(nil), &block); end

  private

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#150
  def enforce_block_expectation(matcher); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#158
  def supports_block_expectations?(matcher); end
end

# source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#4
class RSpec::Expectations::BlockSnippetExtractor
  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#17
  def initialize(proc, method_name); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#25
  def body_content_lines; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#7
  def method_name; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#7
  def proc; end

  private

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#60
  def beginning_line_number; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#39
  def block_token_extractor; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#56
  def file_path; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#31
  def raw_body_lines; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#35
  def raw_body_snippet; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#44
  def source; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#64
  def source_location; end

  class << self
    # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#9
    def try_extracting_single_line_body_of(proc, method_name); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#70
class RSpec::Expectations::BlockSnippetExtractor::AmbiguousTargetError < ::RSpec::Expectations::BlockSnippetExtractor::Error; end

# source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#198
class RSpec::Expectations::BlockSnippetExtractor::BlockLocator < ::Struct
  def beginning_line_number; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#198
  def beginning_line_number=(_); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#203
  def body_content_locations; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#199
  def method_call_location; end

  def method_name; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#198
  def method_name=(_); end

  def source; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#198
  def source=(_); end

  private

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#216
  def block_body_node; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#221
  def block_wrapper_node; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#232
  def candidate_block_wrapper_nodes; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#241
  def candidate_method_ident_nodes; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#209
  def method_ident_node; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#247
  def method_ident_node?(node); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#75
class RSpec::Expectations::BlockSnippetExtractor::BlockTokenExtractor < ::Struct
  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#78
  def initialize(*_arg0); end

  def beginning_line_number; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#75
  def beginning_line_number=(_); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#76
  def body_tokens; end

  def method_name; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#75
  def method_name=(_); end

  def source; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#75
  def source=(_); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#76
  def state; end

  private

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#124
  def after_beginning_of_args_state(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#128
  def after_beginning_of_body_state(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#107
  def after_method_call_state(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#111
  def after_opener_state(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#191
  def block_locator; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#185
  def correct_block?(body_tokens); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#141
  def finalize_pending_tokens!; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#95
  def finish!; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#147
  def finish_or_find_next_block_if_incorrect!; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#168
  def handle_closer_token(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#158
  def handle_opener_token(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#103
  def initial_state(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#99
  def invoke_state_handler(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#164
  def opener_token?(token); end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#177
  def opener_token_stack; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#85
  def parse!; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#137
  def pending_tokens; end

  # source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#181
  def pipe_token?(token); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#68
class RSpec::Expectations::BlockSnippetExtractor::Error < ::StandardError; end

# source://rspec-expectations//lib/rspec/expectations/block_snippet_extractor.rb#69
class RSpec::Expectations::BlockSnippetExtractor::TargetNotFoundError < ::RSpec::Expectations::BlockSnippetExtractor::Error; end

# source://rspec-expectations//lib/rspec/expectations/configuration.rb#20
class RSpec::Expectations::Configuration
  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#29
  def initialize; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#112
  def add_should_and_should_not_to(*modules); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#129
  def backtrace_formatter; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#128
  def backtrace_formatter=(_arg0); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#88
  def color?; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#216
  def false_positives_handler; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#140
  def include_chain_clauses_in_custom_matcher_descriptions=(_arg0); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#145
  def include_chain_clauses_in_custom_matcher_descriptions?; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#70
  def max_formatted_output_length=(length); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#206
  def on_potential_false_positives; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#182
  def on_potential_false_positives=(behavior); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#150
  def reset_syntaxes_to_default; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#197
  def strict_predicate_matchers; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#192
  def strict_predicate_matchers=(flag); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#199
  def strict_predicate_matchers?; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#80
  def syntax; end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#46
  def syntax=(values); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#168
  def warn_about_potential_false_positives=(boolean); end

  # source://rspec-expectations//lib/rspec/expectations/configuration.rb#211
  def warn_about_potential_false_positives?; end
end

# source://rspec-expectations//lib/rspec/expectations/configuration.rb#22
RSpec::Expectations::Configuration::FALSE_POSITIVE_BEHAVIOURS = T.let(T.unsafe(nil), Hash)

# source://rspec-expectations//lib/rspec/expectations/configuration.rb#158
module RSpec::Expectations::Configuration::NullBacktraceFormatter
  class << self
    # source://rspec-expectations//lib/rspec/expectations/configuration.rb#159
    def format_backtrace(backtrace); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/handler.rb#4
module RSpec::Expectations::ExpectationHelper
  class << self
    # source://rspec-expectations//lib/rspec/expectations/handler.rb#5
    def check_message(msg); end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#33
    def handle_failure(matcher, message, failure_message_method); end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#19
    def modern_matcher_from(matcher); end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#24
    def with_matcher(handler, matcher, message); end
  end
end

# source://rspec-expectations//lib/rspec/expectations.rb#67
class RSpec::Expectations::ExpectationNotMetError < ::Exception; end

# source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#17
class RSpec::Expectations::ExpectationTarget
  include ::RSpec::Expectations::ExpectationTarget::InstanceMethods

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#31
  def initialize(value); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#28
  def target; end

  class << self
    # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#36
    def for(value, block); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#53
module RSpec::Expectations::ExpectationTarget::InstanceMethods
  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#76
  def not_to(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#63
  def to(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#76
  def to_not(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  private

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#84
  def prevent_operator_matchers(verb); end
end

# source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#22
module RSpec::Expectations::ExpectationTarget::UndefinedValue; end

# source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#4
class RSpec::Expectations::FailureAggregator
  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#90
  def initialize(block_label, metadata); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#22
  def aggregate; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#5
  def block_label; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#59
  def call(failure, options); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#49
  def failures; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#5
  def metadata; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#53
  def other_errors; end

  private

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#85
  def assign_backtrace(failure); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#96
  def notify_aggregated_failures; end
end

# source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#20
RSpec::Expectations::FailureAggregator::AGGREGATED_FAILURE = T.let(T.unsafe(nil), RSpec::Expectations::FailureAggregator::AggregatedFailure)

# source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#8
class RSpec::Expectations::FailureAggregator::AggregatedFailure
  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#15
  def inspect; end
end

# source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#10
RSpec::Expectations::FailureAggregator::AggregatedFailure::MESSAGE = T.let(T.unsafe(nil), String)

# source://rspec-expectations//lib/rspec/expectations/handler.rb#180
RSpec::Expectations::LegacyMacherAdapter = RSpec::Expectations::LegacyMatcherAdapter

# source://rspec-expectations//lib/rspec/expectations/handler.rb#113
class RSpec::Expectations::LegacyMatcherAdapter < ::RSpec::Matchers::MatcherDelegator
  # source://rspec-expectations//lib/rspec/expectations/handler.rb#114
  def initialize(matcher); end

  class << self
    # source://rspec-expectations//lib/rspec/expectations/handler.rb#124
    def wrap(matcher); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/handler.rb#157
class RSpec::Expectations::LegacyMatcherAdapter::RSpec1 < ::RSpec::Expectations::LegacyMatcherAdapter
  # source://rspec-expectations//lib/rspec/expectations/handler.rb#158
  def failure_message; end

  # source://rspec-expectations//lib/rspec/expectations/handler.rb#162
  def failure_message_when_negated; end

  class << self
    # source://rspec-expectations//lib/rspec/expectations/handler.rb#169
    def interface_matches?(matcher); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/handler.rb#133
class RSpec::Expectations::LegacyMatcherAdapter::RSpec2 < ::RSpec::Expectations::LegacyMatcherAdapter
  # source://rspec-expectations//lib/rspec/expectations/handler.rb#134
  def failure_message; end

  # source://rspec-expectations//lib/rspec/expectations/handler.rb#138
  def failure_message_when_negated; end

  class << self
    # source://rspec-expectations//lib/rspec/expectations/handler.rb#142
    def interface_matches?(matcher); end
  end
end

# source://rspec-expectations//lib/rspec/expectations.rb#76
class RSpec::Expectations::MultipleExpectationsNotMetError < ::RSpec::Expectations::ExpectationNotMetError
  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#153
  def initialize(failure_aggregator); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#128
  def aggregation_block_label; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#133
  def aggregation_metadata; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#125
  def all_exceptions; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#144
  def exception_count_description; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#115
  def failures; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#110
  def message; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#120
  def other_errors; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#138
  def summary; end

  private

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#185
  def backtrace_line(line); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#158
  def block_description; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#167
  def enumerated(exceptions, index_offset); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#197
  def enumerated_errors; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#193
  def enumerated_failures; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#175
  def exclusion_patterns; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#181
  def format_backtrace(backtrace); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#212
  def indentation; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#203
  def indented(failure_message, index); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#224
  def index_label(index); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#216
  def longest_index_label_width; end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#163
  def pluralize(noun, count); end

  # source://rspec-expectations//lib/rspec/expectations/failure_aggregator.rb#220
  def width_of_label(index); end
end

# source://rspec-expectations//lib/rspec/expectations/handler.rb#74
class RSpec::Expectations::NegativeExpectationHandler
  class << self
    # source://rspec-expectations//lib/rspec/expectations/handler.rb#88
    def does_not_match?(matcher, actual, &block); end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#75
    def handle_matcher(actual, initial_matcher, custom_message = T.unsafe(nil), &block); end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#104
    def opposite_should_method; end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#100
    def should_method; end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#96
    def verb; end
  end
end

# source://rspec-expectations//lib/rspec/expectations/handler.rb#46
class RSpec::Expectations::PositiveExpectationHandler
  class << self
    # source://rspec-expectations//lib/rspec/expectations/handler.rb#47
    def handle_matcher(actual, initial_matcher, custom_message = T.unsafe(nil), &block); end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#68
    def opposite_should_method; end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#64
    def should_method; end

    # source://rspec-expectations//lib/rspec/expectations/handler.rb#60
    def verb; end
  end
end

# source://rspec-expectations//lib/rspec/expectations/syntax.rb#6
module RSpec::Expectations::Syntax
  private

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#11
  def default_should_host; end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#80
  def disable_expect(syntax_host = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#57
  def disable_should(syntax_host = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#68
  def enable_expect(syntax_host = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#38
  def enable_should(syntax_host = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#96
  def expect_enabled?(syntax_host = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#90
  def should_enabled?(syntax_host = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#18
  def warn_about_should!; end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#25
  def warn_about_should_unless_configured(method_name); end

  class << self
    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#11
    def default_should_host; end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#80
    def disable_expect(syntax_host = T.unsafe(nil)); end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#57
    def disable_should(syntax_host = T.unsafe(nil)); end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#68
    def enable_expect(syntax_host = T.unsafe(nil)); end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#38
    def enable_should(syntax_host = T.unsafe(nil)); end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#96
    def expect_enabled?(syntax_host = T.unsafe(nil)); end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#90
    def should_enabled?(syntax_host = T.unsafe(nil)); end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#18
    def warn_about_should!; end

    # source://rspec-expectations//lib/rspec/expectations/syntax.rb#25
    def warn_about_should_unless_configured(method_name); end
  end
end

# source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#98
class RSpec::Expectations::ValueExpectationTarget < ::RSpec::Expectations::ExpectationTarget
  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#104
  def not_to(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#99
  def to(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  private

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#111
  def enforce_value_expectation(matcher); end

  # source://rspec-expectations//lib/rspec/expectations/expectation_target.rb#126
  def supports_value_expectations?(matcher); end
end

# source://rspec-expectations//lib/rspec/expectations/version.rb#4
module RSpec::Expectations::Version; end

# source://rspec-expectations//lib/rspec/expectations/version.rb#5
RSpec::Expectations::Version::STRING = T.let(T.unsafe(nil), String)

# source://rspec-expectations//lib/rspec/matchers/english_phrasing.rb#2
module RSpec::Matchers
  extend ::RSpec::Matchers::DSL

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_changing(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_outputting(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_raising(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_throwing(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_yielding_control(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_yielding_successive_args(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_yielding_with_args(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_block_yielding_with_no_args(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_collection_containing_exactly(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_collection_ending_with(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_collection_including(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_collection_starting_with(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_falsey_value(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_falsy_value(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_hash_including(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_kind_of(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_nil_value(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_range_covering(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_string_ending_with(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_string_including(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_string_matching(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_string_starting_with(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_truthy_value(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_value(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_value_between(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def a_value_within(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#305
  def aggregate_failures(label = T.unsafe(nil), metadata = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#662
  def all(expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_array_matching(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_instance_of(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_eq_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_eql_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_equal_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_existing(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_having_attributes(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_matching(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_responding_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def an_object_satisfying(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#349
  def be(*args); end

  # source://rspec-expectations//lib/rspec/matchers.rb#355
  def be_a(klass); end

  # source://rspec-expectations//lib/rspec/matchers.rb#378
  def be_a_kind_of(expected); end

  # source://rspec-expectations//lib/rspec/matchers.rb#355
  def be_an(klass); end

  # source://rspec-expectations//lib/rspec/matchers.rb#366
  def be_an_instance_of(expected); end

  # source://rspec-expectations//lib/rspec/matchers.rb#395
  def be_between(min, max); end

  # source://rspec-expectations//lib/rspec/matchers.rb#316
  def be_falsey; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def be_falsy(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#366
  def be_instance_of(expected); end

  # source://rspec-expectations//lib/rspec/matchers.rb#378
  def be_kind_of(expected); end

  # source://rspec-expectations//lib/rspec/matchers.rb#324
  def be_nil; end

  # source://rspec-expectations//lib/rspec/matchers.rb#310
  def be_truthy; end

  # source://rspec-expectations//lib/rspec/matchers.rb#405
  def be_within(delta); end

  # source://rspec-expectations//lib/rspec/matchers.rb#492
  def change(receiver = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def changing(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#510
  def contain_exactly(*items); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def containing_exactly(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#528
  def cover(*values); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def covering(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#543
  def end_with(*expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def ending_with(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#558
  def eq(expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def eq_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#572
  def eql(expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def eql_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#586
  def equal(expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def equal_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#596
  def exist(*args); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def existing(*args, &block); end

  # source://rspec-expectations//lib/rspec/expectations/syntax.rb#72
  def expect(value = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#616
  def have_attributes(expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def having_attributes(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#639
  def include(*expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def including(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#697
  def match(expected); end

  # source://rspec-expectations//lib/rspec/matchers.rb#715
  def match_array(items); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def match_regex(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def matching(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#752
  def output(expected = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers.rb#773
  def raise_error(error = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#773
  def raise_exception(error = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def raising(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#792
  def respond_to(*names); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def responding_to(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#813
  def satisfy(description = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def satisfying(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#828
  def start_with(*expected); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def starting_with(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#850
  def throw_symbol(expected_symbol = T.unsafe(nil), expected_arg = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def throwing(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def within(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#871
  def yield_control; end

  # source://rspec-expectations//lib/rspec/matchers.rb#940
  def yield_successive_args(*args); end

  # source://rspec-expectations//lib/rspec/matchers.rb#919
  def yield_with_args(*args); end

  # source://rspec-expectations//lib/rspec/matchers.rb#889
  def yield_with_no_args; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def yielding_control(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def yielding_successive_args(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def yielding_with_args(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#38
  def yielding_with_no_args(*args, &block); end

  private

  # source://rspec-expectations//lib/rspec/matchers.rb#961
  def method_missing(method, *args, &block); end

  # source://rspec-expectations//lib/rspec/matchers.rb#974
  def respond_to_missing?(method, *_arg1); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers.rb#250
    def alias_matcher(*args, &block); end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#11
    def clear_generated_description; end

    # source://rspec-expectations//lib/rspec/matchers.rb#951
    def configuration; end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#19
    def generated_description; end

    # source://rspec-expectations//lib/rspec/matchers.rb#1008
    def is_a_describable_matcher?(obj); end

    # source://rspec-expectations//lib/rspec/matchers.rb#988
    def is_a_matcher?(obj); end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#25
    def last_description; end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#5
    def last_expectation_handler; end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#5
    def last_expectation_handler=(_arg0); end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#5
    def last_matcher; end

    # source://rspec-expectations//lib/rspec/matchers/generated_descriptions.rb#5
    def last_matcher=(_arg0); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#12
class RSpec::Matchers::AliasedMatcher < ::RSpec::Matchers::MatcherDelegator
  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#13
  def initialize(base_matcher, description_block); end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#36
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#46
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#56
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#24
  def method_missing(*_arg0); end
end

# source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#65
class RSpec::Matchers::AliasedMatcherWithOperatorSupport < ::RSpec::Matchers::AliasedMatcher; end

# source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#71
class RSpec::Matchers::AliasedNegatedMatcher < ::RSpec::Matchers::AliasedMatcher
  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#80
  def does_not_match?(*args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#84
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#88
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#72
  def matches?(*args, &block); end

  private

  # source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#105
  def optimal_failure_message(same, inverted); end
end

# source://rspec-expectations//lib/rspec/matchers/aliased_matcher.rb#94
RSpec::Matchers::AliasedNegatedMatcher::DefaultFailureMessages = RSpec::Matchers::BuiltIn::BaseMatcher::DefaultFailureMessages

# source://rspec-expectations//lib/rspec/matchers.rb#957
RSpec::Matchers::BE_PREDICATE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#3
module RSpec::Matchers::BuiltIn; end

# source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#8
class RSpec::Matchers::BuiltIn::All < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#11
  def initialize(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#37
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#17
  def does_not_match?(_actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#9
  def failed_objects; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#23
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#9
  def matcher; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#63
  def add_new_line_if_needed(message); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#58
  def failure_message_for_item(index, failure_message); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#67
  def indent_multiline_message(message); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#50
  def index_failed_objects; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#74
  def initialize_copy(other); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#80
  def iterable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/all.rb#43
  def match(_expected, _actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#14
class RSpec::Matchers::BuiltIn::BaseMatcher
  include ::RSpec::Matchers::Composable
  include ::RSpec::Matchers::BuiltIn::BaseMatcher::HashFormatting
  include ::RSpec::Matchers::BuiltIn::BaseMatcher::DefaultFailureMessages

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#28
  def initialize(expected = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#23
  def actual; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#97
  def actual_formatted; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#60
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#69
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#23
  def expected; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#92
  def expected_formatted; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#87
  def expects_call_stack_jump?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#47
  def match_unless_raises(*exceptions); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#107
  def matcher_name; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#26
  def matcher_name=(_arg0); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#36
  def matches?(actual); end

  def present_ivars; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#23
  def rescued_exception; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#77
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#82
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#129
  def assert_ivars(*expected_ivars); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#102
    def matcher_name; end

    private

    # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#117
    def underscore(camel_cased_word); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#166
module RSpec::Matchers::BuiltIn::BaseMatcher::DefaultFailureMessages
  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#172
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#181
  def failure_message_when_negated; end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#186
    def has_default_failure_messages?(matcher); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#146
module RSpec::Matchers::BuiltIn::BaseMatcher::HashFormatting
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#156
  def improve_hash_formatting(inspect_string); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#156
    def improve_hash_formatting(inspect_string); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/base_matcher.rb#20
RSpec::Matchers::BuiltIn::BaseMatcher::UNDEFINED = T.let(T.unsafe(nil), Object)

# source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#101
class RSpec::Matchers::BuiltIn::Be < ::RSpec::Matchers::BuiltIn::BaseMatcher
  include ::RSpec::Matchers::BuiltIn::BeHelpers

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#104
  def initialize(*args); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def <(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def <=(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def ==(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def ===(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def =~(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def >(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#121
  def >=(operand); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#110
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#116
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#128
  def match(_, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be_kind_of.rb#7
class RSpec::Matchers::BuiltIn::BeAKindOf < ::RSpec::Matchers::BuiltIn::BaseMatcher
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_kind_of.rb#10
  def match(expected, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be_instance_of.rb#9
class RSpec::Matchers::BuiltIn::BeAnInstanceOf < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/be_instance_of.rb#10
  def description; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_instance_of.rb#16
  def match(expected, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#7
class RSpec::Matchers::BuiltIn::BeBetween < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#8
  def initialize(min, max); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#57
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#33
  def exclusive; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#51
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#21
  def inclusive; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#42
  def matches?(actual); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#63
  def comparable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#71
  def compare; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_between.rb#67
  def not_comparable_clause; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#136
class RSpec::Matchers::BuiltIn::BeComparedTo < ::RSpec::Matchers::BuiltIn::BaseMatcher
  include ::RSpec::Matchers::BuiltIn::BeHelpers

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#139
  def initialize(operand, operator); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#178
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#151
  def does_not_match?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#159
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#166
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#145
  def matches?(actual); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#184
  def perform_match(actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#32
class RSpec::Matchers::BuiltIn::BeFalsey < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#33
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#39
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#45
  def match(_, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#74
module RSpec::Matchers::BuiltIn::BeHelpers
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#77
  def args_to_s; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#93
  def args_to_sentence; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#89
  def expected_to_sentence; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#85
  def inspected_args; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#81
  def parenthesize(string); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#55
class RSpec::Matchers::BuiltIn::BeNil < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#56
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#62
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#68
  def match(_, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#138
class RSpec::Matchers::BuiltIn::BePredicate < ::RSpec::Matchers::BuiltIn::DynamicPredicate
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#149
  def failure_to_respond_explanation; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#141
  def predicate; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#157
  def predicate_accessible?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#145
  def predicate_method_name; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#161
  def present_tense_predicate; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#139
RSpec::Matchers::BuiltIn::BePredicate::REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#9
class RSpec::Matchers::BuiltIn::BeTruthy < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#10
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#16
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be.rb#22
  def match(_, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#7
class RSpec::Matchers::BuiltIn::BeWithin < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#8
  def initialize(delta); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#52
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#40
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#46
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#32
  def matches?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#14
  def of(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#24
  def percent_of(expected); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#62
  def needs_expected; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#66
  def not_numeric_clause; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/be_within.rb#58
  def numeric?; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#159
module RSpec::Matchers::BuiltIn::CaptureStderr
  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#164
    def capture(block); end

    # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#160
    def name; end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#139
module RSpec::Matchers::BuiltIn::CaptureStdout
  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#144
    def capture(block); end

    # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#140
    def name; end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#179
class RSpec::Matchers::BuiltIn::CaptureStreamToTempfile < ::Struct
  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#180
  def capture(block); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#9
class RSpec::Matchers::BuiltIn::Change < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#87
  def initialize(receiver = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#10
  def by(expected_delta); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#18
  def by_at_least(minimum); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#26
  def by_at_most(maximum); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#71
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#50
  def does_not_match?(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#57
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#64
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#40
  def from(value); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#45
  def matches?(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#76
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#81
  def supports_value_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#34
  def to(value); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#93
  def change_details; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#119
  def negative_failure_reason; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#97
  def perform_change(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#114
  def positive_failure_reason; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#109
  def raise_block_syntax_error; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#352
class RSpec::Matchers::BuiltIn::ChangeDetails
  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#357
  def initialize(matcher_name, receiver = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#353
  def actual_after; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#418
  def actual_delta; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#402
  def changed?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#389
  def perform_change(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#378
  def value_representation; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#424
  def evaluate_value_proc; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#438
  def extract_value_block_snippet; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#428
  def message_notation(receiver, message); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#355
module RSpec::Matchers::BuiltIn::ChangeDetails::UNDEFINED; end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#270
class RSpec::Matchers::BuiltIn::ChangeFromValue < ::RSpec::Matchers::BuiltIn::SpecificValuesChange
  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#271
  def initialize(change_details, expected_before); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#285
  def does_not_match?(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#295
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#278
  def to(value); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#303
  def change_description; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#128
class RSpec::Matchers::BuiltIn::ChangeRelatively < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#129
  def initialize(change_details, expected_delta, relativity, &comparer); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#156
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#150
  def does_not_match?(_event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#137
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#144
  def matches?(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#162
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#167
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#173
  def failure_reason; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#311
class RSpec::Matchers::BuiltIn::ChangeToValue < ::RSpec::Matchers::BuiltIn::SpecificValuesChange
  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#312
  def initialize(change_details, expected_after); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#326
  def does_not_match?(_event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#319
  def from(value); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#333
  def change_description; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#7
class RSpec::Matchers::BuiltIn::Compound < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#10
  def initialize(matcher_1, matcher_2); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#25
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#49
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#16
  def does_not_match?(_actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#8
  def evaluator; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#55
  def expected; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#42
  def expects_call_stack_jump?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#8
  def matcher_1; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#8
  def matcher_2; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#30
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#36
  def supports_value_expectations?; end

  protected

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#62
  def diffable_matcher_list; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#93
  def compound_failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#125
  def diffable_matcher_list_for(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#87
  def indent_multiline_message(message); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#71
  def initialize_copy(other); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#77
  def match(_expected, actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#99
  def matcher_1_matches?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#103
  def matcher_2_matches?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#119
  def matcher_is_diffable?(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#107
  def matcher_supports_block_expectations?(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#113
  def matcher_supports_value_expectations?(matcher); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#244
class RSpec::Matchers::BuiltIn::Compound::And < ::RSpec::Matchers::BuiltIn::Compound
  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#245
  def failure_message; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#262
  def conjunction; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#257
  def match(*_arg0); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#156
class RSpec::Matchers::BuiltIn::Compound::NestedEvaluator
  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#157
  def initialize(actual, matcher_1, matcher_2); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#170
  def matcher_matches?(matcher); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#184
  def inner_matcher_block(outer_args); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#224
  def order_block_matchers; end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#233
    def matcher_expects_call_stack_jump?(matcher); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#271
class RSpec::Matchers::BuiltIn::Compound::Or < ::RSpec::Matchers::BuiltIn::Compound
  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#272
  def failure_message; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#283
  def conjunction; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#278
  def match(*_arg0); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#132
class RSpec::Matchers::BuiltIn::Compound::SequentialEvaluator
  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#133
  def initialize(actual, *_arg1); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/compound.rb#137
  def matcher_matches?(matcher); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#10
class RSpec::Matchers::BuiltIn::ContainExactly < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#29
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#11
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#22
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#34
  def matches?(actual); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#56
  def actual_collection_line; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#135
  def best_solution; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#94
  def convert_actual_to_an_array; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#68
  def describe_collection(collection, surface_descriptions = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#52
  def expected_collection_line; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#64
  def extra_elements_line; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#129
  def extra_items; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#44
  def generate_failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#81
  def match(_expected, _actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#90
  def match_when_sorted?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#76
  def message_line(prefix, collection, surface_descriptions = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#60
  def missing_elements_line; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#123
  def missing_items; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#139
  def pairings_maximizer; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#104
  def safe_sort(array); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#118
  def to_a_disallowed?(object); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#186
class RSpec::Matchers::BuiltIn::ContainExactly::PairingsMaximizer
  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#223
  def initialize(expected_to_actual_matched_indexes, actual_to_expected_matched_indexes); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#221
  def actual_to_expected_matched_indexes; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#221
  def expected_to_actual_matched_indexes; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#237
  def find_best_solution; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#221
  def solution; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#299
  def apply_pairing_to(indeterminates, original_matches, other_list_index); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#283
  def best_solution_for_pairing(expected_index, actual_index); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#263
  def categorize_indexes(indexes_to_categorize, other_indexes); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#278
  def reciprocal_single_match?(matches, index, other_list); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#257
class RSpec::Matchers::BuiltIn::ContainExactly::PairingsMaximizer::NullSolution
  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#258
    def worse_than?(_other); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#188
class RSpec::Matchers::BuiltIn::ContainExactly::PairingsMaximizer::Solution < ::Struct
  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#210
  def +(derived_candidate_solution); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#194
  def candidate?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#199
  def ideal?; end

  def indeterminate_actual_indexes; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#188
  def indeterminate_actual_indexes=(_); end

  def indeterminate_expected_indexes; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#188
  def indeterminate_expected_indexes=(_); end

  def unmatched_actual_indexes; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#188
  def unmatched_actual_indexes=(_); end

  def unmatched_expected_indexes; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#188
  def unmatched_expected_indexes=(_); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#206
  def unmatched_item_count; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/contain_exactly.rb#190
  def worse_than?(other); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#7
module RSpec::Matchers::BuiltIn::CountExpectation
  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#42
  def at_least(number); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#35
  def at_most(number); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#28
  def exactly(number); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#10
  def once; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#22
  def thrice; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#49
  def times; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#16
  def twice; end

  protected

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#55
  def count_expectation_type; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#55
  def expected_count; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#120
  def count_constraint_to_number(n); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#139
  def count_expectation_description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#143
  def count_failure_reason(action); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#60
  def cover?(count, number); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#69
  def expected_count_matches?(actual_count); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#77
  def has_expected_count?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#157
  def human_readable_count(count); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#148
  def human_readable_expectation_type; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#100
  def raise_impossible_count_expectation(count); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#109
  def raise_unsupported_count_expectation; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#81
  def set_expected_count(relativity, n); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/count_expectation.rb#132
  def unsupported_count_expectation?(relativity); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/cover.rb#7
class RSpec::Matchers::BuiltIn::Cover < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/cover.rb#8
  def initialize(*expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/cover.rb#17
  def does_not_match?(range); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/cover.rb#12
  def matches?(range); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#7
class RSpec::Matchers::BuiltIn::DynamicPredicate < ::RSpec::Matchers::BuiltIn::BaseMatcher
  include ::RSpec::Matchers::BuiltIn::BeHelpers

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#10
  def initialize(method_name, *args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#43
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#23
  def does_not_match?(actual, &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#31
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#37
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#16
  def matches?(actual, &block); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#99
  def expectation_of(value); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#94
  def failure_message_expecting(value); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#115
  def failure_to_respond_explanation; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#90
  def method_description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#49
  def predicate_accessible?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#74
  def predicate_matches?(value = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#70
  def predicate_method_name; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#66
  def predicate_result; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#61
  def private_predicate?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#82
  def root; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#109
  def validity_message; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#81
class RSpec::Matchers::BuiltIn::EndWith < ::RSpec::Matchers::BuiltIn::StartOrEndWith
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#88
  def element_matches?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#84
  def subset_matches?; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/eq.rb#9
class RSpec::Matchers::BuiltIn::Eq < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/eq.rb#22
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/eq.rb#28
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/eq.rb#10
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/eq.rb#16
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/eq.rb#34
  def match(expected, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/eql.rb#9
class RSpec::Matchers::BuiltIn::Eql < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/eql.rb#22
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/eql.rb#10
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/eql.rb#16
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/eql.rb#28
  def match(expected, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#9
class RSpec::Matchers::BuiltIn::Equal < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#33
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#10
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#20
  def failure_message_when_negated; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#49
  def actual_inspected; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#61
  def detailed_failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#45
  def expected_is_a_literal_singleton?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#75
  def inspect_object(o); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#39
  def match(expected, actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#57
  def simple_failure_message; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/equal.rb#43
RSpec::Matchers::BuiltIn::Equal::LITERAL_SINGLETONS = T.let(T.unsafe(nil), Array)

# source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#7
class RSpec::Matchers::BuiltIn::Exist < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#8
  def initialize(*expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#22
  def does_not_match?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#30
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#36
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#14
  def matches?(actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#45
class RSpec::Matchers::BuiltIn::Exist::ExistenceTest < ::Struct
  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#52
  def actual_exists?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#46
  def valid_test?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#58
  def validity_message; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#83
  def deprecated(predicate, actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#75
  def existence_values; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#79
  def predicates; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/exist.rb#71
  def uniq_truthy_values; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#126
class RSpec::Matchers::BuiltIn::Has < ::RSpec::Matchers::BuiltIn::DynamicPredicate
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#129
  def predicate; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/has.rb#127
RSpec::Matchers::BuiltIn::Has::REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#8
class RSpec::Matchers::BuiltIn::HaveAttributes < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#11
  def initialize(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#19
  def actual; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#43
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#50
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#34
  def does_not_match?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#56
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#64
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#25
  def matches?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#9
  def respond_to_failed; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#85
  def actual_has_attribute?(attribute_key, attribute_value); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#70
  def cache_all_values; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#107
  def formatted_values; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#78
  def perform_match(predicate); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#89
  def respond_to_attributes?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#99
  def respond_to_failure_message_or; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/have_attributes.rb#95
  def respond_to_matcher; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#9
class RSpec::Matchers::BuiltIn::Include < ::RSpec::Matchers::BuiltIn::BaseMatcher
  include ::RSpec::Matchers::BuiltIn::CountExpectation

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#15
  def initialize(*expecteds); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#43
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#61
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#32
  def does_not_match?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#67
  def expected; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#12
  def expecteds; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#49
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#55
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#21
  def matches?(actual); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#167
  def actual_collection_includes?(expected_item); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#153
  def actual_hash_has_key?(expected_key); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#141
  def actual_hash_includes?(expected_key, expected_value); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#77
  def check_actual?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#83
  def check_expected_count?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#149
  def comparing_hash_keys?(expected_item); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#137
  def comparing_hash_to_a_subset?(expected_item); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#207
  def convert_to_hash?(obj); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#181
  def count_enumerable(expected_item); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#186
  def count_inclusions; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#198
  def diff_would_wrongly_highlight_matched_item?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#120
  def excluded_from_actual; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#95
  def format_failure_message(preposition); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#115
  def perform_match(&block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/include.rb#106
  def readable_list_of(items); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#7
class RSpec::Matchers::BuiltIn::Match < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#8
  def initialize(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#15
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#25
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#31
  def with_captures(*captures); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#45
  def can_safely_call_match?(expected, actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#38
  def match(expected, actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#52
  def match_captures(expected, actual); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#116
class RSpec::Matchers::BuiltIn::NegativeOperatorMatcher < ::RSpec::Matchers::BuiltIn::OperatorMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#117
  def __delegate_operator(actual, operator, expected); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#128
module RSpec::Matchers::BuiltIn::NullCapture
  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#133
    def capture(_block); end

    # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#129
    def name; end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#10
class RSpec::Matchers::BuiltIn::OperatorMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#41
  def initialize(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#57
  def !=(_expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#57
  def !~(_expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def <(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def <=(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def ==(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def ===(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def =~(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def >(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#47
  def >=(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#76
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#70
  def fail_with_message(message); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#88
  def eval_match(actual, operator, expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#82
  def has_non_generic_implementation_of?(op); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#29
    def get(klass, operator); end

    # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#18
    def register(klass, operator, matcher); end

    # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#13
    def registry; end

    # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#24
    def unregister(klass, operator); end

    # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#46
    def use_custom_matcher_or_delegate(operator); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#9
class RSpec::Matchers::BuiltIn::Output < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#10
  def initialize(expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#76
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#86
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#24
  def does_not_match?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#64
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#70
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#17
  def matches?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#93
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#100
  def supports_value_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#39
  def to_stderr; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#57
  def to_stderr_from_any_process; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#31
  def to_stdout; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#48
  def to_stdout_from_any_process; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#121
  def actual_output_description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#106
  def captured?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#116
  def negative_failure_reason; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/output.rb#110
  def positive_failure_reason; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#97
class RSpec::Matchers::BuiltIn::PositiveOperatorMatcher < ::RSpec::Matchers::BuiltIn::OperatorMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/operators.rb#98
  def __delegate_operator(actual, operator, expected); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#9
class RSpec::Matchers::BuiltIn::RaiseError
  include ::RSpec::Matchers::Composable

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#18
  def initialize(expected_error_or_message, expected_message, &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#113
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#79
  def does_not_match?(given_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#95
  def expects_call_stack_jump?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#101
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#107
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#48
  def matches?(given_proc, negative_expectation = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#85
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#90
  def supports_value_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#39
  def with_message(expected_message); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#119
  def actual_error_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#133
  def block_matches?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#129
  def error_and_message_match?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#141
  def eval_block; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#125
  def expectation_matched?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#222
  def expected_error; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#253
  def expecting_specific_exception?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#237
  def format_backtrace(backtrace); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#242
  def given_error; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#172
  def handle_warning(message); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#257
  def raise_message_already_set; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#137
  def ready_to_eval_block?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#151
  def verify_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#184
  def warn_about_bare_error!; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#176
  def warn_about_bare_error?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#210
  def warn_about_negative_false_positive!(expression); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#197
  def warn_about_nil_error!; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#180
  def warn_about_nil_error?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#156
  def warn_for_negative_false_positives!; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#262
  def warning; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/raise_error.rb#16
RSpec::Matchers::BuiltIn::RaiseError::UndefinedValue = T.let(T.unsafe(nil), Object)

# source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#72
class RSpec::Matchers::BuiltIn::ReliableMatchData
  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#73
  def initialize(match_data); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#96
  def captures; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#88
  def names; end

  protected

  # source://rspec-expectations//lib/rspec/matchers/built_in/match.rb#102
  def match_data; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#9
class RSpec::Matchers::BuiltIn::RespondTo < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#10
  def initialize(*names); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#48
  def and_any_keywords; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#36
  def and_keywords(*keywords); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#60
  def and_unlimited_arguments; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#71
  def argument; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#71
  def arguments; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#100
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#82
  def does_not_match?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#88
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#94
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#106
  def ignoring_method_signature_failure!; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#77
  def matches?(actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#24
  def with(n); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#48
  def with_any_keywords; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#36
  def with_keywords(*keywords); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#60
  def with_unlimited_arguments; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#112
  def find_failing_method_names(actual, filter_method); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#119
  def matches_arity?(actual, name); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#156
  def pp_names; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#130
  def with_arity; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#139
  def with_arity_string; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#143
  def with_keywords_string; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#161
class RSpec::Matchers::BuiltIn::RespondTo::ArityCheck
  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#162
  def initialize(expected_arity, expected_keywords, arbitrary_keywords, unlimited_arguments); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#178
  def matches?(actual, name); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#187
  def method_signature_for(actual, name); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/respond_to.rb#183
  def verifier_for(actual, name); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#7
class RSpec::Matchers::BuiltIn::Satisfy < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#8
  def initialize(description = T.unsafe(nil), &block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#21
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#27
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#33
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#14
  def matches?(actual, &block); end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#40
  def block_representation; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/satisfy.rb#48
  def extract_block_snippet; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#182
class RSpec::Matchers::BuiltIn::SpecificValuesChange < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#185
  def initialize(change_details, from, to); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#197
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#202
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#192
  def matches?(event_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#210
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#215
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#244
  def after_value_failure; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#238
  def before_value_failure; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#255
  def did_change_failure; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#250
  def did_not_change_failure; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#234
  def matches_after?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#261
  def not_given_a_block_failure; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#221
  def perform_change(event_proc); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/change.rb#183
RSpec::Matchers::BuiltIn::SpecificValuesChange::MATCH_ANYTHING = BasicObject

# source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#61
RSpec::Matchers::BuiltIn::StartAndEndWith = RSpec::Matchers::BuiltIn::StartOrEndWith

# source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#7
class RSpec::Matchers::BuiltIn::StartOrEndWith < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#8
  def initialize(*expected); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#27
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#15
  def failure_message; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#36
  def match(_expected, actual); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#48
  def subsets_comparable?; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#66
class RSpec::Matchers::BuiltIn::StartWith < ::RSpec::Matchers::BuiltIn::StartOrEndWith
  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#73
  def element_matches?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/start_or_end_with.rb#69
  def subset_matches?; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#7
class RSpec::Matchers::BuiltIn::ThrowSymbol
  include ::RSpec::Matchers::Composable

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#10
  def initialize(expected_symbol = T.unsafe(nil), expected_arg = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#86
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#68
  def does_not_match?(given_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#103
  def expects_call_stack_jump?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#74
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#80
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#18
  def matches?(given_proc); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#93
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#98
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#109
  def actual_result; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#118
  def caught; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#114
  def expected(symbol_desc = T.unsafe(nil)); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/throw_symbol.rb#122
  def throw_description(symbol, arg); end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#101
class RSpec::Matchers::BuiltIn::YieldControl < ::RSpec::Matchers::BuiltIn::BaseMatcher
  include ::RSpec::Matchers::BuiltIn::CountExpectation

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#111
  def does_not_match?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#117
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#123
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#104
  def matches?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#128
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#133
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#139
  def failure_reason; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#12
class RSpec::Matchers::BuiltIn::YieldProbe
  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#21
  def initialize(block, &callback); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#68
  def assert_used!; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#78
  def assert_valid_expect_block!; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#29
  def has_block?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#19
  def num_yields; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#19
  def num_yields=(_arg0); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#33
  def probe; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#53
  def single_yield_args; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#40
  def to_proc; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#19
  def yielded_args; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#19
  def yielded_args=(_arg0); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#57
  def yielded_once?(matcher_name); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#13
    def probe(block, &callback); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#296
class RSpec::Matchers::BuiltIn::YieldSuccessiveArgs < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#297
  def initialize(*args); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#337
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#320
  def does_not_match?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#325
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#331
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#302
  def matches?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#342
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#347
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#353
  def expected_arg_description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#365
  def negative_failure_reason; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#357
  def positive_failure_reason; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#199
class RSpec::Matchers::BuiltIn::YieldWithArgs < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#200
  def initialize(*args); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#233
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#218
  def does_not_match?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#223
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#228
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#205
  def matches?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#240
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#245
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#288
  def all_args_match?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#273
  def args_currently_match?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#257
  def expected_arg_description; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#261
  def negative_failure_reason; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#251
  def positive_failure_reason; end
end

# source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#150
class RSpec::Matchers::BuiltIn::YieldWithNoArgs < ::RSpec::Matchers::BuiltIn::BaseMatcher
  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#158
  def does_not_match?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#163
  def failure_message; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#168
  def failure_message_when_negated; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#151
  def matches?(block); end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#173
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#178
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#190
  def negative_failure_reason; end

  # source://rspec-expectations//lib/rspec/matchers/built_in/yield.rb#184
  def positive_failure_reason; end
end

# source://rspec-expectations//lib/rspec/matchers/composable.rb#10
module RSpec::Matchers::Composable
  # source://rspec-expectations//lib/rspec/matchers/composable.rb#22
  def &(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#45
  def ===(value); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#22
  def and(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#38
  def or(matcher); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#38
  def |(matcher); end

  private

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#82
  def description_of(object); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#142
  def should_enumerate?(item); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#98
  def surface_descriptions_in(item); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#147
  def unreadable_io?(object); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#66
  def values_match?(expected, actual); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#128
  def with_matchers_cloned(object); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/composable.rb#142
    def should_enumerate?(item); end

    # source://rspec-expectations//lib/rspec/matchers/composable.rb#98
    def surface_descriptions_in(item); end

    # source://rspec-expectations//lib/rspec/matchers/composable.rb#147
    def unreadable_io?(object); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/composable.rb#158
class RSpec::Matchers::Composable::DescribableItem < ::Struct
  # source://rspec-expectations//lib/rspec/matchers/composable.rb#160
  def inspect; end

  def item; end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#158
  def item=(_); end

  # source://rspec-expectations//lib/rspec/matchers/composable.rb#165
  def pretty_print(pp); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/dsl.rb#6
module RSpec::Matchers::DSL
  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#32
  def alias_matcher(new_name, old_name, options = T.unsafe(nil), &description_override); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#73
  def define(name, &declarations); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#61
  def define_negated_matcher(negated_name, base_name, &description_override); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#73
  def matcher(name, &declarations); end

  private

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#84
  def warn_about_block_args(name, declarations); end
end

# source://rspec-expectations//lib/rspec/matchers/dsl.rb#385
module RSpec::Matchers::DSL::DefaultImplementations
  include ::RSpec::Matchers::BuiltIn::BaseMatcher::DefaultFailureMessages

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#395
  def description; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#390
  def diffable?; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#412
  def expects_call_stack_jump?; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#403
  def supports_block_expectations?; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#407
  def supports_value_expectations?; end

  private

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#418
  def chained_method_clause_sentences; end
end

# source://rspec-expectations//lib/rspec/matchers/dsl.rb#104
module RSpec::Matchers::DSL::Macros
  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#298
  def chain(method_name, *attr_names, &definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#253
  def description(&definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#259
  def diffable; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#216
  def failure_message(&definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#235
  def failure_message_when_negated(&definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#131
  def match(options = T.unsafe(nil), &match_block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#188
  def match_unless_raises(expected_exception = T.unsafe(nil), &match_block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#160
  def match_when_negated(options = T.unsafe(nil), &match_block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#267
  def supports_block_expectations; end

  private

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#312
  def assign_attributes(attr_names); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#346
  def define_user_override(method_name, user_def, &our_def); end
end

# source://rspec-expectations//lib/rspec/matchers/dsl.rb#354
module RSpec::Matchers::DSL::Macros::Deprecated
  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#368
  def failure_message_for_should(&definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#374
  def failure_message_for_should_not(&definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#356
  def match_for_should(&definition); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#362
  def match_for_should_not(&definition); end
end

# source://rspec-expectations//lib/rspec/matchers/dsl.rb#146
RSpec::Matchers::DSL::Macros::RAISE_NOTIFIER = T.let(T.unsafe(nil), Proc)

# source://rspec-expectations//lib/rspec/matchers/dsl.rb#433
class RSpec::Matchers::DSL::Matcher
  include ::RSpec::Matchers::BuiltIn::BaseMatcher::DefaultFailureMessages
  include ::RSpec::Matchers::DSL::DefaultImplementations
  include ::RSpec::Matchers
  include ::RSpec::Matchers::Composable
  extend ::RSpec::Matchers::DSL::Macros
  extend ::RSpec::Matchers::DSL::Macros::Deprecated

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#462
  def initialize(name, declarations, matcher_execution_context, *expected, &block_arg); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#449
  def actual; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#456
  def block_arg; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#482
  def expected; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#494
  def expected_as_array; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#499
  def inspect; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#459
  def name; end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#453
  def rescued_exception; end

  private

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#522
  def actual_arg_for(block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#532
  def method_missing(method, *args, &block); end

  # source://rspec-expectations//lib/rspec/matchers/dsl.rb#507
  def respond_to_missing?(method, include_private = T.unsafe(nil)); end
end

# source://rspec-expectations//lib/rspec/matchers.rb#959
RSpec::Matchers::DYNAMIC_MATCHER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-expectations//lib/rspec/matchers/english_phrasing.rb#4
module RSpec::Matchers::EnglishPhrasing
  class << self
    # source://rspec-expectations//lib/rspec/matchers/english_phrasing.rb#26
    def list(obj); end

    # source://rspec-expectations//lib/rspec/matchers/english_phrasing.rb#9
    def split_words(sym); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#6
class RSpec::Matchers::ExpectedsForMultipleDiffs
  # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#16
  def initialize(expected_list); end

  # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#47
  def message_with_diff(message, differ, actual); end

  private

  # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#68
  def diffs(differ, actual); end

  class << self
    # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#36
    def for_many_matchers(matchers); end

    # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#26
    def from(expected); end

    private

    # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#58
    def diff_label_for(matcher); end

    # source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#62
    def truncated(description); end
  end
end

# source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#10
RSpec::Matchers::ExpectedsForMultipleDiffs::DEFAULT_DIFF_LABEL = T.let(T.unsafe(nil), String)

# source://rspec-expectations//lib/rspec/matchers/expecteds_for_multiple_diffs.rb#14
RSpec::Matchers::ExpectedsForMultipleDiffs::DESCRIPTION_MAX_LENGTH = T.let(T.unsafe(nil), Integer)

# source://rspec-expectations//lib/rspec/matchers.rb#958
RSpec::Matchers::HAS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-expectations//lib/rspec/matchers/matcher_delegator.rb#5
class RSpec::Matchers::MatcherDelegator
  include ::RSpec::Matchers::Composable

  # source://rspec-expectations//lib/rspec/matchers/matcher_delegator.rb#9
  def initialize(base_matcher); end

  # source://rspec-expectations//lib/rspec/matchers/matcher_delegator.rb#7
  def base_matcher; end

  # source://rspec-expectations//lib/rspec/matchers/matcher_delegator.rb#13
  def method_missing(*args, &block); end

  private

  # source://rspec-expectations//lib/rspec/matchers/matcher_delegator.rb#29
  def initialize_copy(other); end

  # source://rspec-expectations//lib/rspec/matchers/matcher_delegator.rb#18
  def respond_to_missing?(name, include_all = T.unsafe(nil)); end
end
