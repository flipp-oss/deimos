# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-mocks` gem.
# Please instead update this file by running `bin/tapioca gem rspec-mocks`.

# source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#1
module RSpec
  class << self
    # source://rspec-core/3.12.2/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.12.2/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.12.2/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.12.2/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.12.2/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.2/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#2
module RSpec::Mocks
  class << self
    # source://rspec-mocks//lib/rspec/mocks.rb#69
    def allow_message(subject, message, opts = T.unsafe(nil), &block); end

    # source://rspec-mocks//lib/rspec/mocks/configuration.rb#206
    def configuration; end

    # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#386
    def error_generator; end

    # source://rspec-mocks//lib/rspec/mocks.rb#84
    def expect_message(subject, message, opts = T.unsafe(nil), &block); end

    # source://rspec-mocks//lib/rspec/mocks.rb#38
    def setup; end

    # source://rspec-mocks//lib/rspec/mocks.rb#106
    def space; end

    # source://rspec-mocks//lib/rspec/mocks.rb#51
    def teardown; end

    # source://rspec-mocks//lib/rspec/mocks.rb#44
    def verify; end

    # source://rspec-mocks//lib/rspec/mocks.rb#92
    def with_temporary_scope; end
  end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#92
class RSpec::Mocks::AllowanceTarget < ::RSpec::Mocks::TargetBase
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#93
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def not_to(matcher, *_args); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def to_not(matcher, *_args); end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#737
class RSpec::Mocks::AndInvokeImplementation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#738
  def initialize(procs_to_invoke); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#742
  def call(*args, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#721
class RSpec::Mocks::AndReturnImplementation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#722
  def initialize(values_to_return); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#726
  def call(*_args_to_ignore, &_block); end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#779
class RSpec::Mocks::AndWrapOriginalImplementation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#780
  def initialize(method, block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#807
  def call(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#787
  def initial_action=(_value); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#803
  def inner_action; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#791
  def inner_action=(_value); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#799
  def present?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#795
  def terminal_action=(_value); end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#814
  def cannot_modify_further_error; end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#785
class RSpec::Mocks::AndWrapOriginalImplementation::CannotModifyFurtherError < ::StandardError; end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#694
class RSpec::Mocks::AndYieldImplementation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#695
  def initialize(args_to_yield, eval_context, error_generator); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#701
  def call(*_args_to_ignore, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#4
module RSpec::Mocks::AnyInstance
  class << self
    # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#26
    def error_generator; end
  end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#6
class RSpec::Mocks::AnyInstance::Chain
  include ::RSpec::Mocks::AnyInstance::Chain::Customizations

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#7
  def initialize(recorder, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#61
  def constrained_to_any_of?(*constraints); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#75
  def expectation_fulfilled!; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#70
  def matches_args?(*args); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#79
  def never; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#53
  def playback!(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#84
  def with(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#99
  def last_message; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#95
  def messages; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#91
  def negated?; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#103
  def record(rspec_method_name, *args, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#18
module RSpec::Mocks::AnyInstance::Chain::Customizations
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_call_original(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_raise(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_return(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_throw(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_wrap_original(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_yield(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def at_least(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def at_most(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def exactly(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def never(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def once(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def thrice(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def time(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def times(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def twice(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def with(*args, &block); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#26
    def record(method_name); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#5
class RSpec::Mocks::AnyInstance::ErrorGenerator < ::RSpec::Mocks::ErrorGenerator
  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#11
  def raise_does_not_implement_error(klass, method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#15
  def raise_message_already_received_by_other_instance_error(method_name, object_inspect, invoked_instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#20
  def raise_not_supported_with_prepend_error(method_name, problem_mod); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#6
  def raise_second_instance_received_message_error(unfulfilled_expectations); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#5
class RSpec::Mocks::AnyInstance::ExpectChainChain < ::RSpec::Mocks::AnyInstance::StubChain
  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#6
  def initialize(*args); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#11
  def expectation_fulfilled?; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#15
  def playback!(instance); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#21
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#25
  def invocation_order; end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#5
class RSpec::Mocks::AnyInstance::ExpectationChain < ::RSpec::Mocks::AnyInstance::Chain
  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#10
  def initialize(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#6
  def expectation_fulfilled?; end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#17
  def verify_invocation_order(_rspec_method_name, *_args, &_block); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#103
class RSpec::Mocks::AnyInstance::FluentInterfaceProxy < ::BasicObject
  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#104
  def initialize(targets); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#118
  def method_missing(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#109
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#5
class RSpec::Mocks::AnyInstance::MessageChains
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#6
  def initialize; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#11
  def [](method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#16
  def add(method_name, chain); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#43
  def all_expectations_fulfilled?; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#36
  def each_unfulfilled_expectation_matching(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#29
  def has_expectation?(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#64
  def playback!(instance, method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#57
  def received_expected_message!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#22
  def remove_stub_chains_for!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#50
  def unfulfilled_expectations; end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#73
  def raise_if_second_instance_to_receive_message(instance); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#22
class RSpec::Mocks::AnyInstance::PositiveExpectationChain < ::RSpec::Mocks::AnyInstance::ExpectationChain
  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#25
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#44
  def invocation_order; end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#38
RSpec::Mocks::AnyInstance::PositiveExpectationChain::ExpectationInvocationOrder = T.let(T.unsafe(nil), Hash)

# source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#21
class RSpec::Mocks::AnyInstance::Proxy
  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#22
  def initialize(recorder, target_proxies); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#55
  def expect_chain(*chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#27
  def klass; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#71
  def should_not_receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#61
  def should_receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#31
  def stub(method_name_or_method_map, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#49
  def stub_chain(*chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#43
  def unstub(method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#79
  def perform_proxying(method_name, args, block, &target_proxy_block); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#12
class RSpec::Mocks::AnyInstance::Recorder
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#16
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#127
  def already_observing?(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#122
  def build_alias_method_name(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#53
  def expect_chain(*method_names_and_optional_return_values, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#117
  def instance_that_received(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#14
  def klass; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#14
  def message_chains; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#132
  def notify_received_message(_object, message, args, _blk); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#109
  def playback!(instance, method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#75
  def should_not_receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#66
  def should_receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#104
  def stop_all_observation!; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#35
  def stub(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#45
  def stub_chain(*method_names_and_optional_return_values, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#14
  def stubs; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#83
  def unstub(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#96
  def verify; end

  protected

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#148
  def stop_observing!(method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#280
  def allow_no_prepended_module_definition_of(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#159
  def ancestor_is_an_observer?(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#233
  def backup_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#267
  def mark_invoked!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#176
  def normalize_chain(*args); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#247
  def observe!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#243
  def public_protected_or_private_method_defined?(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#181
  def received_expected_message!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#227
  def remove_dummy_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#187
  def restore_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#195
  def restore_original_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#168
  def super_class_observers_for(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#172
  def super_class_observing?(method_name); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#6
class RSpec::Mocks::AnyInstance::StubChain < ::RSpec::Mocks::AnyInstance::Chain
  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#7
  def expectation_fulfilled?; end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#13
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#40
  def invocation_order; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#44
  def verify_invocation_order(rspec_method_name, *_args, &_block); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#38
RSpec::Mocks::AnyInstance::StubChain::EmptyInvocationOrder = T.let(T.unsafe(nil), Hash)

# source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#28
RSpec::Mocks::AnyInstance::StubChain::InvocationOrder = T.let(T.unsafe(nil), Hash)

# source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#5
class RSpec::Mocks::AnyInstance::StubChainChain < ::RSpec::Mocks::AnyInstance::StubChain
  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#6
  def initialize(*args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#13
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#17
  def invocation_order; end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#103
class RSpec::Mocks::AnyInstanceAllowanceTarget < ::RSpec::Mocks::TargetBase
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#104
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def not_to(matcher, *_args); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def to_not(matcher, *_args); end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#114
class RSpec::Mocks::AnyInstanceExpectationTarget < ::RSpec::Mocks::TargetBase
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#115
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def not_to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def to_not(matcher, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#33
class RSpec::Mocks::ArgumentListMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#45
  def initialize(*expected_args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#58
  def args_match?(*actual_args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#35
  def expected_args; end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#81
  def resolve_expected_args_based_on(actual_args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#100
  def ensure_expected_args_valid!; end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#92
  def replace_any_args_with_splat_of_anything(before_count, actual_args_count); end
end

# source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#114
RSpec::Mocks::ArgumentListMatcher::MATCH_ALL = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentListMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#16
module RSpec::Mocks::ArgumentMatchers
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#111
  def a_kind_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#101
  def an_instance_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#26
  def any_args; end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#34
  def anything; end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#80
  def array_including(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#59
  def boolean; end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#51
  def duck_type(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#91
  def hash_excluding(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#70
  def hash_including(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#91
  def hash_not_including(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#101
  def instance_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#111
  def kind_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#42
  def no_args; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#118
    def anythingize_lonely_keys(*args); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#149
class RSpec::Mocks::ArgumentMatchers::AnyArgMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#150
  def ===(_other); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#154
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::AnyArgMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::AnyArgMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#142
class RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#143
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#232
class RSpec::Mocks::ArgumentMatchers::ArrayIncludingMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#233
  def initialize(expected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#237
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#248
  def description; end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#254
  def formatted_expected_values; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#178
class RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#179
  def initialize(expected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#183
  def ===(predicate, actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#191
  def description(name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#197
  def formatted_expected_hash; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#167
class RSpec::Mocks::ArgumentMatchers::BooleanMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#168
  def ===(value); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#172
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::BooleanMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::BooleanMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#262
class RSpec::Mocks::ArgumentMatchers::DuckTypeMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#263
  def initialize(*methods_to_respond_to); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#267
  def ===(value); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#271
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#221
class RSpec::Mocks::ArgumentMatchers::HashExcludingMatcher < ::RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#222
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#226
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#210
class RSpec::Mocks::ArgumentMatchers::HashIncludingMatcher < ::RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#211
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#215
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#277
class RSpec::Mocks::ArgumentMatchers::InstanceOf
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#278
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#282
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#286
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#292
class RSpec::Mocks::ArgumentMatchers::KindOf
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#293
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#297
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#301
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#160
class RSpec::Mocks::ArgumentMatchers::NoArgsMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#161
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::NoArgsMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::NoArgsMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#133
class RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  class << self
    # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#136
    def inherited(subklass); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#7
class RSpec::Mocks::CallbackInvocationStrategy
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#8
  def call(doubled_module); end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#26
class RSpec::Mocks::CannotSupportArgMutationsError < ::StandardError; end

# source://rspec-mocks//lib/rspec/mocks/method_reference.rb#184
class RSpec::Mocks::ClassNewMethodReference < ::RSpec::Mocks::ObjectMethodReference
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#207
  def with_signature; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#185
    def applies_to?(method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#202
    def uses_class_new?(klass); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#119
class RSpec::Mocks::ClassVerifyingDouble < ::Module
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble
  include ::RSpec::Mocks::ObjectVerifyingDoubleMethods
end

# source://rspec-mocks//lib/rspec/mocks/configuration.rb#4
class RSpec::Mocks::Configuration
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#5
  def initialize; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#62
  def add_stub_and_should_receive_to(*modules); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#29
  def allow_message_expectations_on_nil; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#29
  def allow_message_expectations_on_nil=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#128
  def before_verifying_doubles(&block); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#164
  def color?; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#188
  def patch_marshal_to_support_partial_doubles=(val); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#198
  def reset_syntaxes_to_default; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#104
  def syntax; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#81
  def syntax=(*values); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#161
  def temporarily_suppress_partial_double_verification; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#161
  def temporarily_suppress_partial_double_verification=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#145
  def transfer_nested_constants=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#139
  def transfer_nested_constants?; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#120
  def verify_doubled_constant_names=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#111
  def verify_doubled_constant_names?; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#150
  def verify_partial_doubles=(val); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#154
  def verify_partial_doubles?; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#135
  def verifying_double_callbacks; end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#128
  def when_declaring_verifying_double(&block); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#46
  def yield_receiver_to_any_instance_implementation_blocks=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#31
  def yield_receiver_to_any_instance_implementation_blocks?; end
end

# source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#7
class RSpec::Mocks::Constant
  extend ::RSpec::Support::RecursiveConstMethods

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#11
  def initialize(name); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def hidden=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#51
  def hidden?; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#62
  def inspect; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#39
  def mutated?; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#21
  def name; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#26
  def original_value; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#26
  def original_value=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def previously_defined=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#33
  def previously_defined?; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def stubbed=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#45
  def stubbed?; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#62
  def to_s; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def valid_name=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#57
  def valid_name?; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#86
    def original(name); end

    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#68
    def unmutated(name); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#93
class RSpec::Mocks::ConstantMutator
  extend ::RSpec::Support::RecursiveConstMethods

  class << self
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#131
    def hide(constant_name); end

    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#320
    def mutate(mutator); end

    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#331
    def raise_on_invalid_const; end

    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#107
    def stub(constant_name, value, options = T.unsafe(nil)); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#139
class RSpec::Mocks::ConstantMutator::BaseMutator
  include ::RSpec::Support::RecursiveConstMethods

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#144
  def initialize(full_constant_name, mutated_value, transfer_nested_constants); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#142
  def full_constant_name; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#160
  def idempotently_reset; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#142
  def original_value; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#153
  def to_constant; end
end

# source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#169
class RSpec::Mocks::ConstantMutator::ConstantHider < ::RSpec::Mocks::ConstantMutator::BaseMutator
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#170
  def mutate; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#188
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#178
  def to_constant; end
end

# source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#197
class RSpec::Mocks::ConstantMutator::DefinedConstantReplacer < ::RSpec::Mocks::ConstantMutator::BaseMutator
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#198
  def initialize(*args); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#203
  def mutate; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#223
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#268
  def should_transfer_nested_constants?; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#215
  def to_constant; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#232
  def transfer_nested_constants; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#238
  def verify_constants_to_transfer!; end
end

# source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#278
class RSpec::Mocks::ConstantMutator::UndefinedConstantSetter < ::RSpec::Mocks::ConstantMutator::BaseMutator
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#279
  def mutate; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#299
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#291
  def to_constant; end

  private

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#305
  def name_for(parent, name); end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#104
RSpec::Mocks::DEFAULT_CALLBACK_INVOCATION_STRATEGY = T.let(T.unsafe(nil), RSpec::Mocks::CallbackInvocationStrategy)

# source://rspec-mocks//lib/rspec/mocks/object_reference.rb#56
class RSpec::Mocks::DirectObjectReference
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#58
  def initialize(object); end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#70
  def const_to_replace; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#85
  def defined?; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#63
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#78
  def target; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#97
  def when_loaded; end
end

# source://rspec-mocks//lib/rspec/mocks/test_double.rb#132
class RSpec::Mocks::Double
  include ::RSpec::Mocks::TestDouble
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#36
class RSpec::Mocks::ErrorGenerator
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#39
  def initialize(target = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#71
  def default_error_message(expectation, expected_args, actual_args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#132
  def describe_expectation(verb, message, expected_received_count, _actual_received_count, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#215
  def expectation_on_nil_message(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#222
  def intro(unwrapped = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#235
  def method_call_args_description(args, generic_prefix = T.unsafe(nil), matcher_prefix = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#44
  def opts; end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#37
  def opts=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#203
  def raise_already_invoked_error(message, calling_customization); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#193
  def raise_cant_constrain_count_for_negated_have_received_error(count_constraint); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#170
  def raise_double_negation_error(wrapped_expression); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#77
  def raise_expectation_error(message, expected_received_count, argument_list_matcher, actual_received_count, expectation_count_type, args, backtrace_line = T.unsafe(nil), source_id = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#164
  def raise_expectation_on_mocked_method(method); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#211
  def raise_expectation_on_nil_error(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#158
  def raise_expectation_on_unstubbed_method(method); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#123
  def raise_expired_test_double_error; end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#187
  def raise_have_received_disallowed(type, reason); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#118
  def raise_invalid_arguments_error(verifier); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#198
  def raise_method_not_stubbed_error(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#142
  def raise_missing_block_error(args_to_yield); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#59
  def raise_missing_default_stub_error(expectation, args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#111
  def raise_non_public_error(method_name, visibility); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#152
  def raise_only_valid_on_a_partial_double(method); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#137
  def raise_out_of_order_error(message); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#67
  def raise_similar_message_args_error(expectation, args_for_multiple_calls, backtrace_line = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#54
  def raise_unexpected_message_args_error(expectation, args_for_multiple_calls, source_id = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#49
  def raise_unexpected_message_error(message, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#87
  def raise_unimplemented_error(doubled_module, method_name, object); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#178
  def raise_verifying_double_not_defined_error(ref); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#147
  def raise_wrong_arity_error(args_to_yield, signature); end

  private

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#328
  def __raise(message, backtrace_line = T.unsafe(nil), source_id = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#356
  def arg_list(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#366
  def count_message(count, expectation_count_type = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#302
  def diff_message(expected_args, actual_args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#324
  def differ; end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#268
  def error_message(expectation, args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#257
  def expected_part_of_expectation_error(expected_received_count, expectation_count_type, argument_list_matcher); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#351
  def format_args(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#360
  def format_received_args(args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#380
  def group_count(index, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#376
  def grouped_args(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#320
  def list_of_exactly_one_string?(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#347
  def notify(*args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#342
  def prepend_to_backtrace(exception, line); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#250
  def received_part_of_expectation_error(actual_received_count, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#372
  def times(count); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#264
  def unexpected_arguments_message(expected_args_string, actual_args_string); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#312
  def unpack_string_args(formatted_expected_args, actual_args); end
end

# source://rspec-mocks//lib/rspec/mocks/example_methods.rb#9
module RSpec::Mocks::ExampleMethods
  include ::RSpec::Mocks::ArgumentMatchers
  include ::RSpec::Mocks::ExampleMethods::ExpectHost

  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#128
  def allow(target); end

  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#136
  def allow_any_instance_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#201
  def allow_message_expectations_on_nil; end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#79
  def class_double(doubled_class, *args); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#191
  def class_spy(*args); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#34
  def double(*args); end

  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#132
  def expect_any_instance_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#281
  def have_received(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#256
  def hide_const(constant_name); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#56
  def instance_double(doubled_class, *args); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#144
  def instance_spy(*args); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#102
  def object_double(object_or_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#167
  def object_spy(*args); end

  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#114
  def receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#124
  def receive_message_chain(*messages, &block); end

  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#118
  def receive_messages(message_return_value_hash); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#120
  def spy(*args); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#241
  def stub_const(constant_name, value, options = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#289
  def without_partial_double_verification; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#423
    def declare_double(type, *args); end

    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#408
    def declare_verifying_double(type, ref, *args); end

    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#401
    def extended(object); end

    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#392
    def included(klass); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/example_methods.rb#430
module RSpec::Mocks::ExampleMethods::ExpectHost
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#142
  def expect(target); end
end

# source://rspec-mocks//lib/rspec/mocks/message_chain.rb#62
class RSpec::Mocks::ExpectChain < ::RSpec::Mocks::MessageChain
  private

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#69
  def expectation(object, message, &return_block); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#63
    def expect_chain_on(object, *chain, &blk); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#87
class RSpec::Mocks::ExpectationTarget < ::RSpec::Mocks::TargetBase
  include ::RSpec::Mocks::ExpectationTargetMethods
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#73
module RSpec::Mocks::ExpectationTargetMethods
  include ::RSpec::Mocks::TargetDelegationInstanceMethods
  extend ::RSpec::Mocks::TargetDelegationClassMethods

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#81
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def not_to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def to_not(matcher, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#10
class RSpec::Mocks::ExpiredTestDoubleError < ::RSpec::Mocks::MockExpectationError; end

# source://rspec-mocks//lib/rspec/mocks.rb#112
RSpec::Mocks::IGNORED_BACKTRACE_LINE = T.let(T.unsafe(nil), String)

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#756
class RSpec::Mocks::Implementation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#759
  def call(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def initial_action; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def initial_action=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def inner_action; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def inner_action=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#766
  def present?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def terminal_action; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def terminal_action=(_arg0); end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#772
  def actions; end
end

# source://rspec-mocks//lib/rspec/mocks/method_reference.rb#113
class RSpec::Mocks::InstanceMethodReference < ::RSpec::Mocks::MethodReference
  private

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#138
  def find_method(mod); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#116
  def method_defined?(mod); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#116
  def method_implemented?(mod); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#143
  def visibility_from(mod); end
end

# source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#4
class RSpec::Mocks::InstanceMethodStasher
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#5
  def initialize(object, method); end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#91
  def handle_restoration_failures; end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#49
  def method_is_stashed?; end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#14
  def original_method; end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#61
  def restore; end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#54
  def stash; end

  private

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#100
  def method_defined_directly_on_klass?; end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#105
  def method_defined_on_klass?(klass = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#109
  def method_owned_by_klass?; end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#71
class RSpec::Mocks::InstanceVerifyingDouble
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#75
  def __build_mock_proxy(order_group); end
end

# source://rspec-mocks//lib/rspec/mocks/marshal_extension.rb#6
class RSpec::Mocks::MarshalExtension
  class << self
    # source://rspec-mocks//lib/rspec/mocks/marshal_extension.rb#7
    def patch!; end

    # source://rspec-mocks//lib/rspec/mocks/marshal_extension.rb#27
    def unpatch!; end
  end
end

# source://rspec-mocks//lib/rspec/mocks.rb#122
module RSpec::Mocks::Matchers; end

# source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#5
class RSpec::Mocks::Matchers::ExpectationCustomization
  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#8
  def initialize(method_name, args, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#6
  def block; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#6
  def block=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#14
  def playback_onto(expectation); end
end

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#5
class RSpec::Mocks::Matchers::HaveReceived
  include ::RSpec::Mocks::Matchers::Matcher

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#12
  def initialize(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def at_least(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def at_most(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#48
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#32
  def does_not_match?(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def exactly(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#40
  def failure_message; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#44
  def failure_message_when_negated; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#19
  def matcher_name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#23
  def matches?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def once(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def ordered(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#67
  def setup_allowance(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#71
  def setup_any_instance_allowance(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#75
  def setup_any_instance_expectation(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#79
  def setup_any_instance_negative_expectation(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#59
  def setup_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#63
  def setup_negative_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def thrice(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def time(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def times(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def twice(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def with(*args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#95
  def apply_constraints_to(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#112
  def capture_failure_message; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#106
  def count_constraint; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#85
  def disallow(type, reason = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#101
  def ensure_count_unconstrained; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#89
  def expect; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#123
  def expected_messages_received_in_order?; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#128
  def mock_proxy; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#118
  def notify_failure_message; end
end

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#9
RSpec::Mocks::Matchers::HaveReceived::ARGS_CONSTRAINTS = T.let(T.unsafe(nil), Array)

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#10
RSpec::Mocks::Matchers::HaveReceived::CONSTRAINTS = T.let(T.unsafe(nil), Array)

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#8
RSpec::Mocks::Matchers::HaveReceived::COUNT_CONSTRAINTS = T.let(T.unsafe(nil), Array)

# source://rspec-mocks//lib/rspec/mocks.rb#125
module RSpec::Mocks::Matchers::Matcher; end

# source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#7
class RSpec::Mocks::Matchers::Receive
  include ::RSpec::Mocks::Matchers::Matcher

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#10
  def initialize(message, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_call_original(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_invoke(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_raise(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_return(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_throw(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_wrap_original(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def and_yield(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def at_least(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def at_most(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#20
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#30
  def does_not_match?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def exactly(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def inspect(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#16
  def matcher_name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#24
  def matches?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def never(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def once(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def ordered(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#41
  def setup_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#54
  def setup_any_instance_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#46
  def setup_any_instance_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#50
  def setup_any_instance_negative_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#24
  def setup_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#30
  def setup_negative_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def thrice(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def time(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def times(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def to_s(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def twice(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#62
  def with(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#71
  def describable; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#108
  def move_block_to_last_customization(block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#91
  def setup_any_instance_method_substitute(subject, method, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#96
  def setup_method_substitute(host, method, block, *args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#86
  def setup_mock_proxy_method_substitute(subject, method, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#75
  def warn_if_any_instance(expression, subject); end
end

# source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#119
class RSpec::Mocks::Matchers::Receive::DefaultDescribable
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#120
  def initialize(message); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#127
  def description_for(verb); end
end

# source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#7
class RSpec::Mocks::Matchers::ReceiveMessageChain
  include ::RSpec::Mocks::Matchers::Matcher

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#10
  def initialize(chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_call_original(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_invoke(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_raise(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_return(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_throw(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_yield(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#27
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#53
  def does_not_match?(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#23
  def matcher_name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#48
  def matches?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#31
  def setup_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#36
  def setup_any_instance_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#42
  def setup_any_instance_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#48
  def setup_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#53
  def setup_negative_expectation(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def with(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#70
  def formatted_chain; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#64
  def replay_customizations(chain); end
end

# source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#5
class RSpec::Mocks::Matchers::ReceiveMessages
  include ::RSpec::Mocks::Matchers::Matcher

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#8
  def initialize(message_return_value_hash); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#17
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#29
  def does_not_match?(_subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#13
  def matcher_name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#21
  def matches?(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#36
  def setup_allowance(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#50
  def setup_any_instance_allowance(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#43
  def setup_any_instance_expectation(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#21
  def setup_expectation(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#29
  def setup_negative_expectation(_subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#55
  def warn_about_block; end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#65
  def any_instance_of(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#69
  def each_message_on(host); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#61
  def proxy_on(subject); end
end

# source://rspec-mocks//lib/rspec/mocks/message_chain.rb#4
class RSpec::Mocks::MessageChain
  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#7
  def initialize(object, *chain, &blk); end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#5
  def block; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#5
  def chain; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#5
  def object; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#13
  def setup_chain; end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#33
  def chain_on(object, *chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#54
  def find_matching_expectation; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#49
  def find_matching_stub; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#38
  def format_chain(*chain, &blk); end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#44
class RSpec::Mocks::MessageExpectation
  include ::RSpec::Mocks::MessageExpectation::ImplementationDetails

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#141
  def and_call_original; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#109
  def and_invoke(first_proc, *procs); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#186
  def and_raise(*args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#71
  def and_return(first_value, *values); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#202
  def and_throw(*args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#162
  def and_wrap_original(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#214
  def and_yield(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#249
  def at_least(n, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#268
  def at_most(n, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#236
  def exactly(n, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#396
  def inspect; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#293
  def never; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#304
  def once(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#379
  def ordered(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#326
  def thrice(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#282
  def time(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#282
  def times(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#396
  def to_s; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#315
  def twice(&block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#359
  def with(*args, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#409
module RSpec::Mocks::MessageExpectation::ImplementationDetails
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#420
  def initialize(error_generator, expectation_ordering, expected_from, method_double, type = T.unsafe(nil), opts = T.unsafe(nil), &implementation_block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#588
  def actual_received_count_matters?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#575
  def additional_expected_calls; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#532
  def advise(*args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#454
  def and_yield_receiver_to_implementation; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#413
  def argument_list_matcher=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#487
  def called_max_times?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#564
  def description_for(verb); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#507
  def ensure_expected_ordering_received!; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def error_generator; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#558
  def expectation_count_type; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#450
  def expected_args; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#503
  def expected_messages_received?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#540
  def generate_error; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#512
  def ignoring_args?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def implementation; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#592
  def increase_actual_received_count!; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#473
  def invoke(parent_stub, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#478
  def invoke_without_incrementing_received_count(parent_stub, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#463
  def matches?(message, *args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#516
  def matches_at_least_count?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#520
  def matches_at_most_count?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#524
  def matches_exact_count?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#494
  def matches_name_but_not_args(message, *args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#411
  def message; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#483
  def negative?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#584
  def negative_expectation_for?(message); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#580
  def ordered?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#412
  def orig_object; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#571
  def raise_out_of_order_error; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#554
  def raise_unexpected_message_args_error(args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#468
  def safe_invoke(parent_stub, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#528
  def similar_messages; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#417
  def type; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#536
  def unadvise(args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#498
  def verify_messages_received; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#459
  def yield_receiver_to_implementation_block?; end

  protected

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def error_generator=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#413
  def expected_from=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#413
  def expected_received_count=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def implementation=(_arg0); end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#600
  def exception_source_id; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#632
  def has_been_invoked?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#655
  def initial_implementation_action=(action); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#659
  def inner_implementation_action=(action); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#604
  def invoke_incrementing_actual_calls_by(increment, allowed_to_fail, parent_stub, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#636
  def raise_already_invoked_error_if_necessary(calling_customization); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#642
  def set_expected_received_count(relativity, n); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#665
  def terminal_implementation_action=(action); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#669
  def warn_about_stub_override; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#676
  def wrap_original(method_name, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/method_double.rb#4
class RSpec::Mocks::MethodDouble
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#12
  def initialize(object, method_name, proxy); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#209
  def add_default_stub(*args, &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#159
  def add_expectation(error_generator, expectation_ordering, expected_from, opts, &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#195
  def add_simple_expectation(method_name, response, error_generator, backtrace_line); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#190
  def add_simple_stub(method_name, response); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#174
  def add_stub(error_generator, expectation_ordering, expected_from, opts = T.unsafe(nil), &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#168
  def build_expectation(error_generator, expectation_ordering); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#145
  def clear; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#54
  def configure_method; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#61
  def define_proxy_method; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#9
  def expectations; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#154
  def message_expectation_class; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#9
  def method_name; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#9
  def method_stasher; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#9
  def object; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#49
  def object_singleton_class; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#24
  def original_implementation_callable; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#37
  def original_method; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#90
  def proxy_method_invoked(_obj, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#226
  def raise_method_not_stubbed_error; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#215
  def remove_stub; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#221
  def remove_stub_if_present; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#139
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#96
  def restore_original_method; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#126
  def restore_original_visibility; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#24
  def save_original_implementation_callable!; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#200
  def setup_simple_method_double(method_name, response, collection, error_generator = T.unsafe(nil), backtrace_line = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#115
  def show_frozen_warning; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#9
  def stubs; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#134
  def verify; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#44
  def visibility; end

  private

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#248
  def definition_target; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#268
  def new_rspec_prepended_module; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#286
  def remove_method_from_definition_target; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#252
  def usable_rspec_prepended_module; end
end

# source://rspec-mocks//lib/rspec/mocks/method_double.rb#6
RSpec::Mocks::MethodDouble::FROZEN_ERROR_MSG = T.let(T.unsafe(nil), Regexp)

# source://rspec-mocks//lib/rspec/mocks/method_double.rb#246
class RSpec::Mocks::MethodDouble::RSpecPrependedModule < ::Module; end

# source://rspec-mocks//lib/rspec/mocks/method_reference.rb#10
class RSpec::Mocks::MethodReference
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#15
  def initialize(object_reference, method_name); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#46
  def defined?; end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#23
  def implemented?; end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#35
  def unimplemented?; end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#57
  def visibility; end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#52
  def with_signature; end

  private

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#105
  def original_method; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#11
    def for(object_reference, method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#67
    def instance_method_visibility_for(klass, method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#67
    def method_defined_at_any_visibility?(klass, method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#81
    def method_visibility_for(object, method_name); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#18
class RSpec::Mocks::MockExpectationAlreadyInvokedError < ::Exception; end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#6
class RSpec::Mocks::MockExpectationError < ::Exception; end

# source://rspec-mocks//lib/rspec/mocks/object_reference.rb#109
class RSpec::Mocks::NamedObjectReference
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#111
  def initialize(const_name); end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#121
  def const_to_replace; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#116
  def defined?; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#121
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#128
  def target; end

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#137
  def when_loaded; end

  private

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#143
  def object; end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#31
class RSpec::Mocks::NegationUnsupportedError < ::StandardError; end

# source://rspec-mocks//lib/rspec/mocks/space.rb#209
class RSpec::Mocks::NestedSpace < ::RSpec::Mocks::Space
  # source://rspec-mocks//lib/rspec/mocks/space.rb#210
  def initialize(parent); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#219
  def constant_mutator_for(name); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#215
  def proxies_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#223
  def registered?(object); end

  private

  # source://rspec-mocks//lib/rspec/mocks/space.rb#233
  def any_instance_recorder_not_found_for(id, klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#229
  def proxy_not_found_for(id, object); end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#16
class RSpec::Mocks::NoCallbackInvocationStrategy
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#17
  def call(_doubled_module); end
end

# source://rspec-mocks//lib/rspec/mocks/method_reference.rb#149
class RSpec::Mocks::ObjectMethodReference < ::RSpec::Mocks::MethodReference
  private

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#168
  def find_method(object); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#164
  def method_defined?(object); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#160
  def method_implemented?(object); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#172
  def visibility_from(object); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#150
    def for(object_reference, method_name); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/object_reference.rb#4
class RSpec::Mocks::ObjectReference
  class << self
    # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#7
    def for(object_module_or_name, allow_direct_object_refs = T.unsafe(nil)); end

    private

    # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#31
    def anonymous_module?(mod); end

    # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#41
    def name_of(mod); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/object_reference.rb#47
RSpec::Mocks::ObjectReference::MODULE_NAME_METHOD = T.let(T.unsafe(nil), UnboundMethod)

# source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#110
class RSpec::Mocks::ObjectVerifyingDouble
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble
  include ::RSpec::Mocks::ObjectVerifyingDoubleMethods
end

# source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#87
module RSpec::Mocks::ObjectVerifyingDoubleMethods
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#91
  def as_stubbed_const(options = T.unsafe(nil)); end

  private

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#98
  def __build_mock_proxy(order_group); end
end

# source://rspec-mocks//lib/rspec/mocks/order_group.rb#4
class RSpec::Mocks::OrderGroup
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#5
  def initialize; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#48
  def clear; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#26
  def consume; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#54
  def empty?; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#37
  def handle_order_constraint(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#16
  def invoked(message); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#21
  def ready_for?(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#12
  def register(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#43
  def verify_invocation_order(expectation); end

  private

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#76
  def expectation_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#64
  def expectations_invoked_in_order?; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#72
  def expected_invocations; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#68
  def invoked_expectations; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#60
  def remaining_expectations; end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#13
class RSpec::Mocks::OutsideOfExampleError < ::StandardError; end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#459
class RSpec::Mocks::PartialClassDoubleProxy < ::RSpec::Mocks::PartialDoubleProxy
  include ::RSpec::Mocks::PartialClassDoubleProxyMethods
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#383
module RSpec::Mocks::PartialClassDoubleProxyMethods
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#384
  def initialize(source_space, *args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#409
  def original_method_handle_for(message); end

  protected

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#437
  def method_double_from_ancestor_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#432
  def original_unbound_method_handle_from_ancestor_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#447
  def superclass_proxy; end
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#320
class RSpec::Mocks::PartialDoubleProxy < ::RSpec::Mocks::Proxy
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#334
  def add_simple_expectation(method_name, response, location); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#340
  def add_simple_stub(method_name, response); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#357
  def message_received(message, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#321
  def original_method_handle_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#352
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#346
  def visibility_for(method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#367
  def any_instance_class_recorder_observing_method?(klass, method_name); end
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#4
class RSpec::Mocks::Proxy
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#23
  def initialize(object, order_group, options = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#68
  def add_message_expectation(method_name, opts = T.unsafe(nil), &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#82
  def add_simple_expectation(method_name, response, location); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#143
  def add_simple_stub(method_name, response); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#137
  def add_stub(method_name, opts = T.unsafe(nil), &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#55
  def as_null_object; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#87
  def build_expectation(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#120
  def check_for_unexpected_arguments(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#37
  def ensure_can_be_proxied!(object); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#18
  def ensure_implemented(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#184
  def has_negative_expectation?(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#198
  def message_received(message, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#177
  def messages_arg_list; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#263
  def method_double_if_exists_for_message(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#48
  def null_object?; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#45
  def object; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#61
  def original_method_handle_for(_message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#257
  def prepended_modules_of_singleton_class; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#236
  def raise_missing_default_stub_error(expectation, args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#231
  def raise_unexpected_message_error(method_name, args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#170
  def received_message?(method_name, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#189
  def record_message_received(message, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#148
  def remove_stub(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#153
  def remove_stub_if_present(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#97
  def replay_received_message_on(expectation, &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#163
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#158
  def verify; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#241
  def visibility_for(_method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#280
  def find_almost_matching_expectation(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#304
  def find_almost_matching_stub(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#287
  def find_best_matching_expectation_for(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#273
  def find_matching_expectation(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#299
  def find_matching_method_stub(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#269
  def method_double_for(message); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/proxy.rb#247
    def prepended_modules_of(klass); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#65
RSpec::Mocks::Proxy::DEFAULT_MESSAGE_EXPECTATION_OPTS = T.let(T.unsafe(nil), Hash)

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#6
class RSpec::Mocks::Proxy::SpecificMessage < ::Struct
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#7
  def ==(expectation); end

  def args; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#6
  def args=(_); end

  def message; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#6
  def message=(_); end

  def object; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#6
  def object=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#464
class RSpec::Mocks::ProxyForNil < ::RSpec::Mocks::PartialDoubleProxy
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#465
  def initialize(order_group); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#473
  def add_message_expectation(method_name, opts = T.unsafe(nil), &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#478
  def add_stub(method_name, opts = T.unsafe(nil), &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#470
  def disallow_expectations; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#470
  def disallow_expectations=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#471
  def warn_about_expectations; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#471
  def warn_about_expectations=(_arg0); end

  private

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#515
  def raise_error(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#485
  def set_expectation_behavior; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#510
  def warn(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#499
  def warn_or_raise!(method_name); end
end

# source://rspec-mocks//lib/rspec/mocks/space.rb#9
class RSpec::Mocks::RootSpace
  # source://rspec-mocks//lib/rspec/mocks/space.rb#18
  def any_instance_proxy_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#14
  def any_instance_recorder_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#26
  def any_instance_recorders_from_ancestry_of(_object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#44
  def new_scope; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#10
  def proxy_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#22
  def register_constant_mutator(_mutator); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#36
  def registered?(_object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#30
  def reset_all; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#40
  def superclass_proxy_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#33
  def verify_all; end

  private

  # source://rspec-mocks//lib/rspec/mocks/space.rb#50
  def raise_lifecycle_message; end
end

# source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#11
class RSpec::Mocks::SimpleMessageExpectation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#12
  def initialize(message, response, error_generator, backtrace_line = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#26
  def called_max_times?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#17
  def invoke(*_); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#22
  def matches?(message, *_); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#37
  def unadvise(_); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#30
  def verify_messages_received; end
end

# source://rspec-mocks//lib/rspec/mocks/space.rb#57
class RSpec::Mocks::Space
  # source://rspec-mocks//lib/rspec/mocks/space.rb#60
  def initialize; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def any_instance_mutex; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#103
  def any_instance_proxy_for(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#93
  def any_instance_recorder_for(klass, only_return_existing = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def any_instance_recorders; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#131
  def any_instance_recorders_from_ancestry_of(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#89
  def constant_mutator_for(name); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#111
  def ensure_registered(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#69
  def new_scope; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def proxies; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#107
  def proxies_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#111
  def proxy_for(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def proxy_mutex; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#85
  def register_constant_mutator(mutator); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#127
  def registered?(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#78
  def reset_all; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#118
  def superclass_proxy_for(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#73
  def verify_all; end

  private

  # source://rspec-mocks//lib/rspec/mocks/space.rb#184
  def any_instance_recorder_not_found_for(id, klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#171
  def class_proxy_with_callback_verification_strategy(object, strategy); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#202
  def id_for(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#147
  def new_mutex; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#151
  def proxy_not_found_for(id, object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#166
  def superclass_proxy_not_found_for(id, object); end
end

# source://rspec-mocks//lib/rspec/mocks/message_chain.rb#75
class RSpec::Mocks::StubChain < ::RSpec::Mocks::MessageChain
  private

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#82
  def expectation(object, message, &return_block); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#76
    def stub_chain_on(object, *chain, &blk); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/syntax.rb#6
module RSpec::Mocks::Syntax
  class << self
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#181
    def default_should_syntax_host; end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#150
    def disable_expect(syntax_host = T.unsafe(nil)); end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#89
    def disable_should(syntax_host = T.unsafe(nil)); end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#110
    def enable_expect(syntax_host = T.unsafe(nil)); end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#26
    def enable_should(syntax_host = T.unsafe(nil)); end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#175
    def expect_enabled?(syntax_host = T.unsafe(nil)); end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#169
    def should_enabled?(syntax_host = T.unsafe(nil)); end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#8
    def warn_about_should!; end

    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#13
    def warn_unless_should_configured(method_name, replacement = T.unsafe(nil)); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#63
class RSpec::Mocks::TargetBase
  include ::RSpec::Mocks::TargetDelegationInstanceMethods
  extend ::RSpec::Mocks::TargetDelegationClassMethods

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#64
  def initialize(target); end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#4
module RSpec::Mocks::TargetDelegationClassMethods
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#14
  def delegate_not_to(matcher_method, options = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#5
  def delegate_to(matcher_method); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#28
  def disallow_negation(method_name); end
end

# source://rspec-mocks//lib/rspec/mocks/targets.rb#36
module RSpec::Mocks::TargetDelegationInstanceMethods
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#37
  def target; end

  private

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#45
  def define_matcher(matcher, name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#41
  def matcher_allowed?(matcher); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#55
  def raise_negation_unsupported(method_name, matcher); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#49
  def raise_unsupported_matcher(method_name, matcher); end
end

# source://rspec-mocks//lib/rspec/mocks/test_double.rb#6
module RSpec::Mocks::TestDouble
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#9
  def initialize(name = T.unsafe(nil), stubs = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#36
  def ==(other); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#56
  def __build_mock_proxy_unless_expired(order_group); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#61
  def __disallow_further_usage!; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#23
  def as_null_object; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#67
  def freeze; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#41
  def inspect; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#28
  def null_object?; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#51
  def respond_to?(message, incl_private = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#46
  def to_s; end

  private

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#115
  def __build_mock_proxy(order_group); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#111
  def __mock_proxy; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#119
  def __raise_expired_error; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#105
  def assign_stubs(stubs); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#124
  def initialize_copy(other); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#74
  def method_missing(message, *args, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/test_double.rb#137
module RSpec::Mocks::TestDoubleFormatter
  class << self
    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#138
    def format(dbl, unwrap = T.unsafe(nil)); end

    private

    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#164
    def name_desc(dbl); end

    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#147
    def type_desc(dbl); end

    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#159
    def verified_module_desc(dbl); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#311
class RSpec::Mocks::TestDoubleProxy < ::RSpec::Mocks::Proxy
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#312
  def reset; end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#29
class RSpec::Mocks::UnsupportedMatcherError < ::StandardError; end

# source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#6
module RSpec::Mocks::VerifyingDouble
  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#53
  def initialize(doubled_module, *args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#39
  def __send__(name, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#20
  def method_missing(message, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#7
  def respond_to?(message, include_private = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#48
  def send(name, *args, &block); end
end

# source://rspec-mocks//lib/rspec/mocks/error_generator.rb#33
class RSpec::Mocks::VerifyingDoubleNotDefinedError < ::StandardError; end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#215
class RSpec::Mocks::VerifyingExistingClassNewMethodDouble < ::RSpec::Mocks::VerifyingExistingMethodDouble
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#216
  def with_signature; end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#180
class RSpec::Mocks::VerifyingExistingMethodDouble < ::RSpec::Mocks::VerifyingMethodDouble
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#181
  def initialize(object, method_name, proxy); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#195
  def unimplemented?; end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#191
  def with_signature; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#199
    def for(object, method_name, proxy); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#17
class RSpec::Mocks::VerifyingMessageExpectation < ::RSpec::Mocks::MessageExpectation
  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#20
  def initialize(*args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#18
  def method_reference; end

  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#18
  def method_reference=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#25
  def with(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#38
  def validate_expected_arguments!; end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#139
class RSpec::Mocks::VerifyingMethodDouble < ::RSpec::Mocks::MethodDouble
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#140
  def initialize(object, method_name, proxy, method_reference); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#149
  def add_expectation(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#154
  def add_stub(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#145
  def message_expectation_class; end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#159
  def proxy_method_invoked(obj, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#165
  def validate_arguments!(actual_args); end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#134
class RSpec::Mocks::VerifyingPartialClassDoubleProxy < ::RSpec::Mocks::VerifyingPartialDoubleProxy
  include ::RSpec::Mocks::PartialClassDoubleProxyMethods
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#107
class RSpec::Mocks::VerifyingPartialDoubleProxy < ::RSpec::Mocks::PartialDoubleProxy
  include ::RSpec::Mocks::VerifyingProxyMethods

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#110
  def initialize(object, expectation_ordering, optional_callback_invocation_strategy = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#123
  def ensure_implemented(_method_name); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#128
  def method_reference; end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#71
class RSpec::Mocks::VerifyingProxy < ::RSpec::Mocks::TestDoubleProxy
  include ::RSpec::Mocks::VerifyingProxyMethods

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#74
  def initialize(object, order_group, doubled_module, method_reference_class); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#88
  def method_reference; end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#98
  def validate_arguments!(method_name, args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#94
  def visibility_for(method_name); end
end

# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#22
module RSpec::Mocks::VerifyingProxyMethods
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#33
  def add_message_expectation(method_name, opts = T.unsafe(nil), &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#28
  def add_simple_stub(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#23
  def add_stub(method_name, opts = T.unsafe(nil), &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#38
  def ensure_implemented(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#48
  def ensure_publicly_implemented(method_name, _object); end
end

# source://rspec-mocks//lib/rspec/mocks/version.rb#4
module RSpec::Mocks::Version; end

# source://rspec-mocks//lib/rspec/mocks/version.rb#6
RSpec::Mocks::Version::STRING = T.let(T.unsafe(nil), String)
