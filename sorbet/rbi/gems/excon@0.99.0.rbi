# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `excon` gem.
# Please instead update this file by running `bin/tapioca gem excon`.

# source://excon//lib/excon/version.rb#2
module Excon
  class << self
    # source://excon//lib/excon.rb#259
    def connect(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#49
    def defaults; end

    # source://excon//lib/excon.rb#55
    def defaults=(new_defaults); end

    # source://excon//lib/excon.rb#259
    def delete(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#59
    def display_warning(warning); end

    # source://excon//lib/excon.rb#259
    def get(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#259
    def head(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#75
    def mock; end

    # source://excon//lib/excon.rb#83
    def mock=(new_mock); end

    # source://excon//lib/excon.rb#119
    def new(url, params = T.unsafe(nil)); end

    # source://excon//lib/excon.rb#259
    def options(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#259
    def patch(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#259
    def post(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#259
    def put(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#70
    def set_raise_on_warnings!(should_raise); end

    # source://excon//lib/excon.rb#89
    def ssl_ca_path; end

    # source://excon//lib/excon.rb#96
    def ssl_ca_path=(new_ssl_ca_path); end

    # source://excon//lib/excon.rb#102
    def ssl_verify_peer; end

    # source://excon//lib/excon.rb#109
    def ssl_verify_peer=(new_ssl_verify_peer); end

    # source://excon//lib/excon.rb#148
    def stub(request_params = T.unsafe(nil), response_params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#192
    def stub_for(request_params = T.unsafe(nil)); end

    # source://excon//lib/excon.rb#239
    def stubs; end

    # source://excon//lib/excon.rb#259
    def trace(url, params = T.unsafe(nil), &block); end

    # source://excon//lib/excon.rb#251
    def unstub(request_params = T.unsafe(nil)); end
  end
end

# source://excon//lib/excon/constants.rb#12
Excon::CHUNK_SIZE = T.let(T.unsafe(nil), Integer)

# source://excon//lib/excon/constants.rb#4
Excon::CR_NL = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/connection.rb#5
class Excon::Connection
  include ::Excon::Utils

  # source://excon//lib/excon/connection.rb#64
  def initialize(params = T.unsafe(nil)); end

  # source://excon//lib/excon/connection.rb#350
  def batch_requests(pipeline_params, limit = T.unsafe(nil)); end

  # source://excon//lib/excon/connection.rb#371
  def connect(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#10
  def connection; end

  # source://excon//lib/excon/connection.rb#14
  def connection=(new_params); end

  # source://excon//lib/excon/connection.rb#8
  def data; end

  # source://excon//lib/excon/connection.rb#371
  def delete(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#109
  def error_call(datum); end

  # source://excon//lib/excon/connection.rb#371
  def get(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#371
  def head(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#387
  def inspect; end

  # source://excon//lib/excon/connection.rb#37
  def logger; end

  # source://excon//lib/excon/connection.rb#42
  def logger=(logger); end

  # source://excon//lib/excon/connection.rb#371
  def options(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#19
  def params; end

  # source://excon//lib/excon/connection.rb#23
  def params=(new_params); end

  # source://excon//lib/excon/connection.rb#371
  def patch(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#371
  def post(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#28
  def proxy; end

  # source://excon//lib/excon/connection.rb#32
  def proxy=(new_proxy); end

  # source://excon//lib/excon/connection.rb#371
  def put(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#230
  def request(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#115
  def request_call(datum); end

  # source://excon//lib/excon/connection.rb#323
  def requests(pipeline_params); end

  # source://excon//lib/excon/connection.rb#361
  def reset; end

  # source://excon//lib/excon/connection.rb#209
  def response_call(datum); end

  # source://excon//lib/excon/connection.rb#382
  def retry_limit; end

  # source://excon//lib/excon/connection.rb#377
  def retry_limit=(new_retry_limit); end

  # source://excon//lib/excon/connection.rb#371
  def trace(params = T.unsafe(nil), &block); end

  # source://excon//lib/excon/connection.rb#401
  def valid_request_keys(middlewares); end

  private

  # source://excon//lib/excon/connection.rb#407
  def detect_content_length(body); end

  # source://excon//lib/excon/connection.rb#521
  def proxy_from_env; end

  # source://excon//lib/excon/connection.rb#508
  def proxy_match_host_port(host, port); end

  # source://excon//lib/excon/connection.rb#500
  def raise_socket_error(error); end

  # source://excon//lib/excon/connection.rb#458
  def response(datum = T.unsafe(nil)); end

  # source://excon//lib/excon/connection.rb#549
  def setup_proxy; end

  # source://excon//lib/excon/connection.rb#469
  def socket(datum = T.unsafe(nil)); end

  # source://excon//lib/excon/connection.rb#480
  def sockets; end

  # source://excon//lib/excon/connection.rb#419
  def valid_middleware_keys(middlewares); end

  # source://excon//lib/excon/connection.rb#432
  def validate_params(validation, params, middlewares); end
end

# source://excon//lib/excon/constants.rb#136
Excon::DEFAULTS = T.let(T.unsafe(nil), Hash)

# source://excon//lib/excon/constants.rb#6
Excon::DEFAULT_CA_FILE = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/constants.rb#8
Excon::DEFAULT_CHUNK_SIZE = T.let(T.unsafe(nil), Integer)

# source://excon//lib/excon/constants.rb#15
Excon::DEFAULT_REDIRECT_LIMIT = T.let(T.unsafe(nil), Integer)

# source://excon//lib/excon/constants.rb#19
Excon::DEFAULT_RETRY_ERRORS = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/constants.rb#17
Excon::DEFAULT_RETRY_LIMIT = T.let(T.unsafe(nil), Integer)

# source://excon//lib/excon/constants.rb#112
Excon::DEPRECATED_VALID_REQUEST_KEYS = T.let(T.unsafe(nil), Hash)

# source://excon//lib/excon/error.rb#4
class Excon::Error < ::StandardError
  class << self
    # source://excon//lib/excon/error.rb#174
    def status_error(request, response); end

    # source://excon//lib/excon/error.rb#127
    def status_errors; end
  end
end

# source://excon//lib/excon/error.rb#89
class Excon::Error::Accepted < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#123
class Excon::Error::BadGateway < ::Excon::Error::Server; end

# source://excon//lib/excon/error.rb#101
class Excon::Error::BadRequest < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#27
class Excon::Error::Certificate < ::Excon::Error::Socket
  # source://excon//lib/excon/error.rb#28
  def initialize(socket_error = T.unsafe(nil)); end
end

# source://excon//lib/excon/error.rb#82
class Excon::Error::Client < ::Excon::Error::HTTPStatus; end

# source://excon//lib/excon/error.rb#110
class Excon::Error::Conflict < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#85
class Excon::Error::Continue < ::Excon::Error::Informational; end

# source://excon//lib/excon/error.rb#88
class Excon::Error::Created < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#118
class Excon::Error::ExpectationFailed < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#104
class Excon::Error::Forbidden < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#96
class Excon::Error::Found < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#125
class Excon::Error::GatewayTimeout < ::Excon::Error::Server; end

# source://excon//lib/excon/error.rb#111
class Excon::Error::Gone < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#68
class Excon::Error::HTTPStatus < ::Excon::Error
  # source://excon//lib/excon/error.rb#71
  def initialize(msg, request = T.unsafe(nil), response = T.unsafe(nil)); end

  # source://excon//lib/excon/error.rb#69
  def request; end

  # source://excon//lib/excon/error.rb#69
  def response; end
end

# source://excon//lib/excon/error.rb#79
class Excon::Error::Informational < ::Excon::Error::HTTPStatus; end

# source://excon//lib/excon/error.rb#121
class Excon::Error::InternalServerError < ::Excon::Error::Server; end

# source://excon//lib/excon/error.rb#49
class Excon::Error::InvalidHeaderKey < ::Excon::Error; end

# source://excon//lib/excon/error.rb#50
class Excon::Error::InvalidHeaderValue < ::Excon::Error; end

# source://excon//lib/excon/error.rb#8
class Excon::Error::InvalidStub < ::Excon::Error; end

# source://excon//lib/excon/error.rb#112
class Excon::Error::LengthRequired < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#106
class Excon::Error::MethodNotAllowed < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#95
class Excon::Error::MovedPermanently < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#94
class Excon::Error::MultipleChoices < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#91
class Excon::Error::NoContent < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#90
class Excon::Error::NonAuthoritativeInformation < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#107
class Excon::Error::NotAcceptable < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#105
class Excon::Error::NotFound < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#122
class Excon::Error::NotImplemented < ::Excon::Error::Server; end

# source://excon//lib/excon/error.rb#98
class Excon::Error::NotModified < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#87
class Excon::Error::OK < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#93
class Excon::Error::PartialContent < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#103
class Excon::Error::PaymentRequired < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#113
class Excon::Error::PreconditionFailed < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#108
class Excon::Error::ProxyAuthenticationRequired < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#54
class Excon::Error::ProxyConnectionError < ::Excon::Error
  # source://excon//lib/excon/error.rb#57
  def initialize(msg, request = T.unsafe(nil), response = T.unsafe(nil)); end

  # source://excon//lib/excon/error.rb#55
  def request; end

  # source://excon//lib/excon/error.rb#55
  def response; end
end

# source://excon//lib/excon/error.rb#64
class Excon::Error::ProxyParse < ::Excon::Error; end

# source://excon//lib/excon/error.rb#81
class Excon::Error::Redirection < ::Excon::Error::HTTPStatus; end

# source://excon//lib/excon/error.rb#114
class Excon::Error::RequestEntityTooLarge < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#109
class Excon::Error::RequestTimeout < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#115
class Excon::Error::RequestURITooLong < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#117
class Excon::Error::RequestedRangeNotSatisfiable < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#92
class Excon::Error::ResetContent < ::Excon::Error::Success; end

# source://excon//lib/excon/error.rb#52
class Excon::Error::ResponseParse < ::Excon::Error; end

# source://excon//lib/excon/error.rb#97
class Excon::Error::SeeOther < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#83
class Excon::Error::Server < ::Excon::Error::HTTPStatus; end

# source://excon//lib/excon/error.rb#124
class Excon::Error::ServiceUnavailable < ::Excon::Error::Server; end

# source://excon//lib/excon/error.rb#12
class Excon::Error::Socket < ::Excon::Error
  # source://excon//lib/excon/error.rb#15
  def initialize(socket_error = T.unsafe(nil)); end

  # source://excon//lib/excon/error.rb#13
  def socket_error; end
end

# source://excon//lib/excon/error.rb#7
class Excon::Error::StubNotFound < ::Excon::Error; end

# source://excon//lib/excon/error.rb#80
class Excon::Error::Success < ::Excon::Error::HTTPStatus; end

# source://excon//lib/excon/error.rb#86
class Excon::Error::SwitchingProtocols < ::Excon::Error::Informational; end

# source://excon//lib/excon/error.rb#100
class Excon::Error::TemporaryRedirect < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#51
class Excon::Error::Timeout < ::Excon::Error; end

# source://excon//lib/excon/error.rb#65
class Excon::Error::TooManyRedirects < ::Excon::Error; end

# source://excon//lib/excon/error.rb#120
class Excon::Error::TooManyRequests < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#102
class Excon::Error::Unauthorized < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#119
class Excon::Error::UnprocessableEntity < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#116
class Excon::Error::UnsupportedMediaType < ::Excon::Error::Client; end

# source://excon//lib/excon/error.rb#99
class Excon::Error::UseProxy < ::Excon::Error::Redirection; end

# source://excon//lib/excon/error.rb#9
class Excon::Error::Warning < ::Excon::Error; end

# source://excon//lib/excon/error.rb#199
module Excon::Errors
  class << self
    # source://excon//lib/excon/error.rb#225
    def status_error(request, response); end
  end
end

# source://excon//lib/excon/error.rb#222
Excon::Errors::Accepted = Excon::Error::Accepted

# source://excon//lib/excon/error.rb#222
Excon::Errors::BadGateway = Excon::Error::BadGateway

# source://excon//lib/excon/error.rb#222
Excon::Errors::BadRequest = Excon::Error::BadRequest

# source://excon//lib/excon/error.rb#222
Excon::Errors::CertificateError = Excon::Error::Certificate

# source://excon//lib/excon/error.rb#222
Excon::Errors::ClientError = Excon::Error::Client

# source://excon//lib/excon/error.rb#222
Excon::Errors::Conflict = Excon::Error::Conflict

# source://excon//lib/excon/error.rb#222
Excon::Errors::Continue = Excon::Error::Continue

# source://excon//lib/excon/error.rb#222
Excon::Errors::Created = Excon::Error::Created

# source://excon//lib/excon/error.rb#200
Excon::Errors::Error = Excon::Error

# source://excon//lib/excon/error.rb#222
Excon::Errors::ExpectationFailed = Excon::Error::ExpectationFailed

# source://excon//lib/excon/error.rb#222
Excon::Errors::Forbidden = Excon::Error::Forbidden

# source://excon//lib/excon/error.rb#222
Excon::Errors::Found = Excon::Error::Found

# source://excon//lib/excon/error.rb#222
Excon::Errors::GatewayTimeout = Excon::Error::GatewayTimeout

# source://excon//lib/excon/error.rb#222
Excon::Errors::Gone = Excon::Error::Gone

# source://excon//lib/excon/error.rb#222
Excon::Errors::HTTPStatusError = Excon::Error::HTTPStatus

# source://excon//lib/excon/error.rb#222
Excon::Errors::Informational = Excon::Error::Informational

# source://excon//lib/excon/error.rb#222
Excon::Errors::InternalServerError = Excon::Error::InternalServerError

# source://excon//lib/excon/error.rb#222
Excon::Errors::InvalidHeaderKey = Excon::Error::InvalidHeaderKey

# source://excon//lib/excon/error.rb#222
Excon::Errors::InvalidHeaderValue = Excon::Error::InvalidHeaderValue

# source://excon//lib/excon/error.rb#222
Excon::Errors::InvalidStub = Excon::Error::InvalidStub

# source://excon//lib/excon/error.rb#222
Excon::Errors::LengthRequired = Excon::Error::LengthRequired

# source://excon//lib/excon/error.rb#222
Excon::Errors::MethodNotAllowed = Excon::Error::MethodNotAllowed

# source://excon//lib/excon/error.rb#222
Excon::Errors::MovedPermanently = Excon::Error::MovedPermanently

# source://excon//lib/excon/error.rb#222
Excon::Errors::MultipleChoices = Excon::Error::MultipleChoices

# source://excon//lib/excon/error.rb#222
Excon::Errors::NoContent = Excon::Error::NoContent

# source://excon//lib/excon/error.rb#222
Excon::Errors::NonAuthoritativeInformation = Excon::Error::NonAuthoritativeInformation

# source://excon//lib/excon/error.rb#222
Excon::Errors::NotAcceptable = Excon::Error::NotAcceptable

# source://excon//lib/excon/error.rb#222
Excon::Errors::NotFound = Excon::Error::NotFound

# source://excon//lib/excon/error.rb#222
Excon::Errors::NotImplemented = Excon::Error::NotImplemented

# source://excon//lib/excon/error.rb#222
Excon::Errors::NotModified = Excon::Error::NotModified

# source://excon//lib/excon/error.rb#222
Excon::Errors::OK = Excon::Error::OK

# source://excon//lib/excon/error.rb#222
Excon::Errors::PartialContent = Excon::Error::PartialContent

# source://excon//lib/excon/error.rb#222
Excon::Errors::PaymentRequired = Excon::Error::PaymentRequired

# source://excon//lib/excon/error.rb#222
Excon::Errors::PreconditionFailed = Excon::Error::PreconditionFailed

# source://excon//lib/excon/error.rb#222
Excon::Errors::ProxyAuthenticationRequired = Excon::Error::ProxyAuthenticationRequired

# source://excon//lib/excon/error.rb#222
Excon::Errors::ProxyConnectionError = Excon::Error::ProxyConnectionError

# source://excon//lib/excon/error.rb#222
Excon::Errors::ProxyParse = Excon::Error::ProxyParse

# source://excon//lib/excon/error.rb#222
Excon::Errors::Redirection = Excon::Error::Redirection

# source://excon//lib/excon/error.rb#222
Excon::Errors::RequestEntityTooLarge = Excon::Error::RequestEntityTooLarge

# source://excon//lib/excon/error.rb#222
Excon::Errors::RequestTimeout = Excon::Error::RequestTimeout

# source://excon//lib/excon/error.rb#222
Excon::Errors::RequestURITooLong = Excon::Error::RequestURITooLong

# source://excon//lib/excon/error.rb#222
Excon::Errors::RequestedRangeNotSatisfiable = Excon::Error::RequestedRangeNotSatisfiable

# source://excon//lib/excon/error.rb#222
Excon::Errors::ResetContent = Excon::Error::ResetContent

# source://excon//lib/excon/error.rb#222
Excon::Errors::ResponseParse = Excon::Error::ResponseParse

# source://excon//lib/excon/error.rb#222
Excon::Errors::SeeOther = Excon::Error::SeeOther

# source://excon//lib/excon/error.rb#222
Excon::Errors::ServerError = Excon::Error::Server

# source://excon//lib/excon/error.rb#222
Excon::Errors::ServiceUnavailable = Excon::Error::ServiceUnavailable

# source://excon//lib/excon/error.rb#222
Excon::Errors::SocketError = Excon::Error::Socket

# source://excon//lib/excon/error.rb#222
Excon::Errors::StubNotFound = Excon::Error::StubNotFound

# source://excon//lib/excon/error.rb#222
Excon::Errors::Success = Excon::Error::Success

# source://excon//lib/excon/error.rb#222
Excon::Errors::SwitchingProtocols = Excon::Error::SwitchingProtocols

# source://excon//lib/excon/error.rb#222
Excon::Errors::TemporaryRedirect = Excon::Error::TemporaryRedirect

# source://excon//lib/excon/error.rb#222
Excon::Errors::Timeout = Excon::Error::Timeout

# source://excon//lib/excon/error.rb#222
Excon::Errors::TooManyRedirects = Excon::Error::TooManyRedirects

# source://excon//lib/excon/error.rb#222
Excon::Errors::TooManyRequests = Excon::Error::TooManyRequests

# source://excon//lib/excon/error.rb#222
Excon::Errors::Unauthorized = Excon::Error::Unauthorized

# source://excon//lib/excon/error.rb#222
Excon::Errors::UnprocessableEntity = Excon::Error::UnprocessableEntity

# source://excon//lib/excon/error.rb#222
Excon::Errors::UnsupportedMediaType = Excon::Error::UnsupportedMediaType

# source://excon//lib/excon/error.rb#222
Excon::Errors::UseProxy = Excon::Error::UseProxy

# source://excon//lib/excon/error.rb#222
Excon::Errors::Warning = Excon::Error::Warning

# source://excon//lib/excon/constants.rb#25
Excon::FORCE_ENC = T.let(T.unsafe(nil), TrueClass)

# source://excon//lib/excon/constants.rb#31
Excon::HTTPS = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/constants.rb#27
Excon::HTTP_1_1 = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/constants.rb#29
Excon::HTTP_VERBS = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/headers.rb#3
class Excon::Headers < ::Hash
  # source://excon//lib/excon/headers.rb#24
  def initialize; end

  # source://excon//lib/excon/headers.rb#29
  def [](key); end

  # source://excon//lib/excon/headers.rb#33
  def []=(key, value); end

  # source://excon//lib/excon/headers.rb#40
  def assoc(obj); end

  # source://excon//lib/excon/headers.rb#45
  def delete(key, &proc); end

  # source://excon//lib/excon/headers.rb#50
  def fetch(key, default = T.unsafe(nil), &proc); end

  # source://excon//lib/excon/headers.rb#58
  def has_key?(key); end

  # source://excon//lib/excon/headers.rb#58
  def key?(key); end

  # source://excon//lib/excon/headers.rb#58
  def member?(key); end

  # source://excon//lib/excon/headers.rb#64
  def merge(other_hash); end

  # source://excon//lib/excon/headers.rb#68
  def merge!(other_hash); end

  def raw_assoc(_arg0); end
  def raw_delete(_arg0); end
  def raw_fetch(*_arg0); end
  def raw_has_key?(_arg0); end
  def raw_include?(_arg0); end
  def raw_key?(_arg0); end
  def raw_member?(_arg0); end
  def raw_merge(*_arg0); end
  def raw_merge!(*_arg0); end
  def raw_reader(_arg0); end
  def raw_rehash; end
  def raw_store(_arg0, _arg1); end
  def raw_values_at(*_arg0); end
  def raw_writer(_arg0, _arg1); end

  # source://excon//lib/excon/headers.rb#75
  def rehash; end

  # source://excon//lib/excon/headers.rb#33
  def store(key, value); end

  # source://excon//lib/excon/headers.rb#80
  def values_at(*keys); end
end

# source://excon//lib/excon/headers.rb#5
Excon::Headers::SENTINEL = T.let(T.unsafe(nil), Hash)

# source://excon//lib/excon/instrumentors/logging_instrumentor.rb#4
class Excon::LoggingInstrumentor
  class << self
    # source://excon//lib/excon/instrumentors/logging_instrumentor.rb#6
    def instrument(name, params = T.unsafe(nil)); end
  end
end

# source://excon//lib/excon/middlewares/base.rb#3
module Excon::Middleware; end

# source://excon//lib/excon/middlewares/base.rb#4
class Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/base.rb#11
  def initialize(stack); end

  # source://excon//lib/excon/middlewares/base.rb#15
  def error_call(datum); end

  # source://excon//lib/excon/middlewares/base.rb#20
  def request_call(datum); end

  # source://excon//lib/excon/middlewares/base.rb#25
  def response_call(datum); end

  class << self
    # source://excon//lib/excon/middlewares/base.rb#7
    def valid_parameter_keys; end
  end
end

# source://excon//lib/excon/middlewares/capture_cookies.rb#4
class Excon::Middleware::CaptureCookies < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/capture_cookies.rb#6
  def extract_cookies_from_set_cookie(set_cookie); end

  # source://excon//lib/excon/middlewares/capture_cookies.rb#10
  def get_header(datum, header); end

  # source://excon//lib/excon/middlewares/capture_cookies.rb#17
  def response_call(datum); end
end

# source://excon//lib/excon/middlewares/decompress.rb#4
class Excon::Middleware::Decompress < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/decompress.rb#9
  def request_call(datum); end

  # source://excon//lib/excon/middlewares/decompress.rb#19
  def response_call(datum); end
end

# source://excon//lib/excon/middlewares/decompress.rb#7
Excon::Middleware::Decompress::INFLATE_RAW = T.let(T.unsafe(nil), Integer)

# source://excon//lib/excon/middlewares/decompress.rb#6
Excon::Middleware::Decompress::INFLATE_ZLIB_OR_GZIP = T.let(T.unsafe(nil), Integer)

# source://excon//lib/excon/middlewares/escape_path.rb#4
class Excon::Middleware::EscapePath < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/escape_path.rb#5
  def request_call(datum); end
end

# source://excon//lib/excon/middlewares/expects.rb#4
class Excon::Middleware::Expects < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/expects.rb#11
  def response_call(datum); end

  class << self
    # source://excon//lib/excon/middlewares/expects.rb#5
    def valid_parameter_keys; end
  end
end

# source://excon//lib/excon/middlewares/idempotent.rb#6
class Excon::Middleware::Idempotent < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/idempotent.rb#22
  def error_call(datum); end

  # source://excon//lib/excon/middlewares/idempotent.rb#17
  def request_call(datum); end

  class << self
    # source://excon//lib/excon/middlewares/idempotent.rb#7
    def valid_parameter_keys; end
  end
end

# source://excon//lib/excon/middlewares/instrumentor.rb#4
class Excon::Middleware::Instrumentor < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/instrumentor.rb#13
  def error_call(datum); end

  # source://excon//lib/excon/middlewares/instrumentor.rb#23
  def request_call(datum); end

  # source://excon//lib/excon/middlewares/instrumentor.rb#38
  def response_call(datum); end

  class << self
    # source://excon//lib/excon/middlewares/instrumentor.rb#5
    def valid_parameter_keys; end
  end
end

# source://excon//lib/excon/middlewares/mock.rb#4
class Excon::Middleware::Mock < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/mock.rb#13
  def request_call(datum); end

  class << self
    # source://excon//lib/excon/middlewares/mock.rb#5
    def valid_parameter_keys; end
  end
end

# source://excon//lib/excon/middlewares/redirect_follower.rb#4
class Excon::Middleware::RedirectFollower < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/redirect_follower.rb#18
  def get_header(datum, header); end

  # source://excon//lib/excon/middlewares/redirect_follower.rb#12
  def request_call(datum); end

  # source://excon//lib/excon/middlewares/redirect_follower.rb#25
  def response_call(datum); end

  class << self
    # source://excon//lib/excon/middlewares/redirect_follower.rb#5
    def valid_parameter_keys; end
  end
end

# source://excon//lib/excon/middlewares/response_parser.rb#4
class Excon::Middleware::ResponseParser < ::Excon::Middleware::Base
  # source://excon//lib/excon/middlewares/response_parser.rb#5
  def response_call(datum); end
end

# source://excon//lib/excon/constants.rb#33
Excon::NO_ENTITY = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/pretty_printer.rb#3
class Excon::PrettyPrinter
  class << self
    # source://excon//lib/excon/pretty_printer.rb#4
    def pp(io, datum, indent = T.unsafe(nil)); end
  end
end

# source://excon//lib/excon/constants.rb#35
Excon::REDACTED = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/response.rb#3
class Excon::Response
  # source://excon//lib/excon/response.rb#213
  def initialize(params = T.unsafe(nil)); end

  # source://excon//lib/excon/response.rb#227
  def [](key); end

  # source://excon//lib/excon/response.rb#11
  def body; end

  # source://excon//lib/excon/response.rb#8
  def body=(new_body); end

  # source://excon//lib/excon/response.rb#5
  def data; end

  # source://excon//lib/excon/response.rb#5
  def data=(_arg0); end

  # source://excon//lib/excon/response.rb#242
  def get_header(name); end

  # source://excon//lib/excon/response.rb#17
  def headers; end

  # source://excon//lib/excon/response.rb#14
  def headers=(new_headers); end

  # source://excon//lib/excon/response.rb#20
  def host; end

  # source://excon//lib/excon/response.rb#32
  def http_method; end

  # source://excon//lib/excon/response.rb#26
  def local_address; end

  # source://excon//lib/excon/response.rb#29
  def local_port; end

  # source://excon//lib/excon/response.rb#231
  def params; end

  # source://excon//lib/excon/response.rb#35
  def path; end

  # source://excon//lib/excon/response.rb#41
  def port; end

  # source://excon//lib/excon/response.rb#236
  def pp; end

  # source://excon//lib/excon/response.rb#38
  def query; end

  # source://excon//lib/excon/response.rb#47
  def reason_phrase; end

  # source://excon//lib/excon/response.rb#44
  def reason_phrase=(new_reason_phrase); end

  # source://excon//lib/excon/response.rb#53
  def remote_ip; end

  # source://excon//lib/excon/response.rb#50
  def remote_ip=(new_remote_ip); end

  # source://excon//lib/excon/response.rb#23
  def scheme; end

  # source://excon//lib/excon/response.rb#59
  def status; end

  # source://excon//lib/excon/response.rb#56
  def status=(new_status); end

  # source://excon//lib/excon/response.rb#62
  def status_line; end

  # source://excon//lib/excon/response.rb#65
  def status_line=(new_status_line); end

  class << self
    # source://excon//lib/excon/response.rb#69
    def parse(socket, datum); end

    # source://excon//lib/excon/response.rb#193
    def parse_headers(socket, datum); end
  end
end

# source://excon//lib/excon/ssl_socket.rb#3
class Excon::SSLSocket < ::Excon::Socket
  # source://excon//lib/excon/ssl_socket.rb#8
  def initialize(data = T.unsafe(nil)); end

  private

  # source://excon//lib/excon/ssl_socket.rb#171
  def client_cert_data; end

  # source://excon//lib/excon/ssl_socket.rb#182
  def client_chain_data; end

  # source://excon//lib/excon/ssl_socket.rb#196
  def client_key_data; end

  # source://excon//lib/excon/ssl_socket.rb#207
  def client_key_pass; end

  # source://excon//lib/excon/ssl_socket.rb#190
  def connect; end
end

# source://excon//lib/excon/ssl_socket.rb#4
Excon::SSLSocket::HAVE_NONBLOCK = T.let(T.unsafe(nil), TrueClass)

# source://excon//lib/excon/socket.rb#5
class Excon::Socket
  include ::Excon::Utils
  extend ::Forwardable

  # source://excon//lib/excon/socket.rb#44
  def initialize(data = T.unsafe(nil)); end

  # source://forwardable/1.3.1/forwardable.rb#226
  def close(*args, &block); end

  # source://excon//lib/excon/socket.rb#10
  def data; end

  # source://excon//lib/excon/socket.rb#10
  def data=(_arg0); end

  # source://excon//lib/excon/socket.rb#101
  def local_address; end

  # source://excon//lib/excon/socket.rb#105
  def local_port; end

  # source://excon//lib/excon/socket.rb#29
  def params; end

  # source://excon//lib/excon/socket.rb#34
  def params=(new_params); end

  # source://excon//lib/excon/socket.rb#54
  def read(max_length = T.unsafe(nil)); end

  # source://excon//lib/excon/socket.rb#64
  def readline; end

  # source://excon//lib/excon/socket.rb#39
  def remote_ip; end

  # source://excon//lib/excon/socket.rb#93
  def write(data); end

  private

  # source://excon//lib/excon/socket.rb#190
  def add_to_read_buffer(str); end

  # source://excon//lib/excon/socket.rb#111
  def connect; end

  # source://excon//lib/excon/socket.rb#237
  def read_block(max_length); end

  # source://excon//lib/excon/socket.rb#195
  def read_nonblock(max_length); end

  # source://excon//lib/excon/socket.rb#296
  def select_with_timeout(socket, type); end

  # source://excon//lib/excon/socket.rb#310
  def unpacked_sockaddr; end

  # source://excon//lib/excon/socket.rb#286
  def write_block(data); end

  # source://excon//lib/excon/socket.rb#251
  def write_nonblock(data); end
end

# source://excon//lib/excon/socket.rb#13
Excon::Socket::CONNECT_RETRY_EXCEPTION_CLASSES = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/socket.rb#18
Excon::Socket::READ_RETRY_EXCEPTION_CLASSES = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/socket.rb#23
Excon::Socket::WRITE_RETRY_EXCEPTION_CLASSES = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/instrumentors/standard_instrumentor.rb#3
class Excon::StandardInstrumentor
  class << self
    # source://excon//lib/excon/instrumentors/standard_instrumentor.rb#4
    def instrument(name, params = T.unsafe(nil)); end
  end
end

# source://excon//lib/excon/constants.rb#37
Excon::UNIX = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/constants.rb#39
Excon::USER_AGENT = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/unix_socket.rb#3
class Excon::UnixSocket < ::Excon::Socket
  private

  # source://excon//lib/excon/unix_socket.rb#7
  def connect; end
end

# source://excon//lib/excon/utils.rb#3
module Excon::Utils
  extend ::Excon::Utils

  # source://excon//lib/excon/utils.rb#13
  def binary_encode(string); end

  # source://excon//lib/excon/utils.rb#25
  def connection_uri(datum = T.unsafe(nil)); end

  # source://excon//lib/excon/utils.rb#104
  def escape_uri(str); end

  # source://excon//lib/excon/utils.rb#126
  def headers_hash_to_s(headers); end

  # source://excon//lib/excon/utils.rb#64
  def port_string(datum); end

  # source://excon//lib/excon/utils.rb#72
  def query_string(datum); end

  # source://excon//lib/excon/utils.rb#37
  def redact(datum); end

  # source://excon//lib/excon/utils.rb#60
  def request_uri(datum); end

  # source://excon//lib/excon/utils.rb#95
  def split_header_value(str); end

  # source://excon//lib/excon/utils.rb#118
  def unescape_form(str); end

  # source://excon//lib/excon/utils.rb#111
  def unescape_uri(str); end
end

# source://excon//lib/excon/utils.rb#6
Excon::Utils::CONTROL = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/utils.rb#7
Excon::Utils::DELIMS = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/utils.rb#11
Excon::Utils::ESCAPED = T.let(T.unsafe(nil), Regexp)

# source://excon//lib/excon/utils.rb#9
Excon::Utils::NONASCII = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/utils.rb#10
Excon::Utils::UNESCAPED = T.let(T.unsafe(nil), Regexp)

# source://excon//lib/excon/utils.rb#8
Excon::Utils::UNWISE = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/constants.rb#68
Excon::VALID_CONNECTION_KEYS = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/constants.rb#43
Excon::VALID_REQUEST_KEYS = T.let(T.unsafe(nil), Array)

# source://excon//lib/excon/version.rb#3
Excon::VERSION = T.let(T.unsafe(nil), String)

# source://excon//lib/excon/constants.rb#41
Excon::VERSIONS = T.let(T.unsafe(nil), String)
