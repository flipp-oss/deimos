# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `lumberjack` gem.
# Please instead update this file by running `bin/tapioca gem lumberjack`.

# source://lumberjack//lib/lumberjack.rb#8
module Lumberjack
  class << self
    # source://lumberjack//lib/lumberjack.rb#56
    def context(&block); end

    # source://lumberjack//lib/lumberjack.rb#77
    def context?; end

    # source://lumberjack//lib/lumberjack.rb#82
    def context_tags; end

    # source://lumberjack//lib/lumberjack.rb#88
    def tag(tags); end

    # source://lumberjack//lib/lumberjack.rb#35
    def unit_of_work(id = T.unsafe(nil)); end

    # source://lumberjack//lib/lumberjack.rb#44
    def unit_of_work_id; end

    # source://lumberjack//lib/lumberjack.rb#66
    def use_context(context, &block); end
  end
end

# source://lumberjack//lib/lumberjack/context.rb#5
class Lumberjack::Context
  # source://lumberjack//lib/lumberjack/context.rb#8
  def initialize(parent_context = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/context.rb#21
  def [](key); end

  # source://lumberjack//lib/lumberjack/context.rb#26
  def []=(key, value); end

  # source://lumberjack//lib/lumberjack/context.rb#31
  def reset; end

  # source://lumberjack//lib/lumberjack/context.rb#14
  def tag(tags); end

  # source://lumberjack//lib/lumberjack/context.rb#6
  def tags; end
end

# source://lumberjack//lib/lumberjack/device.rb#6
class Lumberjack::Device
  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#110
  def cleanup_files!; end

  # source://lumberjack//lib/lumberjack/device.rb#21
  def close; end

  # source://lumberjack//lib/lumberjack/device.rb#35
  def datetime_format; end

  # source://lumberjack//lib/lumberjack/device.rb#39
  def datetime_format=(format); end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#121
  def do_once(file); end

  # source://lumberjack//lib/lumberjack/device.rb#31
  def flush; end

  # source://lumberjack//lib/lumberjack/device.rb#26
  def reopen(logdev = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device.rb#16
  def write(entry); end
end

# source://lumberjack//lib/lumberjack/device/date_rolling_log_file.rb#15
class Lumberjack::Device::DateRollingLogFile < ::Lumberjack::Device::RollingLogFile
  # source://lumberjack//lib/lumberjack/device/date_rolling_log_file.rb#16
  def initialize(path, options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device/date_rolling_log_file.rb#28
  def archive_file_suffix; end

  # source://lumberjack//lib/lumberjack/device/date_rolling_log_file.rb#39
  def roll_file?; end

  protected

  # source://lumberjack//lib/lumberjack/device/date_rolling_log_file.rb#60
  def after_roll; end
end

# source://lumberjack//lib/lumberjack/device/log_file.rb#8
class Lumberjack::Device::LogFile < ::Lumberjack::Device::Writer
  # source://lumberjack//lib/lumberjack/device/log_file.rb#15
  def initialize(path, options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device/log_file.rb#12
  def path; end

  # source://lumberjack//lib/lumberjack/device/log_file.rb#21
  def reopen(logdev = T.unsafe(nil)); end

  private

  # source://lumberjack//lib/lumberjack/device/log_file.rb#28
  def file_stream; end
end

# source://lumberjack//lib/lumberjack/device/log_file.rb#9
Lumberjack::Device::LogFile::EXTERNAL_ENCODING = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/device/multi.rb#6
class Lumberjack::Device::Multi < ::Lumberjack::Device
  # source://lumberjack//lib/lumberjack/device/multi.rb#7
  def initialize(*devices); end

  # source://lumberjack//lib/lumberjack/device/multi.rb#23
  def close; end

  # source://lumberjack//lib/lumberjack/device/multi.rb#35
  def datetime_format; end

  # source://lumberjack//lib/lumberjack/device/multi.rb#39
  def datetime_format=(format); end

  # source://lumberjack//lib/lumberjack/device/multi.rb#17
  def flush; end

  # source://lumberjack//lib/lumberjack/device/multi.rb#29
  def reopen(logdev = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device/multi.rb#11
  def write(entry); end
end

# source://lumberjack//lib/lumberjack/device/null.rb#7
class Lumberjack::Device::Null < ::Lumberjack::Device
  # source://lumberjack//lib/lumberjack/device/null.rb#8
  def initialize(*args); end

  # source://lumberjack//lib/lumberjack/device/null.rb#11
  def write(entry); end
end

# source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#14
class Lumberjack::Device::RollingLogFile < ::Lumberjack::Device::LogFile
  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#18
  def initialize(path, options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#34
  def archive_file_suffix; end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#16
  def keep; end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#16
  def keep=(_arg0); end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#15
  def path; end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#45
  def roll_file!; end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#39
  def roll_file?; end

  protected

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#73
  def after_roll; end

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#77
  def before_flush; end

  private

  # source://lumberjack//lib/lumberjack/device/rolling_log_file.rb#96
  def reopen_file; end
end

# source://lumberjack//lib/lumberjack/device/size_rolling_log_file.rb#9
class Lumberjack::Device::SizeRollingLogFile < ::Lumberjack::Device::RollingLogFile
  # source://lumberjack//lib/lumberjack/device/size_rolling_log_file.rb#14
  def initialize(path, options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device/size_rolling_log_file.rb#38
  def archive_file_suffix; end

  # source://lumberjack//lib/lumberjack/device/size_rolling_log_file.rb#10
  def max_size; end

  # source://lumberjack//lib/lumberjack/device/size_rolling_log_file.rb#42
  def roll_file?; end

  protected

  # source://lumberjack//lib/lumberjack/device/size_rolling_log_file.rb#51
  def next_archive_number; end
end

# source://lumberjack//lib/lumberjack/device/writer.rb#10
class Lumberjack::Device::Writer < ::Lumberjack::Device
  # source://lumberjack//lib/lumberjack/device/writer.rb#63
  def initialize(stream, options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/device/writer.rb#15
  def buffer_size; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#80
  def buffer_size=(value); end

  # source://lumberjack//lib/lumberjack/device/writer.rb#108
  def close; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#123
  def datetime_format; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#127
  def datetime_format=(format); end

  # source://lumberjack//lib/lumberjack/device/writer.rb#114
  def flush; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#86
  def write(entry); end

  protected

  # source://lumberjack//lib/lumberjack/device/writer.rb#139
  def stream; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#136
  def stream=(_arg0); end

  private

  # source://lumberjack//lib/lumberjack/device/writer.rb#143
  def write_to_stream(lines); end
end

# source://lumberjack//lib/lumberjack/device/writer.rb#18
class Lumberjack::Device::Writer::Buffer
  # source://lumberjack//lib/lumberjack/device/writer.rb#21
  def initialize; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#26
  def <<(string); end

  # source://lumberjack//lib/lumberjack/device/writer.rb#42
  def clear; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#31
  def empty?; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#35
  def pop!; end

  # source://lumberjack//lib/lumberjack/device/writer.rb#19
  def size; end
end

# source://lumberjack//lib/lumberjack/device/writer.rb#12
Lumberjack::Device::Writer::DEFAULT_ADDITIONAL_LINES_TEMPLATE = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/device/writer.rb#11
Lumberjack::Device::Writer::DEFAULT_FIRST_LINE_TEMPLATE = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/formatter.rb#14
class Lumberjack::Formatter
  # source://lumberjack//lib/lumberjack/formatter.rb#34
  def initialize; end

  # source://lumberjack//lib/lumberjack/formatter.rb#69
  def add(klass, formatter = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/formatter.rb#129
  def call(severity, timestamp, progname, msg); end

  # source://lumberjack//lib/lumberjack/formatter.rb#111
  def clear; end

  # source://lumberjack//lib/lumberjack/formatter.rb#118
  def format(message); end

  # source://lumberjack//lib/lumberjack/formatter.rb#98
  def remove(klass); end

  private

  # source://lumberjack//lib/lumberjack/formatter.rb#136
  def formatter_for(klass); end

  class << self
    # source://lumberjack//lib/lumberjack/formatter.rb#29
    def empty; end
  end
end

# source://lumberjack//lib/lumberjack/formatter/date_time_formatter.rb#7
class Lumberjack::Formatter::DateTimeFormatter
  # source://lumberjack//lib/lumberjack/formatter/date_time_formatter.rb#10
  def initialize(format = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/formatter/date_time_formatter.rb#14
  def call(obj); end

  # source://lumberjack//lib/lumberjack/formatter/date_time_formatter.rb#8
  def format; end
end

# source://lumberjack//lib/lumberjack/formatter/exception_formatter.rb#9
class Lumberjack::Formatter::ExceptionFormatter
  # source://lumberjack//lib/lumberjack/formatter/exception_formatter.rb#12
  def initialize(backtrace_cleaner = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/formatter/exception_formatter.rb#10
  def backtrace_cleaner; end

  # source://lumberjack//lib/lumberjack/formatter/exception_formatter.rb#10
  def backtrace_cleaner=(_arg0); end

  # source://lumberjack//lib/lumberjack/formatter/exception_formatter.rb#16
  def call(exception); end

  private

  # source://lumberjack//lib/lumberjack/formatter/exception_formatter.rb#28
  def clean_backtrace(trace); end
end

# source://lumberjack//lib/lumberjack/formatter/id_formatter.rb#8
class Lumberjack::Formatter::IdFormatter
  # source://lumberjack//lib/lumberjack/formatter/id_formatter.rb#9
  def initialize(id_attribute = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/formatter/id_formatter.rb#13
  def call(obj); end
end

# source://lumberjack//lib/lumberjack/formatter/inspect_formatter.rb#6
class Lumberjack::Formatter::InspectFormatter
  # source://lumberjack//lib/lumberjack/formatter/inspect_formatter.rb#7
  def call(obj); end
end

# source://lumberjack//lib/lumberjack/formatter/object_formatter.rb#6
class Lumberjack::Formatter::ObjectFormatter
  # source://lumberjack//lib/lumberjack/formatter/object_formatter.rb#7
  def call(obj); end
end

# source://lumberjack//lib/lumberjack/formatter/pretty_print_formatter.rb#9
class Lumberjack::Formatter::PrettyPrintFormatter
  # source://lumberjack//lib/lumberjack/formatter/pretty_print_formatter.rb#14
  def initialize(width = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/formatter/pretty_print_formatter.rb#18
  def call(obj); end

  # source://lumberjack//lib/lumberjack/formatter/pretty_print_formatter.rb#10
  def width; end

  # source://lumberjack//lib/lumberjack/formatter/pretty_print_formatter.rb#10
  def width=(_arg0); end
end

# source://lumberjack//lib/lumberjack/formatter/string_formatter.rb#6
class Lumberjack::Formatter::StringFormatter
  # source://lumberjack//lib/lumberjack/formatter/string_formatter.rb#7
  def call(obj); end
end

# source://lumberjack//lib/lumberjack/formatter/strip_formatter.rb#6
class Lumberjack::Formatter::StripFormatter
  # source://lumberjack//lib/lumberjack/formatter/strip_formatter.rb#7
  def call(obj); end
end

# source://lumberjack//lib/lumberjack/formatter/structured_formatter.rb#8
class Lumberjack::Formatter::StructuredFormatter
  # source://lumberjack//lib/lumberjack/formatter/structured_formatter.rb#12
  def initialize(formatter = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/formatter/structured_formatter.rb#16
  def call(obj); end

  private

  # source://lumberjack//lib/lumberjack/formatter/structured_formatter.rb#22
  def call_with_references(obj, references); end

  # source://lumberjack//lib/lumberjack/formatter/structured_formatter.rb#48
  def with_object_reference(obj, references); end
end

# source://lumberjack//lib/lumberjack/formatter/structured_formatter.rb#9
class Lumberjack::Formatter::StructuredFormatter::RecusiveReferenceError < ::StandardError; end

# source://lumberjack//lib/lumberjack.rb#9
Lumberjack::LINE_SEPARATOR = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/log_entry.rb#6
class Lumberjack::LogEntry
  # source://lumberjack//lib/lumberjack/log_entry.rb#13
  def initialize(time, severity, message, progname, pid, tags); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#35
  def inspect; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def message; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def message=(_arg0); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def pid; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def pid=(_arg0); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def progname; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def progname=(_arg0); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def severity; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def severity=(_arg0); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#27
  def severity_label; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#54
  def tag(name); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def tags; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def tags=(_arg0); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def time; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#7
  def time=(_arg0); end

  # source://lumberjack//lib/lumberjack/log_entry.rb#31
  def to_s; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#40
  def unit_of_work_id; end

  # source://lumberjack//lib/lumberjack/log_entry.rb#45
  def unit_of_work_id=(value); end

  private

  # source://lumberjack//lib/lumberjack/log_entry.rb#60
  def tags_to_s; end
end

# source://lumberjack//lib/lumberjack/log_entry.rb#9
Lumberjack::LogEntry::TIME_FORMAT = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/log_entry.rb#11
Lumberjack::LogEntry::UNIT_OF_WORK_ID = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/logger.rb#27
class Lumberjack::Logger
  include ::Lumberjack::Severity

  # source://lumberjack//lib/lumberjack/logger.rb#66
  def initialize(device = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/logger.rb#312
  def <<(msg); end

  # source://lumberjack//lib/lumberjack/logger.rb#194
  def add(severity, message = T.unsafe(nil), progname = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#158
  def add_entry(severity, message, progname = T.unsafe(nil), tags = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/logger.rb#216
  def close; end

  # source://lumberjack//lib/lumberjack/logger.rb#222
  def closed?; end

  # source://lumberjack//lib/lumberjack/logger.rb#86
  def datetime_format; end

  # source://lumberjack//lib/lumberjack/logger.rb#91
  def datetime_format=(format); end

  # source://lumberjack//lib/lumberjack/logger.rb#292
  def debug(message_or_progname_or_tags = T.unsafe(nil), progname_or_tags = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#302
  def debug!; end

  # source://lumberjack//lib/lumberjack/logger.rb#297
  def debug?; end

  # source://lumberjack//lib/lumberjack/logger.rb#40
  def device; end

  # source://lumberjack//lib/lumberjack/logger.rb#40
  def device=(_arg0); end

  # source://lumberjack//lib/lumberjack/logger.rb#247
  def error(message_or_progname_or_tags = T.unsafe(nil), progname_or_tags = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#257
  def error!; end

  # source://lumberjack//lib/lumberjack/logger.rb#252
  def error?; end

  # source://lumberjack//lib/lumberjack/logger.rb#232
  def fatal(message_or_progname_or_tags = T.unsafe(nil), progname_or_tags = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#242
  def fatal!; end

  # source://lumberjack//lib/lumberjack/logger.rb#237
  def fatal?; end

  # source://lumberjack//lib/lumberjack/logger.rb#209
  def flush; end

  # source://lumberjack//lib/lumberjack/logger.rb#123
  def formatter; end

  # source://lumberjack//lib/lumberjack/logger.rb#118
  def formatter=(value); end

  # source://lumberjack//lib/lumberjack/logger.rb#277
  def info(message_or_progname_or_tags = T.unsafe(nil), progname_or_tags = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#287
  def info!; end

  # source://lumberjack//lib/lumberjack/logger.rb#282
  def info?; end

  # source://lumberjack//lib/lumberjack/logger.rb#31
  def last_flushed_at; end

  # source://lumberjack//lib/lumberjack/logger.rb#99
  def level; end

  # source://lumberjack//lib/lumberjack/logger.rb#107
  def level=(value); end

  # source://lumberjack//lib/lumberjack/logger.rb#194
  def log(severity, message = T.unsafe(nil), progname = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#347
  def progname; end

  # source://lumberjack//lib/lumberjack/logger.rb#37
  def progname=(_arg0); end

  # source://lumberjack//lib/lumberjack/logger.rb#374
  def remove_tag(*tag_names); end

  # source://lumberjack//lib/lumberjack/logger.rb#226
  def reopen(logdev = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/logger.rb#338
  def set_progname(value, &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#99
  def sev_threshold; end

  # source://lumberjack//lib/lumberjack/logger.rb#107
  def sev_threshold=(value); end

  # source://lumberjack//lib/lumberjack/logger.rb#325
  def silence(temporary_level = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#34
  def silencer; end

  # source://lumberjack//lib/lumberjack/logger.rb#34
  def silencer=(_arg0); end

  # source://lumberjack//lib/lumberjack/logger.rb#356
  def tag(tags, &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#43
  def tag_formatter; end

  # source://lumberjack//lib/lumberjack/logger.rb#43
  def tag_formatter=(_arg0); end

  # source://lumberjack//lib/lumberjack/logger.rb#139
  def tagged_logger!; end

  # source://lumberjack//lib/lumberjack/logger.rb#385
  def tags; end

  # source://lumberjack//lib/lumberjack/logger.rb#308
  def unknown(message_or_progname_or_tags = T.unsafe(nil), progname_or_tags = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#398
  def untagged(&block); end

  # source://lumberjack//lib/lumberjack/logger.rb#262
  def warn(message_or_progname_or_tags = T.unsafe(nil), progname_or_tags = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#272
  def warn!; end

  # source://lumberjack//lib/lumberjack/logger.rb#267
  def warn?; end

  private

  # source://lumberjack//lib/lumberjack/logger.rb#416
  def call_add_entry(severity, message_or_progname_or_tags, progname_or_tags, &block); end

  # source://lumberjack//lib/lumberjack/logger.rb#504
  def create_flusher_thread(flush_seconds); end

  # source://lumberjack//lib/lumberjack/logger.rb#473
  def open_device(device, options); end

  # source://lumberjack//lib/lumberjack/logger.rb#462
  def push_thread_local_value(name, value); end

  # source://lumberjack//lib/lumberjack/logger.rb#441
  def set_thread_local_value(name, value); end

  # source://lumberjack//lib/lumberjack/logger.rb#456
  def thread_local_value(name); end

  # source://lumberjack//lib/lumberjack/logger.rb#494
  def write_to_device(entry); end
end

# source://lumberjack//lib/lumberjack/rack.rb#4
module Lumberjack::Rack; end

# source://lumberjack//lib/lumberjack/rack/context.rb#6
class Lumberjack::Rack::Context
  # source://lumberjack//lib/lumberjack/rack/context.rb#7
  def initialize(app); end

  # source://lumberjack//lib/lumberjack/rack/context.rb#11
  def call(env); end
end

# source://lumberjack//lib/lumberjack/rack/request_id.rb#8
class Lumberjack::Rack::RequestId
  # source://lumberjack//lib/lumberjack/rack/request_id.rb#11
  def initialize(app, abbreviated = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/rack/request_id.rb#16
  def call(env); end
end

# source://lumberjack//lib/lumberjack/rack/request_id.rb#9
Lumberjack::Rack::RequestId::REQUEST_ID = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/rack/unit_of_work.rb#5
class Lumberjack::Rack::UnitOfWork
  # source://lumberjack//lib/lumberjack/rack/unit_of_work.rb#6
  def initialize(app); end

  # source://lumberjack//lib/lumberjack/rack/unit_of_work.rb#10
  def call(env); end
end

# source://lumberjack//lib/lumberjack/severity.rb#5
module Lumberjack::Severity
  class << self
    # source://lumberjack//lib/lumberjack/severity.rb#21
    def label_to_level(label); end

    # source://lumberjack//lib/lumberjack/severity.rb#17
    def level_to_label(severity); end
  end
end

# source://lumberjack//lib/lumberjack/severity.rb#7
Lumberjack::Severity::DEBUG = T.let(T.unsafe(nil), Integer)

# source://lumberjack//lib/lumberjack/severity.rb#10
Lumberjack::Severity::ERROR = T.let(T.unsafe(nil), Integer)

# source://lumberjack//lib/lumberjack/severity.rb#11
Lumberjack::Severity::FATAL = T.let(T.unsafe(nil), Integer)

# source://lumberjack//lib/lumberjack/severity.rb#8
Lumberjack::Severity::INFO = T.let(T.unsafe(nil), Integer)

# source://lumberjack//lib/lumberjack/severity.rb#14
Lumberjack::Severity::SEVERITY_LABELS = T.let(T.unsafe(nil), Array)

# source://lumberjack//lib/lumberjack/severity.rb#12
Lumberjack::Severity::UNKNOWN = T.let(T.unsafe(nil), Integer)

# source://lumberjack//lib/lumberjack/severity.rb#9
Lumberjack::Severity::WARN = T.let(T.unsafe(nil), Integer)

# source://lumberjack//lib/lumberjack/tag_formatter.rb#11
class Lumberjack::TagFormatter
  # source://lumberjack//lib/lumberjack/tag_formatter.rb#12
  def initialize; end

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#35
  def add(names, formatter = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#57
  def clear; end

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#19
  def default(formatter = T.unsafe(nil), &block); end

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#64
  def format(tags); end

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#49
  def remove(names); end

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#27
  def remove_default; end

  private

  # source://lumberjack//lib/lumberjack/tag_formatter.rb#85
  def dereference_formatter(formatter); end
end

# source://lumberjack//lib/lumberjack/tagged_logger_support.rb#8
module Lumberjack::TaggedLoggerSupport
  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#62
  def clear_tags!; end

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#56
  def pop_tags(size = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#52
  def push_tags(*tags); end

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#43
  def tagged(*tags, &block); end
end

# source://lumberjack//lib/lumberjack/tagged_logger_support.rb#9
class Lumberjack::TaggedLoggerSupport::Formatter
  extend ::Forwardable

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#13
  def initialize(formatter:, logger:); end

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#35
  def __formatter; end

  # source://forwardable/1.3.1/forwardable.rb#226
  def clear_tags!(*args, &block); end

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#19
  def current_tags; end

  # source://forwardable/1.3.1/forwardable.rb#226
  def pop_tags(*args, &block); end

  # source://forwardable/1.3.1/forwardable.rb#226
  def push_tags(*args, &block); end

  # source://forwardable/1.3.1/forwardable.rb#226
  def tagged(*args, &block); end

  # source://lumberjack//lib/lumberjack/tagged_logger_support.rb#28
  def tags_text; end
end

# source://lumberjack//lib/lumberjack/tagged_logging.rb#7
module Lumberjack::TaggedLogging
  mixes_in_class_methods ::Lumberjack::TaggedLogging::ClassMethods

  class << self
    # source://lumberjack//lib/lumberjack/tagged_logging.rb#9
    def included(base); end
  end
end

# source://lumberjack//lib/lumberjack/tagged_logging.rb#14
module Lumberjack::TaggedLogging::ClassMethods
  # source://lumberjack//lib/lumberjack/tagged_logging.rb#15
  def new(logger); end
end

# source://lumberjack//lib/lumberjack/tags.rb#4
class Lumberjack::Tags
  class << self
    # source://lumberjack//lib/lumberjack/tags.rb#25
    def expand_runtime_values(hash); end

    # source://lumberjack//lib/lumberjack/tags.rb#8
    def stringify_keys(hash); end
  end
end

# source://lumberjack//lib/lumberjack/template.rb#16
class Lumberjack::Template
  # source://lumberjack//lib/lumberjack/template.rb#33
  def initialize(first_line, options = T.unsafe(nil)); end

  # source://lumberjack//lib/lumberjack/template.rb#56
  def call(entry); end

  # source://lumberjack//lib/lumberjack/template.rb#51
  def datetime_format; end

  # source://lumberjack//lib/lumberjack/template.rb#42
  def datetime_format=(format); end

  private

  # source://lumberjack//lib/lumberjack/template.rb#106
  def compile(template); end

  # source://lumberjack//lib/lumberjack/template.rb#86
  def tag_args(tags, tag_vars); end
end

# source://lumberjack//lib/lumberjack/template.rb#19
Lumberjack::Template::MICROSECOND_TIME_FORMAT = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/template.rb#18
Lumberjack::Template::MILLISECOND_TIME_FORMAT = T.let(T.unsafe(nil), String)

# source://lumberjack//lib/lumberjack/template.rb#20
Lumberjack::Template::PLACEHOLDER_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://lumberjack//lib/lumberjack/template.rb#17
Lumberjack::Template::TEMPLATE_ARGUMENT_ORDER = T.let(T.unsafe(nil), Array)
