# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-core` gem.
# Please instead update this file by running `bin/tapioca gem rspec-core`.

# source://rspec-core//lib/rspec/core/version.rb#1
module RSpec
  extend ::RSpec::Core::Warnings

  class << self
    # source://rspec-core//lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core//lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core//lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core//lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core//lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core//lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core//lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core//lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core//lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core//lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core//lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core//lib/rspec/core.rb#160
    def world; end

    # source://rspec-core//lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

# source://rspec-core//lib/rspec/core/version.rb#2
module RSpec::Core
  class << self
    # source://rspec-core//lib/rspec/core.rb#181
    def path_to_executable; end
  end
end

# source://rspec-core//lib/rspec/core/example_group.rb#775
class RSpec::Core::AnonymousExampleGroup < ::RSpec::Core::ExampleGroup
  class << self
    # source://rspec-core//lib/rspec/core/example_group.rb#776
    def metadata; end
  end
end

# source://rspec-core//lib/rspec/core/backtrace_formatter.rb#4
class RSpec::Core::BacktraceFormatter
  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#8
  def initialize; end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#49
  def backtrace_line(line); end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#53
  def exclude?(line); end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#6
  def exclusion_patterns; end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#6
  def exclusion_patterns=(_arg0); end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#28
  def filter_gem(gem_name); end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#33
  def format_backtrace(backtrace, options = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#22
  def full_backtrace=(_arg0); end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#24
  def full_backtrace?; end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#6
  def inclusion_patterns; end

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#6
  def inclusion_patterns=(_arg0); end

  private

  # source://rspec-core//lib/rspec/core/backtrace_formatter.rb#60
  def matches?(patterns, line); end
end

# source://rspec-core//lib/rspec/core/bisect/utilities.rb#3
module RSpec::Core::Bisect; end

# source://rspec-core//lib/rspec/core/bisect/utilities.rb#8
class RSpec::Core::Bisect::BisectFailedError < ::StandardError
  class << self
    # source://rspec-core//lib/rspec/core/bisect/utilities.rb#9
    def for_failed_spec_run(spec_output); end
  end
end

# source://rspec-core//lib/rspec/core/bisect/utilities.rb#36
class RSpec::Core::Bisect::Channel
  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#41
  def initialize; end

  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#62
  def close; end

  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#56
  def receive; end

  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#50
  def send(message); end
end

# source://rspec-core//lib/rspec/core/bisect/utilities.rb#38
RSpec::Core::Bisect::Channel::MARSHAL_DUMP_ENCODING = T.let(T.unsafe(nil), Encoding)

# source://rspec-core//lib/rspec/core/bisect/utilities.rb#5
class RSpec::Core::Bisect::ExampleSetDescriptor < ::Struct
  def all_example_ids; end

  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#5
  def all_example_ids=(_); end

  def failed_example_ids; end

  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#5
  def failed_example_ids=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/bisect/utilities.rb#19
class RSpec::Core::Bisect::Notifier
  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#20
  def initialize(formatter); end

  # source://rspec-core//lib/rspec/core/bisect/utilities.rb#24
  def publish(event, *args); end
end

# source://rspec-core//lib/rspec/core/configuration.rb#47
class RSpec::Core::Configuration
  include ::RSpec::Core::Hooks
  include ::RSpec::Core::Configuration::Readers

  # source://rspec-core//lib/rspec/core/configuration.rb#509
  def initialize; end

  # source://rspec-core//lib/rspec/core/configuration.rb#975
  def add_formatter(formatter, output = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#638
  def add_setting(name, opts = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2004
  def after(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1188
  def alias_example_group_to(new_name, *args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1156
  def alias_example_to(name, *args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1219
  def alias_it_behaves_like_to(new_name, report_label = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1219
  def alias_it_should_behave_like_to(new_name, report_label = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2034
  def append_after(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1949
  def append_before(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1914
  def apply_derived_metadata_to(metadata); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2052
  def around(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#676
  def backtrace_exclusion_patterns; end

  # source://rspec-core//lib/rspec/core/configuration.rb#682
  def backtrace_exclusion_patterns=(patterns); end

  # source://rspec-core//lib/rspec/core/configuration.rb#503
  def backtrace_formatter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#695
  def backtrace_inclusion_patterns; end

  # source://rspec-core//lib/rspec/core/configuration.rb#701
  def backtrace_inclusion_patterns=(patterns); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1949
  def before(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#480
  def bisect_runner; end

  # source://rspec-core//lib/rspec/core/configuration.rb#481
  def bisect_runner=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2098
  def bisect_runner_class; end

  # source://rspec-core//lib/rspec/core/configuration.rb#901
  def color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#939
  def color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#922
  def color_enabled?(output = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#914
  def color_mode; end

  # source://rspec-core//lib/rspec/core/configuration.rb#932
  def color_mode=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1556
  def configure_example(example, example_hooks); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1596
  def configure_expectation_framework; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1544
  def configure_group(group); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1590
  def configure_mock_framework; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def default_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def default_color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def default_color?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#982
  def default_formatter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#993
  def default_formatter=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def default_path; end

  # source://rspec-core//lib/rspec/core/configuration.rb#121
  def default_path=(path); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def default_path?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1873
  def define_derived_metadata(*filters, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def deprecation_stream; end

  # source://rspec-core//lib/rspec/core/configuration.rb#168
  def deprecation_stream=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def detail_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def detail_color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def detail_color?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1854
  def disable_monkey_patching; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1846
  def disable_monkey_patching!; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1854
  def disable_monkey_patching=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def drb; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def drb=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def drb?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def drb_port; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def drb_port=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def drb_port?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def dry_run; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def dry_run=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def dry_run?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def error_exit_code; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def error_exit_code=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def error_exit_code?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def error_stream; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def error_stream=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def error_stream?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def example_status_persistence_file_path; end

  # source://rspec-core//lib/rspec/core/configuration.rb#192
  def example_status_persistence_file_path=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def exclude_pattern; end

  # source://rspec-core//lib/rspec/core/configuration.rb#304
  def exclude_pattern=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1348
  def exclusion_filter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1341
  def exclusion_filter=(filter); end

  # source://rspec-core//lib/rspec/core/configuration.rb#837
  def expect_with(*frameworks); end

  # source://rspec-core//lib/rspec/core/configuration.rb#810
  def expectation_framework=(framework); end

  # source://rspec-core//lib/rspec/core/configuration.rb#798
  def expectation_frameworks; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1784
  def expose_current_running_example_as(method_name); end

  # source://rspec-core//lib/rspec/core/configuration.rb#151
  def expose_dsl_globally=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#143
  def expose_dsl_globally?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1494
  def extend(mod, *filters); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def fail_fast; end

  # source://rspec-core//lib/rspec/core/configuration.rb#214
  def fail_fast=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def fail_if_no_examples; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def fail_if_no_examples=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def fail_if_no_examples?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def failure_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def failure_color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def failure_color?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def failure_exit_code; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def failure_exit_code=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def failure_exit_code?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1062
  def files_or_directories_to_run=(*files); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1075
  def files_to_run; end

  # source://rspec-core//lib/rspec/core/configuration.rb#497
  def files_to_run=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1292
  def filter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1283
  def filter=(filter); end

  # source://rspec-core//lib/rspec/core/configuration.rb#721
  def filter_gems_from_backtrace(*gem_names); end

  # source://rspec-core//lib/rspec/core/configuration.rb#499
  def filter_manager; end

  # source://rspec-core//lib/rspec/core/configuration.rb#499
  def filter_manager=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1254
  def filter_run(*args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1328
  def filter_run_excluding(*args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1254
  def filter_run_including(*args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1270
  def filter_run_when_matching(*args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def fixed_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def fixed_color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def fixed_color?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#571
  def force(hash); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1635
  def format_docstrings(&block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1640
  def format_docstrings_block; end

  # source://rspec-core//lib/rspec/core/configuration.rb#975
  def formatter=(formatter, output = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1008
  def formatter_loader; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1003
  def formatters; end

  # source://rspec-core//lib/rspec/core/configuration.rb#887
  def full_backtrace=(true_or_false); end

  # source://rspec-core//lib/rspec/core/configuration.rb#881
  def full_backtrace?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#956
  def full_description; end

  # source://rspec-core//lib/rspec/core/configuration.rb#951
  def full_description=(description); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2082
  def hooks; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1581
  def in_project_source_dir_regex; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1404
  def include(mod, *filters); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1451
  def include_context(shared_group_name, *filters); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1292
  def inclusion_filter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1283
  def inclusion_filter=(filter); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1080
  def last_run_statuses; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def libs; end

  # source://rspec-core//lib/rspec/core/configuration.rb#942
  def libs=(libs); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1604
  def load_spec_files; end

  # source://rspec-core//lib/rspec/core/configuration.rb#503
  def loaded_spec_files; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def max_displayed_failure_line_count; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def max_displayed_failure_line_count=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def max_displayed_failure_line_count?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#648
  def mock_framework; end

  # source://rspec-core//lib/rspec/core/configuration.rb#660
  def mock_framework=(framework); end

  # source://rspec-core//lib/rspec/core/configuration.rb#765
  def mock_with(framework); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2087
  def on_example_group_definition(&block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2093
  def on_example_group_definition_callbacks; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def only_failures; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def only_failures?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#203
  def only_failures_but_not_configured?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1647
  def order=(*args, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#503
  def ordering_manager; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1647
  def ordering_registry(*args, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def output_stream; end

  # source://rspec-core//lib/rspec/core/configuration.rb#274
  def output_stream=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def pattern; end

  # source://rspec-core//lib/rspec/core/configuration.rb#293
  def pattern=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def pending_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def pending_color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def pending_color?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1533
  def prepend(mod, *filters); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2004
  def prepend_after(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1979
  def prepend_before(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1052
  def profile_examples; end

  # source://rspec-core//lib/rspec/core/configuration.rb#322
  def profile_examples=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def profile_examples?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def project_source_dirs; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def project_source_dirs=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def project_source_dirs?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1806
  def raise_errors_for_deprecations!; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1754
  def raise_on_warning=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1647
  def register_ordering(*args, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1035
  def reporter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def requires; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1573
  def requires=(paths); end

  # source://rspec-core//lib/rspec/core/configuration.rb#580
  def reset; end

  # source://rspec-core//lib/rspec/core/configuration.rb#593
  def reset_filters; end

  # source://rspec-core//lib/rspec/core/configuration.rb#586
  def reset_reporter; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def run_all_when_everything_filtered; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def run_all_when_everything_filtered=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def run_all_when_everything_filtered?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1647
  def seed(*args, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1647
  def seed=(*args, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1647
  def seed_used?(*args, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def shared_context_metadata_behavior; end

  # source://rspec-core//lib/rspec/core/configuration.rb#434
  def shared_context_metadata_behavior=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def silence_filter_announcements; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def silence_filter_announcements=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def silence_filter_announcements?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1117
  def spec_files_with_failures; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def start_time; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def start_time=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def start_time?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#501
  def static_config_filter_manager; end

  # source://rspec-core//lib/rspec/core/configuration.rb#501
  def static_config_filter_manager=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def success_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def success_color=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def success_color?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def threadsafe; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def threadsafe=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def threadsafe?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#383
  def treat_symbols_as_metadata_keys_with_true_values=(_value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#66
  def tty; end

  # source://rspec-core//lib/rspec/core/configuration.rb#89
  def tty=(_arg0); end

  # source://rspec-core//lib/rspec/core/configuration.rb#78
  def tty?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1734
  def warnings=(value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1739
  def warnings?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1896
  def when_first_matching_example_defined(*filters); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2064
  def with_suite_hooks; end

  # source://rspec-core//lib/rspec/core/configuration.rb#499
  def world; end

  # source://rspec-core//lib/rspec/core/configuration.rb#499
  def world=(_arg0); end

  private

  # source://rspec-core//lib/rspec/core/configuration.rb#2220
  def absolute_pattern?(pattern); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2321
  def add_hook_to_existing_matching_groups(meta, scope, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2260
  def assert_no_example_groups_defined(config_option); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2310
  def clear_values_derived_from_example_status_persistence_file_path; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2242
  def command; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2286
  def conditionally_disable_expectations_monkey_patching; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2277
  def conditionally_disable_mocks_monkey_patching; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2315
  def configure_group_with(group, module_list, application_method); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2250
  def define_built_in_hooks; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2373
  def define_mixed_in_module(mod, filters, mod_list, config_method, &block); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2225
  def extract_location(path); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2202
  def file_glob_from(path, pattern); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2191
  def gather_directories(path); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2170
  def get_files_to_run(paths); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2197
  def get_matching_files(path, pattern); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2137
  def handle_suite_hook(scope, meta); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2116
  def load_file_handling_errors(method, file); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2343
  def metadata_applies_to_group?(meta, group); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2335
  def on_existing_matching_groups(meta); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2273
  def output_to_tty?(output = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2269
  def output_wrapper; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2182
  def paths_to_check(paths); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2187
  def pattern_might_load_specs_from_vendored_dirs?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2296
  def rspec_expectations_loaded?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2292
  def rspec_mocks_loaded?; end

  # source://rspec-core//lib/rspec/core/configuration.rb#2152
  def run_suite_hooks(hook_description, hooks); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2358
  def safe_extend(mod, host); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2354
  def safe_include(mod, host); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2348
  def safe_prepend(mod, host); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2300
  def update_pattern_attr(name, value); end

  # source://rspec-core//lib/rspec/core/configuration.rb#2246
  def value_for(key); end

  class << self
    # source://rspec-core//lib/rspec/core/configuration.rb#100
    def add_read_only_setting(name, opts = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/configuration.rb#87
    def add_setting(name, opts = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/configuration.rb#70
    def define_alias(name, alias_name); end

    # source://rspec-core//lib/rspec/core/configuration.rb#77
    def define_predicate(name); end

    # source://rspec-core//lib/rspec/core/configuration.rb#60
    def define_reader(name); end

    # source://rspec-core//lib/rspec/core/configuration.rb#1645
    def delegate_to_ordering_manager(*methods); end
  end
end

# source://rspec-core//lib/rspec/core/configuration.rb#1625
RSpec::Core::Configuration::DEFAULT_FORMATTER = T.let(T.unsafe(nil), Proc)

# source://rspec-core//lib/rspec/core/configuration.rb#1018
class RSpec::Core::Configuration::DeprecationReporterBuffer
  # source://rspec-core//lib/rspec/core/configuration.rb#1019
  def initialize; end

  # source://rspec-core//lib/rspec/core/configuration.rb#1023
  def deprecation(*args); end

  # source://rspec-core//lib/rspec/core/configuration.rb#1027
  def play_onto(reporter); end
end

# source://rspec-core//lib/rspec/core/configuration.rb#1794
module RSpec::Core::Configuration::ExposeCurrentExample; end

# source://rspec-core//lib/rspec/core/configuration.rb#1105
RSpec::Core::Configuration::FAILED_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/configuration.rb#728
RSpec::Core::Configuration::MOCKING_ADAPTERS = T.let(T.unsafe(nil), Hash)

# source://rspec-core//lib/rspec/core/configuration.rb#57
class RSpec::Core::Configuration::MustBeConfiguredBeforeExampleGroupsError < ::StandardError; end

# source://rspec-core//lib/rspec/core/configuration.rb#1108
RSpec::Core::Configuration::PASSED_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/configuration.rb#1111
RSpec::Core::Configuration::PENDING_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/configuration.rb#1744
RSpec::Core::Configuration::RAISE_ERROR_WARNING_NOTIFIER = T.let(T.unsafe(nil), Proc)

# source://rspec-core//lib/rspec/core/configuration.rb#53
module RSpec::Core::Configuration::Readers
  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def default_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def default_path; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def deprecation_stream; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def detail_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def drb; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def drb_port; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def dry_run; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def error_exit_code; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def error_stream; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def example_status_persistence_file_path; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def exclude_pattern; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def fail_fast; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def fail_if_no_examples; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def failure_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def failure_exit_code; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def fixed_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def libs; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def max_displayed_failure_line_count; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def only_failures; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def output_stream; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def pattern; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def pending_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def project_source_dirs; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def requires; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def run_all_when_everything_filtered; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def shared_context_metadata_behavior; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def silence_filter_announcements; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def snapshot_dir; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def snapshot_serializer; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def start_time; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def success_color; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def threadsafe; end

  # source://rspec-core//lib/rspec/core/configuration.rb#63
  def tty; end
end

# source://rspec-core//lib/rspec/core/configuration.rb#1102
RSpec::Core::Configuration::UNKNOWN_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/configuration.rb#1114
RSpec::Core::Configuration::VALID_STATUSES = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/configuration_options.rb#10
class RSpec::Core::ConfigurationOptions
  # source://rspec-core//lib/rspec/core/configuration_options.rb#12
  def initialize(args); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#40
  def args; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#21
  def configure(config); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#30
  def configure_filter_manager(filter_manager); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#37
  def options; end

  private

  # source://rspec-core//lib/rspec/core/configuration_options.rb#169
  def args_from_options_file(path); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#138
  def command_line_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#142
  def custom_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#183
  def custom_options_file; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#129
  def env_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#121
  def file_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#66
  def force?(key); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#154
  def global_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#195
  def global_options_file; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#206
  def home_options_file_path; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#117
  def load_formatters_into(config); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#146
  def local_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#191
  def local_options_file; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#175
  def options_file_as_erb_string(path); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#158
  def options_from(path); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#70
  def order(keys); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#44
  def organize_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#163
  def parse_args_ignoring_files_or_dirs_to_run(args, source); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#109
  def process_options_into(config); end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#150
  def project_options; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#187
  def project_options_file; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#222
  def resolve_xdg_config_home; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#199
  def xdg_options_file_if_exists; end

  # source://rspec-core//lib/rspec/core/configuration_options.rb#215
  def xdg_options_file_path; end
end

# source://rspec-core//lib/rspec/core/configuration_options.rb#77
RSpec::Core::ConfigurationOptions::OPTIONS_ORDER = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/configuration_options.rb#59
RSpec::Core::ConfigurationOptions::UNFORCED_OPTIONS = T.let(T.unsafe(nil), RSpec::Core::Set)

# source://rspec-core//lib/rspec/core/configuration_options.rb#64
RSpec::Core::ConfigurationOptions::UNPROCESSABLE_OPTIONS = T.let(T.unsafe(nil), RSpec::Core::Set)

# source://rspec-core//lib/rspec/core/dsl.rb#25
module RSpec::Core::DSL
  class << self
    # source://rspec-core//lib/rspec/core/dsl.rb#89
    def change_global_dsl(&changes); end

    # source://rspec-core//lib/rspec/core/dsl.rb#27
    def example_group_aliases; end

    # source://rspec-core//lib/rspec/core/dsl.rb#37
    def expose_example_group_alias(name); end

    # source://rspec-core//lib/rspec/core/dsl.rb#81
    def expose_example_group_alias_globally(method_name); end

    # source://rspec-core//lib/rspec/core/dsl.rb#58
    def expose_globally!; end

    # source://rspec-core//lib/rspec/core/dsl.rb#32
    def exposed_globally?; end

    # source://rspec-core//lib/rspec/core/dsl.rb#70
    def remove_globally!; end

    # source://rspec-core//lib/rspec/core/dsl.rb#53
    def top_level; end

    # source://rspec-core//lib/rspec/core/dsl.rb#53
    def top_level=(_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#221
class RSpec::Core::DeprecationError < ::StandardError; end

# source://rspec-core//lib/rspec/core/did_you_mean.rb#5
class RSpec::Core::DidYouMean
  # source://rspec-core//lib/rspec/core/did_you_mean.rb#8
  def initialize(relative_file_name); end

  # source://rspec-core//lib/rspec/core/did_you_mean.rb#14
  def call; end

  # source://rspec-core//lib/rspec/core/did_you_mean.rb#6
  def relative_file_name; end

  private

  # source://rspec-core//lib/rspec/core/did_you_mean.rb#30
  def formats(probables); end

  # source://rspec-core//lib/rspec/core/did_you_mean.rb#40
  def red_font(mytext); end

  # source://rspec-core//lib/rspec/core/did_you_mean.rb#35
  def top_and_tail(rspec_format); end
end

# source://rspec-core//lib/rspec/core/example.rb#44
class RSpec::Core::Example
  # source://rspec-core//lib/rspec/core/example.rb#186
  def initialize(example_group_class, description, user_metadata, example_block = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/example.rb#174
  def clock; end

  # source://rspec-core//lib/rspec/core/example.rb#174
  def clock=(_arg0); end

  # source://rspec-core//lib/rspec/core/example.rb#76
  def description; end

  # source://rspec-core//lib/rspec/core/example.rb#388
  def display_exception; end

  # source://rspec-core//lib/rspec/core/example.rb#396
  def display_exception=(ex); end

  # source://rspec-core//lib/rspec/core/example.rb#132
  def duplicate_with(metadata_overrides = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/example.rb#230
  def example_group; end

  # source://rspec-core//lib/rspec/core/example.rb#170
  def example_group_instance; end

  # source://rspec-core//lib/rspec/core/example.rb#158
  def exception; end

  # source://rspec-core//lib/rspec/core/example.rb#49
  def execution_result; end

  # source://rspec-core//lib/rspec/core/example.rb#439
  def fail_with_exception(reporter, exception); end

  # source://rspec-core//lib/rspec/core/example.rb#49
  def file_path; end

  # source://rspec-core//lib/rspec/core/example.rb#49
  def full_description; end

  # source://rspec-core//lib/rspec/core/example.rb#117
  def id; end

  # source://rspec-core//lib/rspec/core/example.rb#220
  def inspect; end

  # source://rspec-core//lib/rspec/core/example.rb#87
  def inspect_output; end

  # source://rspec-core//lib/rspec/core/example.rb#456
  def instance_exec(*args, &block); end

  # source://rspec-core//lib/rspec/core/example.rb#49
  def location; end

  # source://rspec-core//lib/rspec/core/example.rb#96
  def location_rerun_argument; end

  # source://rspec-core//lib/rspec/core/example.rb#163
  def metadata; end

  # source://rspec-core//lib/rspec/core/example.rb#49
  def pending; end

  # source://rspec-core//lib/rspec/core/example.rb#234
  def pending?; end

  # source://rspec-core//lib/rspec/core/example.rb#226
  def reporter; end

  # source://rspec-core//lib/rspec/core/example.rb#111
  def rerun_argument; end

  # source://rspec-core//lib/rspec/core/example.rb#246
  def run(example_group_instance, reporter); end

  # source://rspec-core//lib/rspec/core/example.rb#425
  def set_aggregate_failures_exception(exception); end

  # source://rspec-core//lib/rspec/core/example.rb#412
  def set_exception(exception); end

  # source://rspec-core//lib/rspec/core/example.rb#49
  def skip; end

  # source://rspec-core//lib/rspec/core/example.rb#449
  def skip_with_exception(reporter, exception); end

  # source://rspec-core//lib/rspec/core/example.rb#238
  def skipped?; end

  # source://rspec-core//lib/rspec/core/example.rb#220
  def to_s; end

  # source://rspec-core//lib/rspec/core/example.rb#148
  def update_inherited_metadata(updates); end

  private

  # source://rspec-core//lib/rspec/core/example.rb#534
  def assign_generated_description; end

  # source://rspec-core//lib/rspec/core/example.rb#478
  def finish(reporter); end

  # source://rspec-core//lib/rspec/core/example.rb#543
  def generate_description; end

  # source://rspec-core//lib/rspec/core/example.rb#462
  def hooks; end

  # source://rspec-core//lib/rspec/core/example.rb#550
  def location_description; end

  # source://rspec-core//lib/rspec/core/example.rb#530
  def mocks_need_verification?; end

  # source://rspec-core//lib/rspec/core/example.rb#498
  def record_finished(status, reporter); end

  # source://rspec-core//lib/rspec/core/example.rb#516
  def run_after_example; end

  # source://rspec-core//lib/rspec/core/example.rb#503
  def run_before_example; end

  # source://rspec-core//lib/rspec/core/example.rb#473
  def start(reporter); end

  # source://rspec-core//lib/rspec/core/example.rb#524
  def verify_mocks; end

  # source://rspec-core//lib/rspec/core/example.rb#508
  def with_around_and_singleton_context_hooks; end

  # source://rspec-core//lib/rspec/core/example.rb#466
  def with_around_example_hooks; end

  class << self
    # source://rspec-core//lib/rspec/core/example.rb#48
    def delegate_to_metadata(key); end

    # source://rspec-core//lib/rspec/core/example.rb#122
    def parse_id(id); end
  end
end

# source://rspec-core//lib/rspec/core/example.rb#310
RSpec::Core::Example::AllExceptionsExcludingDangerousOnesOnRubiesThatAllowIt = RSpec::Support::AllExceptionsExceptOnesWeMustNotRescue

# source://rspec-core//lib/rspec/core/example.rb#556
class RSpec::Core::Example::ExecutionResult
  include ::RSpec::Core::HashImitatable
  extend ::RSpec::Core::HashImitatable::ClassMethods

  # source://rspec-core//lib/rspec/core/example.rb#610
  def ensure_timing_set(clock); end

  # source://rspec-core//lib/rspec/core/example.rb#597
  def example_skipped?; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def exception; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def exception=(_arg0); end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def finished_at; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def finished_at=(_arg0); end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def pending_exception; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def pending_exception=(_arg0); end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def pending_fixed; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def pending_fixed=(_arg0); end

  # source://rspec-core//lib/rspec/core/example.rb#588
  def pending_fixed?; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def pending_message; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def pending_message=(_arg0); end

  # source://rspec-core//lib/rspec/core/example.rb#603
  def record_finished(status, finished_at); end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def run_time; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def run_time=(_arg0); end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def started_at; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def started_at=(_arg0); end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def status; end

  # source://rspec-core//lib/rspec/core/metadata.rb#442
  def status=(_arg0); end

  private

  # source://rspec-core//lib/rspec/core/example.rb#616
  def calculate_run_time(finished_at); end

  # source://rspec-core//lib/rspec/core/example.rb#634
  def get_value(name); end

  # source://rspec-core//lib/rspec/core/example.rb#623
  def hash_for_delegation; end

  # source://rspec-core//lib/rspec/core/example.rb#642
  def issue_deprecation(_method_name, *_args); end

  # source://rspec-core//lib/rspec/core/example.rb#629
  def set_value(name, value); end
end

# source://rspec-core//lib/rspec/core/example.rb#331
class RSpec::Core::Example::Procsy
  # source://rspec-core//lib/rspec/core/example.rb#362
  def initialize(example, &block); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def <<(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def ===(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def >>(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def [](*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def arity(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def binding(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#350
  def call(*args, &block); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def clock(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def clock=(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def clone(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def curry(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def description(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def dup(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def duplicate_with(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#333
  def example; end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def example_group(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def example_group_instance(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def exception(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#374
  def executed?; end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def execution_result(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def file_path(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def full_description(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def hash(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def id(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#379
  def inspect; end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def inspect_output(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def lambda?(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def location(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def location_rerun_argument(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def metadata(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def parameters(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def pending(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def pending?(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def reporter(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def rerun_argument(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def ruby2_keywords(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#350
  def run(*args, &block); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def skip(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def skipped?(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def source_location(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#358
  def to_proc; end

  # source://rspec-core//lib/rspec/core/example.rb#339
  def update_inherited_metadata(*a, &b); end

  # source://rspec-core//lib/rspec/core/example.rb#369
  def wrap(&block); end

  # source://rspec-core//lib/rspec/core/example.rb#346
  def yield(*a, &b); end
end

# source://rspec-core//lib/rspec/core/example_group.rb#29
class RSpec::Core::ExampleGroup
  include ::RSpec::Core::MemoizedHelpers
  include ::RSpec::Core::Pending
  extend ::RSpec::Core::Hooks
  extend ::RSpec::Core::MemoizedHelpers::ClassMethods
  extend ::RSpec::Core::SharedExampleGroup

  # source://rspec-core//lib/rspec/core/example_group.rb#707
  def initialize(inspect_output = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/example_group.rb#99
  def described_class; end

  # source://rspec-core//lib/rspec/core/example_group.rb#713
  def inspect; end

  private

  # source://rspec-core//lib/rspec/core/example_group.rb#758
  def method_missing(name, *args); end

  class << self
    # source://rspec-core//lib/rspec/core/example_group.rb#367
    def add_example(example); end

    # source://rspec-core//lib/rspec/core/example_group.rb#529
    def before_context_ivars; end

    # source://rspec-core//lib/rspec/core/example_group.rb#466
    def children; end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def context(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#542
    def currently_executing_a_context_hook?; end

    # source://rspec-core//lib/rspec/core/example_group.rb#667
    def declaration_locations; end

    # source://rspec-core//lib/rspec/core/example_group.rb#246
    def define_example_group_method(name, metadata = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/example_group.rb#145
    def define_example_method(name, extra_options = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/example_group.rb#317
    def define_nested_shared_group_method(new_name, report_label = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/example_group.rb#76
    def delegate_to_metadata(*names); end

    # source://rspec-core//lib/rspec/core/example_group.rb#460
    def descendant_filtered_examples; end

    # source://rspec-core//lib/rspec/core/example_group.rb#503
    def descendants; end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def describe(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#78
    def described_class; end

    # source://rspec-core//lib/rspec/core/example_group.rb#85
    def description; end

    # source://rspec-core//lib/rspec/core/example_group.rb#700
    def each_instance_variable_for_example(group); end

    # source://rspec-core//lib/rspec/core/example_group.rb#518
    def ensure_example_groups_are_configured; end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def example(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def example_group(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#450
    def examples; end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def fcontext(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def fexample(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#78
    def file_path; end

    # source://rspec-core//lib/rspec/core/example_group.rb#455
    def filtered_examples; end

    # source://rspec-core//lib/rspec/core/example_group.rb#379
    def find_and_eval_shared(label, name, inclusion_location, *args, &customization_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def fit(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def focus(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#655
    def for_filtered_examples(reporter, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def fspecify(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#675
    def id; end

    # source://rspec-core//lib/rspec/core/example_group.rb#40
    def idempotently_define_singleton_method(name, &definition); end

    # source://rspec-core//lib/rspec/core/example_group.rb#343
    def include_context(name, *args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#353
    def include_examples(name, *args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def it(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#318
    def it_behaves_like(name, *args, &customization_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#318
    def it_should_behave_like(name, *args, &customization_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#78
    def location; end

    # source://rspec-core//lib/rspec/core/example_group.rb#51
    def metadata; end

    # source://rspec-core//lib/rspec/core/example_group.rb#485
    def next_runnable_index_for(file); end

    # source://rspec-core//lib/rspec/core/example_group.rb#625
    def ordering_strategy; end

    # source://rspec-core//lib/rspec/core/example_group.rb#508
    def parent_groups; end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def pending(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#373
    def remove_example(example); end

    # source://rspec-core//lib/rspec/core/example_group.rb#359
    def reset_memoized; end

    # source://rspec-core//lib/rspec/core/example_group.rb#599
    def run(reporter = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/example_group.rb#585
    def run_after_context_hooks(example_group_instance); end

    # source://rspec-core//lib/rspec/core/example_group.rb#547
    def run_before_context_hooks(example_group_instance); end

    # source://rspec-core//lib/rspec/core/example_group.rb#641
    def run_examples(reporter); end

    # source://rspec-core//lib/rspec/core/example_group.rb#410
    def set_it_up(description, args, registration_collection, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#685
    def set_ivars(instance, ivars); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def skip(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def specify(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#534
    def store_before_context_ivars(example_group_instance); end

    # source://rspec-core//lib/rspec/core/example_group.rb#395
    def subclass(parent, description, args, registration_collection, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#562
    def superclass_before_context_ivars; end

    # source://rspec-core//lib/rspec/core/example_group.rb#71
    def superclass_metadata; end

    # source://rspec-core//lib/rspec/core/example_group.rb#513
    def top_level?; end

    # source://rspec-core//lib/rspec/core/example_group.rb#680
    def top_level_description; end

    # source://rspec-core//lib/rspec/core/example_group.rb#476
    def traverse_tree_until(&block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#727
    def update_inherited_metadata(updates); end

    # source://rspec-core//lib/rspec/core/example_group.rb#61
    def with_replaced_metadata(meta); end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def xcontext(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#247
    def xdescribe(*args, &example_group_block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def xexample(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def xit(*all_args, &block); end

    # source://rspec-core//lib/rspec/core/example_group.rb#146
    def xspecify(*all_args, &block); end

    private

    # source://rspec-core//lib/rspec/core/example_group.rb#742
    def method_missing(name, *args); end
  end
end

# source://rspec-core//lib/rspec/core/example_group.rb#696
RSpec::Core::ExampleGroup::INSTANCE_VARIABLE_TO_IGNORE = T.let(T.unsafe(nil), Symbol)

# source://rspec-core//lib/rspec/core/example_group.rb#740
class RSpec::Core::ExampleGroup::WrongScopeError < ::NoMethodError; end

# source://rspec-core//lib/rspec/core/example_status_persister.rb#143
class RSpec::Core::ExampleStatusDumper
  # source://rspec-core//lib/rspec/core/example_status_persister.rb#148
  def initialize(examples); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#152
  def dump; end

  private

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#188
  def column_widths; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#159
  def formatted_header_rows; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#176
  def formatted_row_from(row_values); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#166
  def formatted_value_rows; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#184
  def headers; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#172
  def rows; end

  class << self
    # source://rspec-core//lib/rspec/core/example_status_persister.rb#144
    def dump(examples); end
  end
end

# source://rspec-core//lib/rspec/core/example_status_persister.rb#74
class RSpec::Core::ExampleStatusMerger
  # source://rspec-core//lib/rspec/core/example_status_persister.rb#79
  def initialize(this_run, from_previous_runs); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#85
  def merge; end

  private

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#102
  def delete_previous_examples_that_no_longer_exist; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#108
  def example_must_no_longer_exist?(ex_id); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#95
  def hash_from(example_list); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#124
  def loaded_spec_files; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#132
  def sort_value_from(example); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#128
  def spec_file_from(ex_id); end

  class << self
    # source://rspec-core//lib/rspec/core/example_status_persister.rb#75
    def merge(this_run, from_previous_runs); end
  end
end

# source://rspec-core//lib/rspec/core/example_status_persister.rb#207
class RSpec::Core::ExampleStatusParser
  # source://rspec-core//lib/rspec/core/example_status_persister.rb#212
  def initialize(string); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#216
  def parse; end

  private

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#226
  def headers; end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#222
  def parse_row(line); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#230
  def split_line(line); end

  class << self
    # source://rspec-core//lib/rspec/core/example_status_persister.rb#208
    def parse(string); end
  end
end

# source://rspec-core//lib/rspec/core/example_status_persister.rb#8
class RSpec::Core::ExampleStatusPersister
  # source://rspec-core//lib/rspec/core/example_status_persister.rb#18
  def initialize(examples, file_name); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#23
  def persist; end

  private

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#40
  def dump_statuses(unparsed_previous_runs); end

  # source://rspec-core//lib/rspec/core/example_status_persister.rb#46
  def statuses_from_this_run; end

  class << self
    # source://rspec-core//lib/rspec/core/example_status_persister.rb#9
    def load_from(file_name); end

    # source://rspec-core//lib/rspec/core/example_status_persister.rb#14
    def persist(examples, file_name); end
  end
end

# source://rspec-core//lib/rspec/core/filter_manager.rb#183
RSpec::Core::ExclusionRules = RSpec::Core::FilterRules

# source://rspec-core//lib/rspec/core/filter_manager.rb#4
class RSpec::Core::FilterManager
  # source://rspec-core//lib/rspec/core/filter_manager.rb#7
  def initialize; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#22
  def add_ids(rerun_path, scoped_ids); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#15
  def add_location(file_path, line_numbers); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#30
  def empty?; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#57
  def exclude(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#61
  def exclude_only(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#65
  def exclude_with_low_priority(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#5
  def exclusions; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#69
  def include(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#73
  def include_only(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#77
  def include_with_low_priority(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#5
  def inclusions; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#34
  def prune(examples); end

  private

  # source://rspec-core//lib/rspec/core/filter_manager.rb#83
  def add_path_to_arrays_filter(filter_key, path, values); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#101
  def file_scoped_include?(ex_metadata, ids, locations); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#89
  def prune_conditionally_filtered_examples(examples); end
end

# source://rspec-core//lib/rspec/core/filter_manager.rb#115
class RSpec::Core::FilterRules
  # source://rspec-core//lib/rspec/core/filter_manager.rb#130
  def initialize(rules = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#161
  def [](key); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#134
  def add(updated); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#138
  def add_with_low_priority(updated); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#149
  def clear; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#153
  def delete(key); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#173
  def description; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#169
  def each_pair(&block); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#165
  def empty?; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#157
  def fetch(*args, &block); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#177
  def include_example?(example); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#119
  def opposite; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#119
  def opposite=(_arg0); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#120
  def rules; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#144
  def use_only(updated); end

  class << self
    # source://rspec-core//lib/rspec/core/filter_manager.rb#122
    def build; end
  end
end

# source://rspec-core//lib/rspec/core/filter_manager.rb#116
RSpec::Core::FilterRules::PROC_HEX_NUMBER = T.let(T.unsafe(nil), Regexp)

# source://rspec-core//lib/rspec/core/filter_manager.rb#117
RSpec::Core::FilterRules::PROJECT_DIR = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/metadata_filter.rb#87
module RSpec::Core::FilterableItemRepository; end

# source://rspec-core//lib/rspec/core/metadata_filter.rb#151
class RSpec::Core::FilterableItemRepository::QueryOptimized < ::RSpec::Core::FilterableItemRepository::UpdateOptimized
  # source://rspec-core//lib/rspec/core/metadata_filter.rb#155
  def initialize(applies_predicate); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#164
  def append(item, metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#174
  def delete(item, metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#179
  def items_for(metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#169
  def prepend(item, metadata); end

  private

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#217
  def applicable_metadata_from(metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#118
  def find_items_for(request_meta); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#211
  def handle_mutation(metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#235
  def proc_keys_from(metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#203
  def reconstruct_caches; end
end

# source://rspec-core//lib/rspec/core/metadata_filter.rb#98
class RSpec::Core::FilterableItemRepository::UpdateOptimized
  # source://rspec-core//lib/rspec/core/metadata_filter.rb#101
  def initialize(applies_predicate); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#106
  def append(item, metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#114
  def delete(item, metadata); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#99
  def items_and_filters; end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#118
  def items_for(request_meta); end

  # source://rspec-core//lib/rspec/core/metadata_filter.rb#110
  def prepend(item, metadata); end
end

# source://rspec-core//lib/rspec/core/flat_map.rb#4
module RSpec::Core::FlatMap
  private

  # source://rspec-core//lib/rspec/core/flat_map.rb#6
  def flat_map(array, &block); end

  class << self
    # source://rspec-core//lib/rspec/core/flat_map.rb#6
    def flat_map(array, &block); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/console_codes.rb#3
module RSpec::Core::Formatters
  class << self
    # source://rspec-core//lib/rspec/core/formatters.rb#86
    def register(formatter_class, *notifications); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/base_bisect_formatter.rb#12
class RSpec::Core::Formatters::BaseBisectFormatter
  # source://rspec-core//lib/rspec/core/formatters/base_bisect_formatter.rb#17
  def initialize(expected_failures); end

  # source://rspec-core//lib/rspec/core/formatters/base_bisect_formatter.rb#23
  def example_failed(notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_bisect_formatter.rb#27
  def example_finished(notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_bisect_formatter.rb#37
  def start_dump(_notification); end

  class << self
    # source://rspec-core//lib/rspec/core/formatters/base_bisect_formatter.rb#13
    def inherited(formatter); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#13
class RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#23
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#50
  def close(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#17
  def example_group; end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#17
  def example_group=(_arg0); end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#42
  def example_group_started(notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#18
  def output; end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#32
  def start(notification); end

  private

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#64
  def output_supports_sync; end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#60
  def restore_sync_output; end

  # source://rspec-core//lib/rspec/core/formatters/base_formatter.rb#56
  def start_sync_output; end
end

# source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#12
class RSpec::Core::Formatters::BaseTextFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#65
  def close(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#30
  def dump_failures(notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#47
  def dump_pending(notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#42
  def dump_summary(summary); end

  # source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#21
  def message(notification); end

  # source://rspec-core//lib/rspec/core/formatters/base_text_formatter.rb#53
  def seed(notification); end
end

# source://rspec-core//lib/rspec/core/formatters/bisect_drb_formatter.rb#15
class RSpec::Core::Formatters::BisectDRbFormatter < ::RSpec::Core::Formatters::BaseBisectFormatter
  # source://rspec-core//lib/rspec/core/formatters/bisect_drb_formatter.rb#16
  def initialize(_output); end

  # source://rspec-core//lib/rspec/core/formatters/bisect_drb_formatter.rb#23
  def notify_results(results); end
end

# source://rspec-core//lib/rspec/core/formatters/console_codes.rb#6
module RSpec::Core::Formatters::ConsoleCodes
  private

  # source://rspec-core//lib/rspec/core/formatters/console_codes.rb#34
  def config_colors_to_methods; end

  # source://rspec-core//lib/rspec/core/formatters/console_codes.rb#47
  def console_code_for(code_or_symbol); end

  # source://rspec-core//lib/rspec/core/formatters/console_codes.rb#66
  def wrap(text, code_or_symbol); end

  class << self
    # source://rspec-core//lib/rspec/core/formatters/console_codes.rb#34
    def config_colors_to_methods; end

    # source://rspec-core//lib/rspec/core/formatters/console_codes.rb#47
    def console_code_for(code_or_symbol); end

    # source://rspec-core//lib/rspec/core/formatters/console_codes.rb#66
    def wrap(text, code_or_symbol); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/console_codes.rb#8
RSpec::Core::Formatters::ConsoleCodes::VT100_CODES = T.let(T.unsafe(nil), Hash)

# source://rspec-core//lib/rspec/core/formatters/console_codes.rb#29
RSpec::Core::Formatters::ConsoleCodes::VT100_CODE_VALUES = T.let(T.unsafe(nil), Hash)

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#7
class RSpec::Core::Formatters::DeprecationFormatter
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#12
  def initialize(deprecation_stream, summary_stream); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#10
  def count; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#32
  def deprecation(notification); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#44
  def deprecation_message_for(data); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#10
  def deprecation_stream; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#40
  def deprecation_summary(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#10
  def output; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#20
  def printer; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#10
  def summary_stream; end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#60
RSpec::Core::Formatters::DeprecationFormatter::DEPRECATION_STREAM_NOTICE = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#135
class RSpec::Core::Formatters::DeprecationFormatter::DelayedPrinter
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#140
  def initialize(deprecation_stream, summary_stream, deprecation_formatter); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#138
  def deprecation_formatter; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#138
  def deprecation_stream; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#163
  def deprecation_summary; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#172
  def print_deferred_deprecation_warnings; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#148
  def print_deprecation_message(data); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#155
  def stash_deprecation_message(deprecation_message); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#138
  def summary_stream; end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#136
RSpec::Core::Formatters::DeprecationFormatter::DelayedPrinter::TOO_MANY_USES_LIMIT = T.let(T.unsafe(nil), Integer)

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#196
class RSpec::Core::Formatters::DeprecationFormatter::FileStream
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#197
  def initialize(file); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#207
  def puts(*args); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#211
  def summarize(summary_stream, deprecation_count); end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#94
class RSpec::Core::Formatters::DeprecationFormatter::GeneratedDeprecationMessage < ::Struct
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#95
  def initialize(data); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#100
  def to_s; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#107
  def too_many_warnings_message; end

  def type; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#94
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#113
class RSpec::Core::Formatters::DeprecationFormatter::ImmediatePrinter
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#116
  def initialize(deprecation_stream, summary_stream, deprecation_formatter); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#114
  def deprecation_formatter; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#114
  def deprecation_stream; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#128
  def deprecation_summary; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#123
  def print_deprecation_message(data); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#114
  def summary_stream; end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#52
RSpec::Core::Formatters::DeprecationFormatter::RAISE_ERROR_CONFIG_NOTICE = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#184
class RSpec::Core::Formatters::DeprecationFormatter::RaiseErrorStream
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#185
  def puts(message); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#189
  def summarize(summary_stream, deprecation_count); end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#66
class RSpec::Core::Formatters::DeprecationFormatter::SpecifiedDeprecationMessage < ::Struct
  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#67
  def initialize(data); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#72
  def to_s; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#76
  def too_many_warnings_message; end

  def type; end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#66
  def type=(_); end

  private

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#88
  def deprecation_type_for(data); end

  # source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#82
  def output_formatted(str); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/deprecation_formatter.rb#62
RSpec::Core::Formatters::DeprecationFormatter::TOO_MANY_WARNINGS_NOTICE = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#8
class RSpec::Core::Formatters::DocumentationFormatter < ::RSpec::Core::Formatters::BaseTextFormatter
  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#12
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#50
  def example_failed(failure); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#31
  def example_group_finished(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#24
  def example_group_started(notification); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#35
  def example_passed(passed); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#42
  def example_pending(pending); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#20
  def example_started(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#57
  def message(notification); end

  private

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#96
  def current_indentation(offset = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#85
  def failure_output(example); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#67
  def flush_messages; end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#91
  def next_failure_index; end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#75
  def passed_output(example); end

  # source://rspec-core//lib/rspec/core/formatters/documentation_formatter.rb#79
  def pending_output(example, message); end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#11
class RSpec::Core::Formatters::ExceptionPresenter
  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#16
  def initialize(exception, example, options = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#73
  def colorized_formatted_backtrace(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#33
  def colorized_message_lines(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def description; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def example; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def exception; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#39
  def formatted_backtrace(exception = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#45
  def formatted_cause(exception); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#79
  def fully_formatted(failure_number, colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#84
  def fully_formatted_lines(failure_number, colorizer); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#29
  def message_lines; end

  private

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#207
  def add_shared_group_lines(lines, colorizer); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def backtrace_formatter; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def detail_formatter; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#265
  def encoded_description(description); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#115
  def encoded_string(string); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#111
  def encoding_of(string); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#275
  def exception_backtrace; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#145
  def exception_class_name(exception = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#185
  def exception_lines; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#178
  def exception_message_string(exception); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def extra_detail_formatter; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#196
  def extra_failure_lines; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#151
  def failure_lines; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#165
  def failure_slash_error_lines; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#99
  def final_exception(exception, previous = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#241
  def find_failed_line; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#256
  def formatted_message_and_backtrace(colorizer); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#129
  def indent_lines(lines, failure_number); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#12
  def message_color; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#217
  def read_failed_lines; end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#284
class RSpec::Core::Formatters::ExceptionPresenter::Factory
  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#291
  def initialize(example); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#285
  def build; end

  private

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#342
  def multiple_exception_summarizer(exception, prior_detail_formatter, color); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#338
  def multiple_exceptions_error?(exception); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#301
  def options; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#305
  def pending_options; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#363
  def sub_failure_list_formatter(exception, message_color); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#322
  def with_multiple_error_options_as_needed(exception, options); end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#396
class RSpec::Core::Formatters::ExceptionPresenter::Factory::CommonBacktraceTruncater
  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#397
  def initialize(parent); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#401
  def with_truncated_backtrace(child); end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#389
module RSpec::Core::Formatters::ExceptionPresenter::Factory::EmptyBacktraceFormatter
  class << self
    # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#390
    def format_backtrace(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#421
RSpec::Core::Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER = T.let(T.unsafe(nil), Proc)

# source://rspec-core//lib/rspec/core/formatters/failure_list_formatter.rb#7
class RSpec::Core::Formatters::FailureListFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core//lib/rspec/core/formatters/failure_list_formatter.rb#18
  def dump_profile(_profile); end

  # source://rspec-core//lib/rspec/core/formatters/failure_list_formatter.rb#10
  def example_failed(failure); end

  # source://rspec-core//lib/rspec/core/formatters/failure_list_formatter.rb#19
  def message(_message); end
end

# source://rspec-core//lib/rspec/core/formatters/fallback_message_formatter.rb#7
class RSpec::Core::Formatters::FallbackMessageFormatter
  # source://rspec-core//lib/rspec/core/formatters/fallback_message_formatter.rb#10
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/fallback_message_formatter.rb#22
  def message(notification); end

  # source://rspec-core//lib/rspec/core/formatters/fallback_message_formatter.rb#15
  def output; end
end

# source://rspec-core//lib/rspec/core/formatters/helpers.rb#7
module RSpec::Core::Formatters::Helpers
  class << self
    # source://rspec-core//lib/rspec/core/formatters/helpers.rb#24
    def format_duration(duration); end

    # source://rspec-core//lib/rspec/core/formatters/helpers.rb#60
    def format_seconds(float, precision = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/formatters/helpers.rb#102
    def organize_ids(ids); end

    # source://rspec-core//lib/rspec/core/formatters/helpers.rb#88
    def pluralize(count, string); end

    private

    # source://rspec-core//lib/rspec/core/formatters/helpers.rb#76
    def strip_trailing_zeroes(string); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/helpers.rb#12
RSpec::Core::Formatters::Helpers::DEFAULT_PRECISION = T.let(T.unsafe(nil), Integer)

# source://rspec-core//lib/rspec/core/formatters/helpers.rb#9
RSpec::Core::Formatters::Helpers::SUB_SECOND_PRECISION = T.let(T.unsafe(nil), Integer)

# source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#8
class RSpec::Core::Formatters::HtmlFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#13
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#103
  def dump_summary(summary); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#55
  def example_failed(failure); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#28
  def example_group_started(notification); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#49
  def example_passed(passed); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#93
  def example_pending(pending); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#45
  def example_started(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#22
  def start(notification); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#40
  def start_dump(_notification); end

  private

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#120
  def example_group_number; end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#125
  def example_number; end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#141
  def extra_failure_content(failure); end

  # source://rspec-core//lib/rspec/core/formatters/html_formatter.rb#130
  def percent_done; end
end

# source://rspec-core//lib/rspec/core/formatters/html_printer.rb#7
class RSpec::Core::Formatters::HtmlPrinter
  include ::ERB::Util

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#9
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#79
  def flush; end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#96
  def make_example_group_header_red(group_id); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#103
  def make_example_group_header_yellow(group_id); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#88
  def make_header_red; end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#92
  def make_header_yellow; end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#83
  def move_progress(percent_done); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#36
  def print_example_failed(pending_fixed, description, run_time, failure_id, exception, extra_content); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#18
  def print_example_group_end; end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#23
  def print_example_group_start(group_id, description, number_of_parents); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#29
  def print_example_passed(description, run_time); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#53
  def print_example_pending(description, pending_message); end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#13
  def print_html_start; end

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#59
  def print_summary(duration, example_count, failure_count, pending_count); end

  private

  # source://rspec-core//lib/rspec/core/formatters/html_printer.rb#112
  def indentation_style(number_of_parents); end
end

# source://rspec-core//lib/rspec/core/formatters/html_printer.rb#140
RSpec::Core::Formatters::HtmlPrinter::GLOBAL_SCRIPTS = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/html_printer.rb#218
RSpec::Core::Formatters::HtmlPrinter::GLOBAL_STYLES = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/html_printer.rb#382
RSpec::Core::Formatters::HtmlPrinter::HTML_HEADER = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/html_printer.rb#116
RSpec::Core::Formatters::HtmlPrinter::REPORT_HEADER = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#8
class RSpec::Core::Formatters::JsonFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#13
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#55
  def close(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#59
  def dump_profile(profile); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#78
  def dump_profile_slowest_example_groups(profile); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#66
  def dump_profile_slowest_examples(profile); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#24
  def dump_summary(summary); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#20
  def message(notification); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#11
  def output_hash; end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#50
  def seed(notification); end

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#35
  def stop(notification); end

  private

  # source://rspec-core//lib/rspec/core/formatters/json_formatter.rb#87
  def format_example(example); end
end

# source://rspec-core//lib/rspec/core/formatters.rb#96
class RSpec::Core::Formatters::Loader
  # source://rspec-core//lib/rspec/core/formatters.rb#105
  def initialize(reporter); end

  # source://rspec-core//lib/rspec/core/formatters.rb#144
  def add(formatter_to_use, *paths); end

  # source://rspec-core//lib/rspec/core/formatters.rb#118
  def default_formatter; end

  # source://rspec-core//lib/rspec/core/formatters.rb#118
  def default_formatter=(_arg0); end

  # source://rspec-core//lib/rspec/core/formatters.rb#112
  def formatters; end

  # source://rspec-core//lib/rspec/core/formatters.rb#121
  def prepare_default(output_stream, deprecation_stream); end

  # source://rspec-core//lib/rspec/core/formatters.rb#115
  def reporter; end

  # source://rspec-core//lib/rspec/core/formatters.rb#126
  def setup_default(output_stream, deprecation_stream); end

  private

  # source://rspec-core//lib/rspec/core/formatters.rb#211
  def built_in_formatter(key); end

  # source://rspec-core//lib/rspec/core/formatters.rb#234
  def custom_formatter(formatter_ref); end

  # source://rspec-core//lib/rspec/core/formatters.rb#195
  def duplicate_formatter_exists?(new_formatter); end

  # source://rspec-core//lib/rspec/core/formatters.rb#207
  def existing_formatter_implements?(notification); end

  # source://rspec-core//lib/rspec/core/formatters.rb#181
  def find_formatter(formatter_to_use); end

  # source://rspec-core//lib/rspec/core/formatters.rb#202
  def has_matching_output?(formatter, new_formatter); end

  # source://rspec-core//lib/rspec/core/formatters.rb#228
  def notifications_for(formatter_class); end

  # source://rspec-core//lib/rspec/core/formatters.rb#269
  def open_stream(path_or_wrapper); end

  # source://rspec-core//lib/rspec/core/formatters.rb#250
  def path_for(const_ref); end

  # source://rspec-core//lib/rspec/core/formatters.rb#188
  def register(formatter, notifications); end

  # source://rspec-core//lib/rspec/core/formatters.rb#246
  def string_const?(str); end

  # source://rspec-core//lib/rspec/core/formatters.rb#259
  def underscore(camel_cased_word); end

  # source://rspec-core//lib/rspec/core/formatters.rb#254
  def underscore_with_fix_for_non_standard_rspec_naming(string); end

  class << self
    # source://rspec-core//lib/rspec/core/formatters.rb#100
    def formatters; end
  end
end

# source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#8
class RSpec::Core::Formatters::ProfileFormatter
  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#11
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#25
  def dump_profile(profile); end

  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#16
  def output; end

  private

  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#62
  def bold(text); end

  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#44
  def dump_profile_slowest_example_groups(profile); end

  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#32
  def dump_profile_slowest_examples(profile); end

  # source://rspec-core//lib/rspec/core/formatters/profile_formatter.rb#57
  def format_caller(caller_info); end
end

# source://rspec-core//lib/rspec/core/formatters/progress_formatter.rb#8
class RSpec::Core::Formatters::ProgressFormatter < ::RSpec::Core::Formatters::BaseTextFormatter
  # source://rspec-core//lib/rspec/core/formatters/progress_formatter.rb#19
  def example_failed(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/progress_formatter.rb#11
  def example_passed(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/progress_formatter.rb#15
  def example_pending(_notification); end

  # source://rspec-core//lib/rspec/core/formatters/progress_formatter.rb#23
  def start_dump(_notification); end
end

# source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#5
class RSpec::Core::Formatters::SnippetExtractor
  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#35
  def initialize(source, beginning_line_number, max_line_count = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#24
  def beginning_line_number; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#41
  def expression_lines; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#24
  def max_line_count; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#24
  def source; end

  private

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#95
  def expression_node; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#107
  def expression_outmost_node?(node); end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#55
  def line_range_of_expression; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#87
  def line_range_of_location_nodes_in_expression; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#117
  def location_nodes_at_beginning_line; end

  # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#70
  def unclosed_tokens_in_line_range(line_range); end

  class << self
    # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#26
    def extract_expression_lines_at(file_path, beginning_line_number, max_line_count = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#9
    def extract_line_at(file_path, line_number); end

    # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#128
    def least_indentation_from(lines); end

    # source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#16
    def source_from_file(path); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#22
class RSpec::Core::Formatters::SnippetExtractor::NoExpressionAtLineError < ::StandardError; end

# source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#6
class RSpec::Core::Formatters::SnippetExtractor::NoSuchFileError < ::StandardError; end

# source://rspec-core//lib/rspec/core/formatters/snippet_extractor.rb#7
class RSpec::Core::Formatters::SnippetExtractor::NoSuchLineError < ::StandardError; end

# source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#7
class RSpec::Core::Formatters::SyntaxHighlighter
  # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#8
  def initialize(configuration); end

  # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#12
  def highlight(lines); end

  private

  # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#50
  def color_enabled_implementation; end

  # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#44
  def implementation; end

  class << self
    # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#18
    def attempt_to_add_rspec_terms_to_coderay_keywords; end
  end
end

# source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#61
module RSpec::Core::Formatters::SyntaxHighlighter::CodeRayImplementation
  class << self
    # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#64
    def highlight_syntax(lines); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#62
RSpec::Core::Formatters::SyntaxHighlighter::CodeRayImplementation::RESET_CODE = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#78
module RSpec::Core::Formatters::SyntaxHighlighter::NoSyntaxHighlightingImplementation
  class << self
    # source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#79
    def highlight_syntax(lines); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/syntax_highlighter.rb#87
RSpec::Core::Formatters::SyntaxHighlighter::WindowsImplementation = RSpec::Core::Formatters::SyntaxHighlighter::NoSyntaxHighlightingImplementation

# source://rspec-core//lib/rspec/core/metadata.rb#349
module RSpec::Core::HashImitatable
  mixes_in_class_methods ::RSpec::Core::HashImitatable::ClassMethods

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def <(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def <=(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def >(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def >=(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#388
  def [](key); end

  # source://rspec-core//lib/rspec/core/metadata.rb#398
  def []=(key, value); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def all?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def any?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def assoc(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def chain(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def chunk(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def chunk_while(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def clear(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def collect(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def collect_concat(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def compact(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def compact!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def compare_by_identity(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def compare_by_identity?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def count(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def cycle(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def deconstruct_keys(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def default(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def default=(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def default_proc(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def default_proc=(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def delete(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def delete_if(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def detect(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def dig(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def drop(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def drop_while(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_cons(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_entry(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_key(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_pair(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_slice(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_value(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_with_index(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def each_with_object(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def empty?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def entries(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def fetch(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def fetch_values(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def filter(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def filter!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def filter_map(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def find(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def find_all(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def find_index(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def first(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def flat_map(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def flatten(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def grep(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def grep_v(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def group_by(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def has_key?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def has_value?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def include?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def index(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def inject(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def invert(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def keep_if(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def key(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def key?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def keys(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def lazy(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def length(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def map(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def max(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def max_by(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def member?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def merge(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def merge!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def min(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def min_by(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def minmax(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def minmax_by(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def none?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def one?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def partition(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def rassoc(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def reduce(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def rehash(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def reject(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def reject!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def replace(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def reverse_each(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def select(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def select!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def shift(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def size(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def slice(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def slice_after(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def slice_before(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def slice_when(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def sort(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def sort_by(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def store(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def sum(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def take(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def take_while(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def tally(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def to_a(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#354
  def to_h; end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def to_hash(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def to_msgpack(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def to_proc(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def to_set(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def transform_keys(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def transform_keys!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def transform_values(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def transform_values!(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def uniq(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def update(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def value?(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def values(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def values_at(*args, &block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#367
  def zip(*args, &block); end

  private

  # source://rspec-core//lib/rspec/core/metadata.rb#414
  def directly_supports_attribute?(name); end

  # source://rspec-core//lib/rspec/core/metadata.rb#410
  def extra_hash_attributes; end

  # source://rspec-core//lib/rspec/core/metadata.rb#418
  def get_value(name); end

  # source://rspec-core//lib/rspec/core/metadata.rb#426
  def hash_for_delegation; end

  # source://rspec-core//lib/rspec/core/metadata.rb#430
  def issue_deprecation(_method_name, *_args); end

  # source://rspec-core//lib/rspec/core/metadata.rb#422
  def set_value(name, value); end

  class << self
    # source://rspec-core//lib/rspec/core/metadata.rb#350
    def included(klass); end
  end
end

# source://rspec-core//lib/rspec/core/metadata.rb#435
module RSpec::Core::HashImitatable::ClassMethods
  # source://rspec-core//lib/rspec/core/metadata.rb#440
  def attr_accessor(*names); end

  # source://rspec-core//lib/rspec/core/metadata.rb#436
  def hash_attribute_names; end
end

# source://rspec-core//lib/rspec/core/hooks.rb#9
module RSpec::Core::Hooks
  # source://rspec-core//lib/rspec/core/hooks.rb#277
  def after(*args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#287
  def append_after(*args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#200
  def append_before(*args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#349
  def around(*args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#200
  def before(*args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#355
  def hooks; end

  # source://rspec-core//lib/rspec/core/hooks.rb#277
  def prepend_after(*args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#210
  def prepend_before(*args, &block); end
end

# source://rspec-core//lib/rspec/core/hooks.rb#379
class RSpec::Core::Hooks::AfterContextHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core//lib/rspec/core/hooks.rb#380
  def run(example); end
end

# source://rspec-core//lib/rspec/core/hooks.rb#370
class RSpec::Core::Hooks::AfterHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core//lib/rspec/core/hooks.rb#371
  def run(example); end
end

# source://rspec-core//lib/rspec/core/hooks.rb#388
class RSpec::Core::Hooks::AroundHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core//lib/rspec/core/hooks.rb#389
  def execute_with(example, procsy); end

  # source://rspec-core//lib/rspec/core/hooks.rb#397
  def hook_description; end
end

# source://rspec-core//lib/rspec/core/hooks.rb#363
class RSpec::Core::Hooks::BeforeHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core//lib/rspec/core/hooks.rb#364
  def run(example); end
end

# source://rspec-core//lib/rspec/core/hooks.rb#360
class RSpec::Core::Hooks::Hook < ::Struct
  def block; end

  # source://rspec-core//lib/rspec/core/hooks.rb#360
  def block=(_); end

  def options; end

  # source://rspec-core//lib/rspec/core/hooks.rb#360
  def options=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/hooks.rb#420
class RSpec::Core::Hooks::HookCollections
  # source://rspec-core//lib/rspec/core/hooks.rb#421
  def initialize(owner, filterable_item_repo_class); end

  # source://rspec-core//lib/rspec/core/hooks.rb#449
  def register(prepend_or_append, position, *args, &block); end

  # source://rspec-core//lib/rspec/core/hooks.rb#442
  def register_global_singleton_context_hooks(example, globals); end

  # source://rspec-core//lib/rspec/core/hooks.rb#431
  def register_globals(host, globals); end

  # source://rspec-core//lib/rspec/core/hooks.rb#475
  def run(position, scope, example_or_group); end

  protected

  # source://rspec-core//lib/rspec/core/hooks.rb#523
  def all_hooks_for(position, scope); end

  # source://rspec-core//lib/rspec/core/hooks.rb#507
  def matching_hooks_for(position, scope, example_or_group); end

  # source://rspec-core//lib/rspec/core/hooks.rb#533
  def processable_hooks_for(position, scope, host); end

  # source://rspec-core//lib/rspec/core/hooks.rb#527
  def run_owned_hooks_for(position, scope, example_or_group); end

  private

  # source://rspec-core//lib/rspec/core/hooks.rb#553
  def ensure_hooks_initialized_for(position, scope); end

  # source://rspec-core//lib/rspec/core/hooks.rb#591
  def extract_scope_from(args); end

  # source://rspec-core//lib/rspec/core/hooks.rb#543
  def hooks_for(position, scope); end

  # source://rspec-core//lib/rspec/core/hooks.rb#605
  def known_scope?(scope); end

  # source://rspec-core//lib/rspec/core/hooks.rb#609
  def normalized_scope_for(scope); end

  # source://rspec-core//lib/rspec/core/hooks.rb#633
  def owner_parent_groups; end

  # source://rspec-core//lib/rspec/core/hooks.rb#571
  def process(host, parent_groups, globals, position, scope); end

  # source://rspec-core//lib/rspec/core/hooks.rb#619
  def run_around_example_hooks_for(example); end

  # source://rspec-core//lib/rspec/core/hooks.rb#613
  def run_example_hooks_for(example, position, each_method); end

  # source://rspec-core//lib/rspec/core/hooks.rb#584
  def scope_and_options_from(*args); end
end

# source://rspec-core//lib/rspec/core/hooks.rb#505
RSpec::Core::Hooks::HookCollections::EMPTY_HOOK_ARRAY = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/hooks.rb#495
RSpec::Core::Hooks::HookCollections::HOOK_TYPES = T.let(T.unsafe(nil), Hash)

# source://rspec-core//lib/rspec/core/hooks.rb#491
RSpec::Core::Hooks::HookCollections::SCOPES = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/hooks.rb#493
RSpec::Core::Hooks::HookCollections::SCOPE_ALIASES = T.let(T.unsafe(nil), Hash)

# source://rspec-core//lib/rspec/core/filter_manager.rb#186
class RSpec::Core::InclusionRules < ::RSpec::Core::FilterRules
  # source://rspec-core//lib/rspec/core/filter_manager.rb#187
  def add(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#191
  def add_with_low_priority(*args); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#195
  def include_example?(example); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#203
  def split_file_scoped_rules; end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#199
  def standalone?; end

  private

  # source://rspec-core//lib/rspec/core/filter_manager.rb#213
  def apply_standalone_filter(updated); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#226
  def is_standalone_filter?(rules); end

  # source://rspec-core//lib/rspec/core/filter_manager.rb#221
  def replace_filters(new_rules); end
end

# source://rspec-core//lib/rspec/core/invocations.rb#4
module RSpec::Core::Invocations; end

# source://rspec-core//lib/rspec/core/invocations.rb#28
class RSpec::Core::Invocations::Bisect
  # source://rspec-core//lib/rspec/core/invocations.rb#29
  def call(options, err, out); end

  private

  # source://rspec-core//lib/rspec/core/invocations.rb#45
  def bisect_formatter_klass_for(argument); end
end

# source://rspec-core//lib/rspec/core/invocations.rb#15
class RSpec::Core::Invocations::DRbWithFallback
  # source://rspec-core//lib/rspec/core/invocations.rb#16
  def call(options, err, out); end
end

# source://rspec-core//lib/rspec/core/invocations.rb#6
class RSpec::Core::Invocations::InitializeProject
  # source://rspec-core//lib/rspec/core/invocations.rb#7
  def call(*_args); end
end

# source://rspec-core//lib/rspec/core/invocations.rb#78
class RSpec::Core::Invocations::PrintHelp < ::Struct
  # source://rspec-core//lib/rspec/core/invocations.rb#79
  def call(_options, _err, out); end

  def hidden_options; end

  # source://rspec-core//lib/rspec/core/invocations.rb#78
  def hidden_options=(_); end

  def parser; end

  # source://rspec-core//lib/rspec/core/invocations.rb#78
  def parser=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/invocations.rb#52
class RSpec::Core::Invocations::PrintVersion
  # source://rspec-core//lib/rspec/core/invocations.rb#53
  def call(_options, _err, out); end
end

# source://rspec-core//lib/rspec/core/metadata.rb#470
class RSpec::Core::LegacyExampleGroupHash
  include ::RSpec::Core::HashImitatable
  extend ::RSpec::Core::HashImitatable::ClassMethods

  # source://rspec-core//lib/rspec/core/metadata.rb#473
  def initialize(metadata); end

  # source://rspec-core//lib/rspec/core/metadata.rb#479
  def to_h; end

  private

  # source://rspec-core//lib/rspec/core/metadata.rb#485
  def directly_supports_attribute?(name); end

  # source://rspec-core//lib/rspec/core/metadata.rb#489
  def get_value(name); end

  # source://rspec-core//lib/rspec/core/metadata.rb#493
  def set_value(name, value); end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#9
module RSpec::Core::MemoizedHelpers
  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#135
  def initialize(*_arg0); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#120
  def is_expected; end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#80
  def should(matcher = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#100
  def should_not(matcher = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#57
  def subject; end

  private

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#141
  def __init_memoized; end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#129
  def __memoized; end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#150
  def enforce_value_expectation(matcher, method_name); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#163
  def matcher_supports_value_expectations?(matcher); end

  class << self
    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#542
    def define_helpers_on(example_group); end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#570
    def get_constant_or_yield(example_group, name); end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#528
    def module_for(example_group); end
  end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#274
module RSpec::Core::MemoizedHelpers::ClassMethods
  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#306
  def let(name, &block); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#400
  def let!(name, &block); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#444
  def subject(name = T.unsafe(nil), &block); end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#510
  def subject!(name = T.unsafe(nil), &block); end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#200
class RSpec::Core::MemoizedHelpers::ContextHookMemoized
  class << self
    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#222
    def fetch_or_store(key, &_block); end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#201
    def isolate_for_context_hook(example_group_instance); end
  end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#256
class RSpec::Core::MemoizedHelpers::ContextHookMemoized::After < ::RSpec::Core::MemoizedHelpers::ContextHookMemoized
  class << self
    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#261
    def article; end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#257
    def hook_expression; end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#265
    def hook_intention; end
  end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#241
class RSpec::Core::MemoizedHelpers::ContextHookMemoized::Before < ::RSpec::Core::MemoizedHelpers::ContextHookMemoized
  class << self
    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#246
    def article; end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#242
    def hook_expression; end

    # source://rspec-core//lib/rspec/core/memoized_helpers.rb#250
    def hook_intention; end
  end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#186
class RSpec::Core::MemoizedHelpers::NonThreadSafeMemoized
  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#187
  def initialize; end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#191
  def fetch_or_store(key); end
end

# source://rspec-core//lib/rspec/core/memoized_helpers.rb#170
class RSpec::Core::MemoizedHelpers::ThreadsafeMemoized
  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#171
  def initialize; end

  # source://rspec-core//lib/rspec/core/memoized_helpers.rb#176
  def fetch_or_store(key); end
end

# source://rspec-core//lib/rspec/core/metadata.rb#27
module RSpec::Core::Metadata
  class << self
    # source://rspec-core//lib/rspec/core/metadata.rb#71
    def ascend(metadata); end

    # source://rspec-core//lib/rspec/core/metadata.rb#58
    def ascending(metadata); end

    # source://rspec-core//lib/rspec/core/metadata.rb#80
    def build_hash_from(args, warn_about_example_group_filtering = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/metadata.rb#94
    def deep_hash_dup(object); end

    # source://rspec-core//lib/rspec/core/metadata.rb#105
    def id_from(metadata); end

    # source://rspec-core//lib/rspec/core/metadata.rb#110
    def location_tuple_from(metadata); end

    # source://rspec-core//lib/rspec/core/metadata.rb#44
    def relative_path(line); end

    # source://rspec-core//lib/rspec/core/metadata.rb#36
    def relative_path_regex; end
  end
end

# source://rspec-core//lib/rspec/core/metadata.rb#247
class RSpec::Core::Metadata::ExampleGroupHash < ::RSpec::Core::Metadata::HashPopulator
  private

  # source://rspec-core//lib/rspec/core/metadata.rb#304
  def described_class; end

  # source://rspec-core//lib/rspec/core/metadata.rb#311
  def full_description; end

  class << self
    # source://rspec-core//lib/rspec/core/metadata.rb#265
    def backwards_compatibility_default_proc(&example_group_selector); end

    # source://rspec-core//lib/rspec/core/metadata.rb#248
    def create(parent_group_metadata, user_metadata, example_group_index, *args, &block); end

    # source://rspec-core//lib/rspec/core/metadata.rb#261
    def hash_with_backwards_compatibility_default_proc; end
  end
end

# source://rspec-core//lib/rspec/core/metadata.rb#213
class RSpec::Core::Metadata::ExampleHash < ::RSpec::Core::Metadata::HashPopulator
  private

  # source://rspec-core//lib/rspec/core/metadata.rb#234
  def described_class; end

  # source://rspec-core//lib/rspec/core/metadata.rb#238
  def full_description; end

  class << self
    # source://rspec-core//lib/rspec/core/metadata.rb#214
    def create(group_metadata, user_metadata, index_provider, description, block); end
  end
end

# source://rspec-core//lib/rspec/core/metadata.rb#117
class RSpec::Core::Metadata::HashPopulator
  # source://rspec-core//lib/rspec/core/metadata.rb#120
  def initialize(metadata, user_metadata, index_provider, description_args, block); end

  # source://rspec-core//lib/rspec/core/metadata.rb#118
  def block; end

  # source://rspec-core//lib/rspec/core/metadata.rb#118
  def description_args; end

  # source://rspec-core//lib/rspec/core/metadata.rb#118
  def metadata; end

  # source://rspec-core//lib/rspec/core/metadata.rb#128
  def populate; end

  # source://rspec-core//lib/rspec/core/metadata.rb#118
  def user_metadata; end

  private

  # source://rspec-core//lib/rspec/core/metadata.rb#178
  def build_description_from(parent_description = T.unsafe(nil), my_description = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/metadata.rb#185
  def build_scoped_id_for(file_path); end

  # source://rspec-core//lib/rspec/core/metadata.rb#170
  def description_separator(parent_part, child_part); end

  # source://rspec-core//lib/rspec/core/metadata.rb#191
  def ensure_valid_user_keys; end

  # source://rspec-core//lib/rspec/core/metadata.rb#164
  def file_path_and_line_number_from(backtrace); end

  # source://rspec-core//lib/rspec/core/metadata.rb#143
  def populate_location_attributes; end
end

# source://rspec-core//lib/rspec/core/metadata.rb#325
RSpec::Core::Metadata::RESERVED_KEYS = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/metadata_filter.rb#8
module RSpec::Core::MetadataFilter
  class << self
    # source://rspec-core//lib/rspec/core/metadata_filter.rb#11
    def apply?(predicate, filters, metadata); end

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#16
    def filter_applies?(key, filter_value, metadata); end

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#33
    def silence_metadata_example_group_deprecations; end

    private

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#42
    def filter_applies_to_any_value?(key, value, metadata); end

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#73
    def filters_apply?(key, value, metadata); end

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#46
    def id_filter_applies?(rerun_paths_to_scoped_ids, metadata); end

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#54
    def location_filter_applies?(locations, metadata); end

    # source://rspec-core//lib/rspec/core/metadata_filter.rb#65
    def proc_filter_applies?(key, proc, metadata); end
  end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#436
class RSpec::Core::MultipleExceptionError < ::StandardError
  include ::RSpec::Core::MultipleExceptionError::InterfaceTag

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#492
  def initialize(*exceptions); end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#489
  def aggregation_block_label; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#485
  def aggregation_metadata; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#482
  def all_exceptions; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#517
  def exception_count_description; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#476
  def failures; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#507
  def message; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#479
  def other_errors; end

  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#512
  def summary; end
end

# source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#437
module RSpec::Core::MultipleExceptionError::InterfaceTag
  # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#441
  def add(exception); end

  class << self
    # source://rspec-core//lib/rspec/core/formatters/exception_presenter.rb#467
    def for(ex); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#9
module RSpec::Core::Notifications; end

# source://rspec-core//lib/rspec/core/notifications.rb#514
class RSpec::Core::Notifications::CustomNotification < ::Struct
  class << self
    # source://rspec-core//lib/rspec/core/notifications.rb#515
    def for(options = T.unsafe(nil)); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#491
class RSpec::Core::Notifications::DeprecationNotification < ::Struct
  def call_site; end

  # source://rspec-core//lib/rspec/core/notifications.rb#491
  def call_site=(_); end

  def deprecated; end

  # source://rspec-core//lib/rspec/core/notifications.rb#491
  def deprecated=(_); end

  def message; end

  # source://rspec-core//lib/rspec/core/notifications.rb#491
  def message=(_); end

  def replacement; end

  # source://rspec-core//lib/rspec/core/notifications.rb#491
  def replacement=(_); end

  class << self
    def [](*_arg0); end

    # source://rspec-core//lib/rspec/core/notifications.rb#497
    def from_hash(data); end

    def inspect; end
    def members; end

    private

    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#38
class RSpec::Core::Notifications::ExampleNotification < ::Struct
  def example; end

  # source://rspec-core//lib/rspec/core/notifications.rb#38
  def example=(_); end

  class << self
    def [](*_arg0); end

    # source://rspec-core//lib/rspec/core/notifications.rb#41
    def for(example); end

    def inspect; end
    def members; end

    private

    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#69
class RSpec::Core::Notifications::ExamplesNotification
  # source://rspec-core//lib/rspec/core/notifications.rb#70
  def initialize(reporter); end

  # source://rspec-core//lib/rspec/core/notifications.rb#75
  def examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#80
  def failed_examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#97
  def failure_notifications; end

  # source://rspec-core//lib/rspec/core/notifications.rb#110
  def fully_formatted_failed_examples(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#122
  def fully_formatted_pending_examples(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#91
  def notifications; end

  # source://rspec-core//lib/rspec/core/notifications.rb#85
  def pending_examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#104
  def pending_notifications; end

  private

  # source://rspec-core//lib/rspec/core/notifications.rb#134
  def format_examples(examples); end
end

# source://rspec-core//lib/rspec/core/notifications.rb#154
class RSpec::Core::Notifications::FailedExampleNotification < ::RSpec::Core::Notifications::ExampleNotification
  # source://rspec-core//lib/rspec/core/notifications.rb#211
  def initialize(example, exception_presenter = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#193
  def colorized_formatted_backtrace(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#178
  def colorized_message_lines(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#163
  def description; end

  # source://rspec-core//lib/rspec/core/notifications.rb#158
  def exception; end

  # source://rspec-core//lib/rspec/core/notifications.rb#185
  def formatted_backtrace; end

  # source://rspec-core//lib/rspec/core/notifications.rb#199
  def fully_formatted(failure_number, colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#205
  def fully_formatted_lines(failure_number, colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#170
  def message_lines; end
end

# source://rspec-core//lib/rspec/core/notifications.rb#256
class RSpec::Core::Notifications::GroupNotification < ::Struct
  def group; end

  # source://rspec-core//lib/rspec/core/notifications.rb#256
  def group=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#262
class RSpec::Core::Notifications::MessageNotification < ::Struct
  def message; end

  # source://rspec-core//lib/rspec/core/notifications.rb#262
  def message=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#11
module RSpec::Core::Notifications::NullColorizer
  private

  # source://rspec-core//lib/rspec/core/notifications.rb#14
  def wrap(line, _code_or_symbol); end

  class << self
    # source://rspec-core//lib/rspec/core/notifications.rb#14
    def wrap(line, _code_or_symbol); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#504
class RSpec::Core::Notifications::NullNotification; end

# source://rspec-core//lib/rspec/core/notifications.rb#221
class RSpec::Core::Notifications::PendingExampleFailedAsExpectedNotification < ::RSpec::Core::Notifications::FailedExampleNotification; end

# source://rspec-core//lib/rspec/core/notifications.rb#218
class RSpec::Core::Notifications::PendingExampleFixedNotification < ::RSpec::Core::Notifications::FailedExampleNotification; end

# source://rspec-core//lib/rspec/core/notifications.rb#427
class RSpec::Core::Notifications::ProfileNotification
  # source://rspec-core//lib/rspec/core/notifications.rb#428
  def initialize(duration, examples, number_of_examples, example_groups); end

  # source://rspec-core//lib/rspec/core/notifications.rb#434
  def duration; end

  # source://rspec-core//lib/rspec/core/notifications.rb#434
  def examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#434
  def number_of_examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#453
  def percentage; end

  # source://rspec-core//lib/rspec/core/notifications.rb#445
  def slow_duration; end

  # source://rspec-core//lib/rspec/core/notifications.rb#437
  def slowest_examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#462
  def slowest_groups; end

  private

  # source://rspec-core//lib/rspec/core/notifications.rb#468
  def calculate_slowest_groups; end
end

# source://rspec-core//lib/rspec/core/notifications.rb#269
class RSpec::Core::Notifications::SeedNotification < ::Struct
  # source://rspec-core//lib/rspec/core/notifications.rb#280
  def fully_formatted; end

  def seed; end

  # source://rspec-core//lib/rspec/core/notifications.rb#269
  def seed=(_); end

  # source://rspec-core//lib/rspec/core/notifications.rb#273
  def seed_used?; end

  # source://rspec-core//lib/rspec/core/notifications.rb#269
  def used=(_); end

  private

  def used; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#228
class RSpec::Core::Notifications::SkippedExampleNotification < ::RSpec::Core::Notifications::ExampleNotification
  # source://rspec-core//lib/rspec/core/notifications.rb#233
  def fully_formatted(pending_number, colorizer = T.unsafe(nil)); end
end

# source://rspec-core//lib/rspec/core/notifications.rb#26
class RSpec::Core::Notifications::StartNotification < ::Struct
  def count; end

  # source://rspec-core//lib/rspec/core/notifications.rb#26
  def count=(_); end

  def load_time; end

  # source://rspec-core//lib/rspec/core/notifications.rb#26
  def load_time=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/notifications.rb#298
class RSpec::Core::Notifications::SummaryNotification < ::Struct
  include ::RSpec::Core::ShellEscape

  # source://rspec-core//lib/rspec/core/notifications.rb#362
  def colorized_rerun_commands(colorizer = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/notifications.rb#345
  def colorized_totals_line(colorizer = T.unsafe(nil)); end

  def duration; end

  # source://rspec-core//lib/rspec/core/notifications.rb#298
  def duration=(_); end

  def errors_outside_of_examples_count; end

  # source://rspec-core//lib/rspec/core/notifications.rb#298
  def errors_outside_of_examples_count=(_); end

  # source://rspec-core//lib/rspec/core/notifications.rb#304
  def example_count; end

  def examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#298
  def examples=(_); end

  def failed_examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#298
  def failed_examples=(_); end

  # source://rspec-core//lib/rspec/core/notifications.rb#310
  def failure_count; end

  # source://rspec-core//lib/rspec/core/notifications.rb#372
  def formatted_duration; end

  # source://rspec-core//lib/rspec/core/notifications.rb#378
  def formatted_load_time; end

  # source://rspec-core//lib/rspec/core/notifications.rb#384
  def fully_formatted(colorizer = T.unsafe(nil)); end

  def load_time; end

  # source://rspec-core//lib/rspec/core/notifications.rb#298
  def load_time=(_); end

  # source://rspec-core//lib/rspec/core/notifications.rb#316
  def pending_count; end

  def pending_examples; end

  # source://rspec-core//lib/rspec/core/notifications.rb#298
  def pending_examples=(_); end

  # source://rspec-core//lib/rspec/core/notifications.rb#322
  def totals_line; end

  private

  # source://rspec-core//lib/rspec/core/notifications.rb#406
  def duplicate_rerun_locations; end

  # source://rspec-core//lib/rspec/core/notifications.rb#400
  def rerun_argument_for(example); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/reporter.rb#259
class RSpec::Core::NullReporter
  class << self
    private

    # source://rspec-core//lib/rspec/core/reporter.rb#260
    def method_missing(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/ordering.rb#4
module RSpec::Core::Ordering; end

# source://rspec-core//lib/rspec/core/ordering.rb#116
class RSpec::Core::Ordering::ConfigurationManager
  # source://rspec-core//lib/rspec/core/ordering.rb#119
  def initialize; end

  # source://rspec-core//lib/rspec/core/ordering.rb#151
  def force(hash); end

  # source://rspec-core//lib/rspec/core/ordering.rb#136
  def order=(type); end

  # source://rspec-core//lib/rspec/core/ordering.rb#117
  def ordering_registry; end

  # source://rspec-core//lib/rspec/core/ordering.rb#162
  def register_ordering(name, strategy = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/ordering.rb#117
  def seed; end

  # source://rspec-core//lib/rspec/core/ordering.rb#130
  def seed=(seed); end

  # source://rspec-core//lib/rspec/core/ordering.rb#126
  def seed_used?; end
end

# source://rspec-core//lib/rspec/core/ordering.rb#71
class RSpec::Core::Ordering::Custom
  # source://rspec-core//lib/rspec/core/ordering.rb#72
  def initialize(callable); end

  # source://rspec-core//lib/rspec/core/ordering.rb#76
  def order(list); end
end

# source://rspec-core//lib/rspec/core/ordering.rb#7
class RSpec::Core::Ordering::Identity
  # source://rspec-core//lib/rspec/core/ordering.rb#8
  def order(items); end
end

# source://rspec-core//lib/rspec/core/ordering.rb#15
class RSpec::Core::Ordering::Random
  # source://rspec-core//lib/rspec/core/ordering.rb#16
  def initialize(configuration); end

  # source://rspec-core//lib/rspec/core/ordering.rb#25
  def order(items); end

  # source://rspec-core//lib/rspec/core/ordering.rb#21
  def used?; end

  private

  # source://rspec-core//lib/rspec/core/ordering.rb#39
  def jenkins_hash_digest(string); end
end

# source://rspec-core//lib/rspec/core/ordering.rb#58
RSpec::Core::Ordering::Random::MAX_32_BIT = T.let(T.unsafe(nil), Integer)

# source://rspec-core//lib/rspec/core/ordering.rb#63
class RSpec::Core::Ordering::RecentlyModified
  # source://rspec-core//lib/rspec/core/ordering.rb#64
  def order(list); end
end

# source://rspec-core//lib/rspec/core/ordering.rb#83
class RSpec::Core::Ordering::Registry
  # source://rspec-core//lib/rspec/core/ordering.rb#84
  def initialize(configuration); end

  # source://rspec-core//lib/rspec/core/ordering.rb#98
  def fetch(name, &fallback); end

  # source://rspec-core//lib/rspec/core/ordering.rb#102
  def register(sym, strategy); end

  # source://rspec-core//lib/rspec/core/ordering.rb#106
  def used_random_seed?; end
end

# source://rspec-core//lib/rspec/core/output_wrapper.rb#4
class RSpec::Core::OutputWrapper
  # source://rspec-core//lib/rspec/core/output_wrapper.rb#9
  def initialize(output); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def <<(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def advise(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def autoclose=(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def autoclose?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def binmode(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def binmode?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def bytes(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def chars(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def close(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def close_on_exec=(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def close_on_exec?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def close_read(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def close_write(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def closed?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def codepoints(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def each(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def each_byte(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def each_char(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def each_codepoint(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def each_line(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def eof(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def eof?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def external_encoding(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def fcntl(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def fdatasync(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def fileno(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def flush(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def fsync(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def getbyte(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def getc(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def gets(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def inspect(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def internal_encoding(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def ioctl(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def isatty(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def lineno(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def lineno=(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def lines(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#17
  def method_missing(name, *args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def nonblock(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def nonblock=(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def nonblock?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def nread(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#6
  def output; end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#6
  def output=(_arg0); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def pathconf(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def pid(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def pos(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def pos=(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def pread(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def print(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def printf(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def putc(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def puts(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def pwrite(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def read(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def read_nonblock(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def readbyte(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def readchar(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def readline(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def readlines(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def readpartial(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def ready?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def reopen(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#13
  def respond_to?(name, priv = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def rewind(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def seek(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def set_encoding(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def set_encoding_by_bom(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def stat(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def sync(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def sync=(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def sysread(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def sysseek(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def syswrite(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def tell(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def to_i(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def to_io(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def tty?(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def ungetbyte(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def ungetc(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def wait(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def wait_readable(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def wait_writable(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def write(*args, &block); end

  # source://rspec-core//lib/rspec/core/output_wrapper.rb#23
  def write_nonblock(*args, &block); end
end

# source://rspec-core//lib/rspec/core/option_parser.rb#6
class RSpec::Core::Parser
  # source://rspec-core//lib/rspec/core/option_parser.rb#13
  def initialize(original_args); end

  # source://rspec-core//lib/rspec/core/option_parser.rb#11
  def original_args; end

  # source://rspec-core//lib/rspec/core/option_parser.rb#17
  def parse(source = T.unsafe(nil)); end

  private

  # source://rspec-core//lib/rspec/core/option_parser.rb#310
  def add_tag_filter(options, filter_type, tag_name, value = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/option_parser.rb#318
  def configure_only_failures(options); end

  # source://rspec-core//lib/rspec/core/option_parser.rb#39
  def parser(options); end

  # source://rspec-core//lib/rspec/core/option_parser.rb#314
  def set_fail_fast(options, value); end

  class << self
    # source://rspec-core//lib/rspec/core/option_parser.rb#7
    def parse(args, source = T.unsafe(nil)); end
  end
end

# source://rspec-core//lib/rspec/core/pending.rb#5
module RSpec::Core::Pending
  # source://rspec-core//lib/rspec/core/pending.rb#62
  def pending(message = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/pending.rb#110
  def skip(message = T.unsafe(nil)); end

  class << self
    # source://rspec-core//lib/rspec/core/pending.rb#152
    def mark_fixed!(example); end

    # source://rspec-core//lib/rspec/core/pending.rb#135
    def mark_pending!(example, message_or_bool); end

    # source://rspec-core//lib/rspec/core/pending.rb#124
    def mark_skipped!(example, message_or_bool); end
  end
end

# source://rspec-core//lib/rspec/core/pending.rb#29
RSpec::Core::Pending::NOT_YET_IMPLEMENTED = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/pending.rb#26
RSpec::Core::Pending::NO_REASON_GIVEN = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/pending.rb#22
class RSpec::Core::Pending::PendingExampleFixedError < ::StandardError; end

# source://rspec-core//lib/rspec/core/pending.rb#8
class RSpec::Core::Pending::SkipDeclaredInExample < ::StandardError
  # source://rspec-core//lib/rspec/core/pending.rb#11
  def initialize(argument); end

  # source://rspec-core//lib/rspec/core/pending.rb#9
  def argument; end
end

# source://rspec-core//lib/rspec/core/profiler.rb#4
class RSpec::Core::Profiler
  # source://rspec-core//lib/rspec/core/profiler.rb#7
  def initialize; end

  # source://rspec-core//lib/rspec/core/profiler.rb#20
  def example_group_finished(notification); end

  # source://rspec-core//lib/rspec/core/profiler.rb#13
  def example_group_started(notification); end

  # source://rspec-core//lib/rspec/core/profiler.rb#11
  def example_groups; end

  # source://rspec-core//lib/rspec/core/profiler.rb#28
  def example_started(notification); end
end

# source://rspec-core//lib/rspec/core/profiler.rb#5
RSpec::Core::Profiler::NOTIFICATIONS = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/reporter.rb#4
class RSpec::Core::Reporter
  # source://rspec-core//lib/rspec/core/reporter.rb#14
  def initialize(configuration); end

  # source://rspec-core//lib/rspec/core/reporter.rb#214
  def abort_with(msg, exit_status); end

  # source://rspec-core//lib/rspec/core/reporter.rb#193
  def close_after; end

  # source://rspec-core//lib/rspec/core/reporter.rb#155
  def deprecation(hash); end

  # source://rspec-core//lib/rspec/core/reporter.rb#143
  def example_failed(example); end

  # source://rspec-core//lib/rspec/core/reporter.rb#133
  def example_finished(example); end

  # source://rspec-core//lib/rspec/core/reporter.rb#122
  def example_group_finished(group); end

  # source://rspec-core//lib/rspec/core/reporter.rb#117
  def example_group_started(group); end

  # source://rspec-core//lib/rspec/core/reporter.rb#138
  def example_passed(example); end

  # source://rspec-core//lib/rspec/core/reporter.rb#149
  def example_pending(example); end

  # source://rspec-core//lib/rspec/core/reporter.rb#127
  def example_started(example); end

  # source://rspec-core//lib/rspec/core/reporter.rb#28
  def examples; end

  # source://rspec-core//lib/rspec/core/reporter.rb#84
  def exit_early(exit_code); end

  # source://rspec-core//lib/rspec/core/reporter.rb#221
  def fail_fast_limit_met?; end

  # source://rspec-core//lib/rspec/core/reporter.rb#28
  def failed_examples; end

  # source://rspec-core//lib/rspec/core/reporter.rb#173
  def finish; end

  # source://rspec-core//lib/rspec/core/reporter.rb#99
  def message(message); end

  # source://rspec-core//lib/rspec/core/reporter.rb#206
  def notify(event, notification); end

  # source://rspec-core//lib/rspec/core/reporter.rb#163
  def notify_non_example_exception(exception, context_description); end

  # source://rspec-core//lib/rspec/core/reporter.rb#28
  def pending_examples; end

  # source://rspec-core//lib/rspec/core/reporter.rb#45
  def prepare_default(loader, output_stream, deprecation_stream); end

  # source://rspec-core//lib/rspec/core/reporter.rb#108
  def publish(event, options = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/reporter.rb#37
  def register_listener(listener, *notifications); end

  # source://rspec-core//lib/rspec/core/reporter.rb#52
  def registered_listeners(notification); end

  # source://rspec-core//lib/rspec/core/reporter.rb#71
  def report(expected_example_count); end

  # source://rspec-core//lib/rspec/core/reporter.rb#89
  def start(expected_example_count, time = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/reporter.rb#200
  def stop; end

  private

  # source://rspec-core//lib/rspec/core/reporter.rb#242
  def close; end

  # source://rspec-core//lib/rspec/core/reporter.rb#233
  def ensure_listeners_ready; end

  # source://rspec-core//lib/rspec/core/reporter.rb#246
  def mute_profile_output?; end

  # source://rspec-core//lib/rspec/core/reporter.rb#252
  def seed_used?; end
end

# source://rspec-core//lib/rspec/core/reporter.rb#6
RSpec::Core::Reporter::RSPEC_NOTIFICATIONS = T.let(T.unsafe(nil), RSpec::Core::Set)

# source://rspec-core//lib/rspec/core/ruby_project.rb#7
module RSpec::Core::RubyProject
  private

  # source://rspec-core//lib/rspec/core/ruby_project.rb#12
  def add_dir_to_load_path(dir); end

  # source://rspec-core//lib/rspec/core/ruby_project.rb#8
  def add_to_load_path(*dirs); end

  # source://rspec-core//lib/rspec/core/ruby_project.rb#28
  def ascend_until; end

  # source://rspec-core//lib/rspec/core/ruby_project.rb#20
  def determine_root; end

  # source://rspec-core//lib/rspec/core/ruby_project.rb#24
  def find_first_parent_containing(dir); end

  # source://rspec-core//lib/rspec/core/ruby_project.rb#16
  def root; end

  class << self
    # source://rspec-core//lib/rspec/core/ruby_project.rb#12
    def add_dir_to_load_path(dir); end

    # source://rspec-core//lib/rspec/core/ruby_project.rb#8
    def add_to_load_path(*dirs); end

    # source://rspec-core//lib/rspec/core/ruby_project.rb#28
    def ascend_until; end

    # source://rspec-core//lib/rspec/core/ruby_project.rb#20
    def determine_root; end

    # source://rspec-core//lib/rspec/core/ruby_project.rb#24
    def find_first_parent_containing(dir); end

    # source://rspec-core//lib/rspec/core/ruby_project.rb#16
    def root; end
  end
end

# source://rspec-core//lib/rspec/core/runner.rb#4
class RSpec::Core::Runner
  # source://rspec-core//lib/rspec/core/runner.rb#75
  def initialize(options, configuration = T.unsafe(nil), world = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/runner.rb#7
  def configuration; end

  # source://rspec-core//lib/rspec/core/runner.rb#129
  def configure(err, out); end

  # source://rspec-core//lib/rspec/core/runner.rb#190
  def exit_code(examples_passed = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/runner.rb#7
  def options; end

  # source://rspec-core//lib/rspec/core/runner.rb#85
  def run(err, out); end

  # source://rspec-core//lib/rspec/core/runner.rb#113
  def run_specs(example_groups); end

  # source://rspec-core//lib/rspec/core/runner.rb#98
  def setup(err, out); end

  # source://rspec-core//lib/rspec/core/runner.rb#7
  def world; end

  private

  # source://rspec-core//lib/rspec/core/runner.rb#199
  def persist_example_statuses; end

  class << self
    # source://rspec-core//lib/rspec/core/runner.rb#16
    def autorun; end

    # source://rspec-core//lib/rspec/core/runner.rb#141
    def autorun_disabled?; end

    # source://rspec-core//lib/rspec/core/runner.rb#136
    def disable_autorun!; end

    # source://rspec-core//lib/rspec/core/runner.rb#180
    def handle_interrupt; end

    # source://rspec-core//lib/rspec/core/runner.rb#146
    def installed_at_exit?; end

    # source://rspec-core//lib/rspec/core/runner.rb#43
    def invoke; end

    # source://rspec-core//lib/rspec/core/runner.rb#29
    def perform_at_exit; end

    # source://rspec-core//lib/rspec/core/runner.rb#64
    def run(args, err = T.unsafe(nil), out = T.unsafe(nil)); end

    # source://rspec-core//lib/rspec/core/runner.rb#151
    def running_in_drb?; end

    # source://rspec-core//lib/rspec/core/runner.rb#175
    def trap_interrupt; end
  end
end

# source://rspec-core//lib/rspec/core/set.rb#11
class RSpec::Core::Set
  include ::Enumerable

  # source://rspec-core//lib/rspec/core/set.rb#14
  def initialize(array = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/set.rb#23
  def <<(key); end

  # source://rspec-core//lib/rspec/core/set.rb#48
  def clear; end

  # source://rspec-core//lib/rspec/core/set.rb#28
  def delete(key); end

  # source://rspec-core//lib/rspec/core/set.rb#32
  def each(&block); end

  # source://rspec-core//lib/rspec/core/set.rb#19
  def empty?; end

  # source://rspec-core//lib/rspec/core/set.rb#37
  def include?(key); end

  # source://rspec-core//lib/rspec/core/set.rb#41
  def merge(values); end
end

# source://rspec-core//lib/rspec/core/shared_context.rb#19
module RSpec::Core::SharedContext
  # source://rspec-core//lib/rspec/core/shared_context.rb#28
  def __shared_context_recordings; end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def after(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def append_after(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def append_before(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def around(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def before(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def context(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def describe(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def hooks(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#21
  def included(group); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def let(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def let!(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def prepend_after(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def prepend_before(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def subject(*args, &block); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#42
  def subject!(*args, &block); end

  class << self
    # source://rspec-core//lib/rspec/core/shared_context.rb#40
    def record(methods); end
  end
end

# source://rspec-core//lib/rspec/core/shared_context.rb#33
class RSpec::Core::SharedContext::Recording < ::Struct
  def args; end

  # source://rspec-core//lib/rspec/core/shared_context.rb#33
  def args=(_); end

  def block; end

  # source://rspec-core//lib/rspec/core/shared_context.rb#33
  def block=(_); end

  def method_name; end

  # source://rspec-core//lib/rspec/core/shared_context.rb#33
  def method_name=(_); end

  # source://rspec-core//lib/rspec/core/shared_context.rb#34
  def playback_onto(group); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/shared_example_group.rb#57
module RSpec::Core::SharedExampleGroup
  # source://rspec-core//lib/rspec/core/shared_example_group.rb#90
  def shared_context(name, *args, &block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#90
  def shared_examples(name, *args, &block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#90
  def shared_examples_for(name, *args, &block); end
end

# source://rspec-core//lib/rspec/core/shared_example_group.rb#149
class RSpec::Core::SharedExampleGroup::Registry
  # source://rspec-core//lib/rspec/core/shared_example_group.rb#150
  def add(context, name, *metadata_args, &block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#174
  def find(lookup_contexts, name); end

  private

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#257
  def ensure_block_has_source_location(_block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#245
  def formatted_location(block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#189
  def legacy_add(context, name, *metadata_args, &block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#204
  def shared_example_groups; end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#208
  def valid_name?(candidate); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#215
  def warn_if_key_taken(context, key, new_block); end
end

# source://rspec-core//lib/rspec/core/shared_example_group.rb#106
module RSpec::Core::SharedExampleGroup::TopLevelDSL
  class << self
    # source://rspec-core//lib/rspec/core/shared_example_group.rb#108
    def definitions; end

    # source://rspec-core//lib/rspec/core/shared_example_group.rb#126
    def expose_globally!; end

    # source://rspec-core//lib/rspec/core/shared_example_group.rb#119
    def exposed_globally?; end

    # source://rspec-core//lib/rspec/core/shared_example_group.rb#135
    def remove_globally!; end
  end
end

# source://rspec-core//lib/rspec/core/example_group.rb#782
class RSpec::Core::SharedExampleGroupInclusionStackFrame
  # source://rspec-core//lib/rspec/core/example_group.rb#789
  def initialize(shared_group_name, inclusion_location); end

  # source://rspec-core//lib/rspec/core/example_group.rb#805
  def description; end

  # source://rspec-core//lib/rspec/core/example_group.rb#795
  def formatted_inclusion_location; end

  # source://rspec-core//lib/rspec/core/example_group.rb#786
  def inclusion_location; end

  # source://rspec-core//lib/rspec/core/example_group.rb#784
  def shared_group_name; end

  class << self
    # source://rspec-core//lib/rspec/core/example_group.rb#811
    def current_backtrace; end

    # source://rspec-core//lib/rspec/core/example_group.rb#829
    def shared_example_group_inclusions; end

    # source://rspec-core//lib/rspec/core/example_group.rb#816
    def with_frame(name, location); end
  end
end

# source://rspec-core//lib/rspec/core/shared_example_group.rb#10
class RSpec::Core::SharedExampleGroupModule < ::Module
  # source://rspec-core//lib/rspec/core/shared_example_group.rb#13
  def initialize(description, definition, metadata); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#11
  def definition; end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#34
  def include_in(klass, inclusion_line, args, customization_block); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#28
  def included(klass); end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#20
  def inspect; end

  # source://rspec-core//lib/rspec/core/shared_example_group.rb#20
  def to_s; end
end

# source://rspec-core//lib/rspec/core/shell_escape.rb#5
module RSpec::Core::ShellEscape
  private

  # source://rspec-core//lib/rspec/core/shell_escape.rb#32
  def conditionally_quote(id); end

  # source://rspec-core//lib/rspec/core/shell_escape.rb#19
  def escape(shell_command); end

  # source://rspec-core//lib/rspec/core/shell_escape.rb#8
  def quote(argument); end

  # source://rspec-core//lib/rspec/core/shell_escape.rb#37
  def shell_allows_unquoted_ids?; end

  class << self
    # source://rspec-core//lib/rspec/core/shell_escape.rb#32
    def conditionally_quote(id); end

    # source://rspec-core//lib/rspec/core/shell_escape.rb#19
    def escape(shell_command); end

    # source://rspec-core//lib/rspec/core/shell_escape.rb#8
    def quote(argument); end

    # source://rspec-core//lib/rspec/core/shell_escape.rb#37
    def shell_allows_unquoted_ids?; end
  end
end

# source://rspec-core//lib/rspec/core/shell_escape.rb#30
RSpec::Core::ShellEscape::SHELLS_ALLOWING_UNQUOTED_IDS = T.let(T.unsafe(nil), Array)

# source://rspec-core//lib/rspec/core/example.rb#651
class RSpec::Core::SuiteHookContext < ::RSpec::Core::Example
  # source://rspec-core//lib/rspec/core/example.rb#652
  def initialize(hook_description, reporter); end

  # source://rspec-core//lib/rspec/core/example.rb#659
  def set_exception(exception); end
end

# source://rspec-core//lib/rspec/core.rb#174
class RSpec::Core::Time
  class << self
    def now(*_arg0); end
  end
end

# source://rspec-core//lib/rspec/core/version.rb#4
module RSpec::Core::Version; end

# source://rspec-core//lib/rspec/core/version.rb#6
RSpec::Core::Version::STRING = T.let(T.unsafe(nil), String)

# source://rspec-core//lib/rspec/core/warnings.rb#6
module RSpec::Core::Warnings
  # source://rspec-core//lib/rspec/core/warnings.rb#10
  def deprecate(deprecated, data = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/warnings.rb#22
  def warn_deprecation(message, opts = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/warnings.rb#27
  def warn_with(message, options = T.unsafe(nil)); end
end

# source://rspec-core//lib/rspec/core/world.rb#6
class RSpec::Core::World
  # source://rspec-core//lib/rspec/core/world.rb#26
  def initialize(configuration = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/world.rb#115
  def all_example_groups; end

  # source://rspec-core//lib/rspec/core/world.rb#120
  def all_examples; end

  # source://rspec-core//lib/rspec/core/world.rb#226
  def announce_exclusion_filter(announcements); end

  # source://rspec-core//lib/rspec/core/world.rb#171
  def announce_filters; end

  # source://rspec-core//lib/rspec/core/world.rb#217
  def announce_inclusion_filter(announcements); end

  # source://rspec-core//lib/rspec/core/world.rb#210
  def everything_filtered_message; end

  # source://rspec-core//lib/rspec/core/world.rb#109
  def example_count(groups = T.unsafe(nil)); end

  # source://rspec-core//lib/rspec/core/world.rb#8
  def example_group_counts_by_spec_file; end

  # source://rspec-core//lib/rspec/core/world.rb#8
  def example_groups; end

  # source://rspec-core//lib/rspec/core/world.rb#102
  def exclusion_filter; end

  # source://rspec-core//lib/rspec/core/world.rb#69
  def filter_manager; end

  # source://rspec-core//lib/rspec/core/world.rb#8
  def filtered_examples; end

  # source://rspec-core//lib/rspec/core/world.rb#97
  def inclusion_filter; end

  # source://rspec-core//lib/rspec/core/world.rb#24
  def non_example_failure; end

  # source://rspec-core//lib/rspec/core/world.rb#24
  def non_example_failure=(_arg0); end

  # source://rspec-core//lib/rspec/core/world.rb#87
  def num_example_groups_defined_in(file); end

  # source://rspec-core//lib/rspec/core/world.rb#52
  def ordered_example_groups; end

  # source://rspec-core//lib/rspec/core/world.rb#140
  def preceding_declaration_line(absolute_file_name, filter_line); end

  # source://rspec-core//lib/rspec/core/world.rb#43
  def prepare_example_filtering; end

  # source://rspec-core//lib/rspec/core/world.rb#81
  def record(example_group); end

  # source://rspec-core//lib/rspec/core/world.rb#74
  def registered_example_group_files; end

  # source://rspec-core//lib/rspec/core/world.rb#205
  def report_filter_message(message); end

  # source://rspec-core//lib/rspec/core/world.rb#149
  def reporter; end

  # source://rspec-core//lib/rspec/core/world.rb#60
  def reset; end

  # source://rspec-core//lib/rspec/core/world.rb#18
  def rspec_is_quitting; end

  # source://rspec-core//lib/rspec/core/world.rb#18
  def rspec_is_quitting=(_arg0); end

  # source://rspec-core//lib/rspec/core/world.rb#92
  def shared_example_group_registry; end

  # source://rspec-core//lib/rspec/core/world.rb#154
  def source_from_file(path); end

  # source://rspec-core//lib/rspec/core/world.rb#164
  def syntax_highlighter; end

  # source://rspec-core//lib/rspec/core/world.rb#131
  def traverse_example_group_trees_until(&block); end

  # source://rspec-core//lib/rspec/core/world.rb#11
  def wants_to_quit; end

  # source://rspec-core//lib/rspec/core/world.rb#11
  def wants_to_quit=(_arg0); end

  private

  # source://rspec-core//lib/rspec/core/world.rb#234
  def descending_declaration_line_numbers_by_file; end

  # source://rspec-core//lib/rspec/core/world.rb#252
  def fail_if_config_and_cli_options_invalid; end
end

# source://rspec-core//lib/rspec/core/world.rb#264
module RSpec::Core::World::Null
  class << self
    # source://rspec-core//lib/rspec/core/world.rb#280
    def all_example_groups; end

    # source://rspec-core//lib/rspec/core/world.rb#276
    def example_groups; end

    # source://rspec-core//lib/rspec/core/world.rb#265
    def non_example_failure; end

    # source://rspec-core//lib/rspec/core/world.rb#266
    def non_example_failure=(_); end

    # source://rspec-core//lib/rspec/core/world.rb#268
    def registered_example_group_files; end

    # source://rspec-core//lib/rspec/core/world.rb#272
    def traverse_example_group_trees_until; end
  end
end

# source://rspec-core//lib/rspec/core/example_group.rb#839
module RSpec::ExampleGroups
  extend ::RSpec::Support::RecursiveConstMethods

  class << self
    # source://rspec-core//lib/rspec/core/example_group.rb#842
    def assign_const(group); end

    # source://rspec-core//lib/rspec/core/example_group.rb#862
    def base_name_for(group); end

    # source://rspec-core//lib/rspec/core/example_group.rb#850
    def constant_scope_for(group); end

    # source://rspec-core//lib/rspec/core/example_group.rb#895
    def disambiguate(name, const_scope); end

    # source://rspec-core//lib/rspec/core/example_group.rb#856
    def remove_all_constants; end
  end
end

# source://rspec-core//lib/rspec/core.rb#187
RSpec::MODULES_TO_AUTOLOAD = T.let(T.unsafe(nil), Hash)
