# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ast` gem.
# Please instead update this file by running `bin/tapioca gem ast`.

# source://ast//lib/ast.rb#13
module AST; end

# source://ast//lib/ast/node.rb#40
class AST::Node
  # source://ast//lib/ast/node.rb#72
  def initialize(type, children = T.unsafe(nil), properties = T.unsafe(nil)); end

  # source://ast//lib/ast/node.rb#168
  def +(array); end

  # source://ast//lib/ast/node.rb#177
  def <<(element); end

  # source://ast//lib/ast/node.rb#153
  def ==(other); end

  # source://ast//lib/ast/node.rb#177
  def append(element); end

  # source://ast//lib/ast/node.rb#56
  def children; end

  # source://ast//lib/ast/node.rb#115
  def clone; end

  # source://ast//lib/ast/node.rb#168
  def concat(array); end

  # source://ast//lib/ast/node.rb#253
  def deconstruct; end

  # source://ast//lib/ast/node.rb#115
  def dup; end

  # source://ast//lib/ast/node.rb#85
  def eql?(other); end

  # source://ast//lib/ast/node.rb#61
  def hash; end

  # source://ast//lib/ast/node.rb#211
  def inspect(indent = T.unsafe(nil)); end

  # source://ast//lib/ast/node.rb#56
  def to_a; end

  # source://ast//lib/ast/node.rb#229
  def to_ast; end

  # source://ast//lib/ast/node.rb#187
  def to_s(indent = T.unsafe(nil)); end

  # source://ast//lib/ast/node.rb#187
  def to_sexp(indent = T.unsafe(nil)); end

  # source://ast//lib/ast/node.rb#237
  def to_sexp_array; end

  # source://ast//lib/ast/node.rb#43
  def type; end

  # source://ast//lib/ast/node.rb#133
  def updated(type = T.unsafe(nil), children = T.unsafe(nil), properties = T.unsafe(nil)); end

  protected

  # source://ast//lib/ast/node.rb#98
  def assign_properties(properties); end

  # source://ast//lib/ast/node.rb#264
  def fancy_type; end

  private

  def original_dup; end
end

# source://ast//lib/ast/processor.rb#8
class AST::Processor
  include ::AST::Processor::Mixin
end

# source://ast//lib/ast/processor/mixin.rb#240
module AST::Processor::Mixin
  # source://ast//lib/ast/processor/mixin.rb#284
  def handler_missing(node); end

  # source://ast//lib/ast/processor/mixin.rb#251
  def process(node); end

  # source://ast//lib/ast/processor/mixin.rb#274
  def process_all(nodes); end
end

# source://ast//lib/ast/sexp.rb#20
module AST::Sexp
  # source://ast//lib/ast/sexp.rb#26
  def s(type, *children); end
end
