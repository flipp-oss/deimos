# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `actionmailer` gem.
# Please instead update this file by running `bin/tapioca gem actionmailer`.

# source://actionmailer//lib/action_mailer/gem_version.rb#3
module ActionMailer
  extend ::ActiveSupport::Autoload

  class << self
    # source://actionmailer//lib/action_mailer.rb#57
    def eager_load!; end

    # source://actionmailer//lib/action_mailer/gem_version.rb#5
    def gem_version; end

    # source://actionmailer//lib/action_mailer/version.rb#8
    def version; end
  end
end

# source://actionmailer//lib/action_mailer/base.rb#437
class ActionMailer::Base < ::AbstractController::Base
  include ::ActionMailer::DeliveryMethods
  include ::ActiveSupport::Rescuable
  include ::ActionMailer::Rescuable
  include ::ActionMailer::Parameterized
  include ::ActionMailer::Previews
  include ::ActionView::ViewPaths
  include ::AbstractController::Rendering
  include ::AbstractController::Logger
  include ::ActiveSupport::Benchmarkable
  include ::AbstractController::Helpers
  include ::AbstractController::Translation
  include ::AbstractController::AssetPaths
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks
  include ::AbstractController::Caching::Fragments
  include ::AbstractController::Caching::ConfigMethods
  include ::AbstractController::Caching
  include ::ActionView::Rendering
  include ::ActionView::Layouts
  extend ::ActionMailer::DeliveryMethods::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
  extend ::ActionMailer::Rescuable::ClassMethods
  extend ::ActionMailer::Parameterized::ClassMethods
  extend ::ActionMailer::Previews::ClassMethods
  extend ::ActionView::ViewPaths::ClassMethods
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::AbstractController::Callbacks::ClassMethods
  extend ::AbstractController::Caching::Fragments::ClassMethods
  extend ::AbstractController::Caching::ClassMethods
  extend ::AbstractController::Caching::ConfigMethods
  extend ::ActionView::Rendering::ClassMethods
  extend ::ActionView::Layouts::ClassMethods

  # source://actionmailer//lib/action_mailer/base.rb#601
  def initialize; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
  def __callbacks; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
  def __callbacks?; end

  # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#10
  def _helper_methods; end

  # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#10
  def _helper_methods=(_arg0); end

  # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#10
  def _helper_methods?; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#835
  def _process_action_callbacks; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#823
  def _run_process_action_callbacks(&block); end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies; end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies=(_arg0); end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies?; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def asset_host; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def asset_host=(value); end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def assets_dir; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def assets_dir=(value); end

  # source://actionmailer//lib/action_mailer/base.rb#715
  def attachments; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def default_asset_host_protocol; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def default_asset_host_protocol=(value); end

  # source://actionmailer//lib/action_mailer/base.rb#461
  def default_params; end

  # source://actionmailer//lib/action_mailer/base.rb#461
  def default_params=(_arg0); end

  # source://actionmailer//lib/action_mailer/base.rb#461
  def default_params?; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def default_static_extension; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def default_static_extension=(value); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#15
  def deliver_later_queue_name; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#15
  def deliver_later_queue_name=(val); end

  # source://actionmailer//lib/action_mailer/base.rb#460
  def delivery_job; end

  # source://actionmailer//lib/action_mailer/base.rb#460
  def delivery_job=(_arg0); end

  # source://actionmailer//lib/action_mailer/base.rb#460
  def delivery_job?; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#18
  def delivery_method; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#18
  def delivery_method=(_arg0); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#18
  def delivery_method?; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#17
  def delivery_methods; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#17
  def delivery_methods=(_arg0); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#17
  def delivery_methods?; end

  # source://actionmailer//lib/action_mailer/base.rb#639
  def email_address_with_name(address, name); end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def enable_fragment_cache_logging; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def enable_fragment_cache_logging=(value); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def file_settings; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def file_settings=(_arg0); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def file_settings?; end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys; end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys=(_arg0); end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys?; end

  # source://actionmailer//lib/action_mailer/base.rb#677
  def headers(args = T.unsafe(nil)); end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def javascripts_dir; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def javascripts_dir=(value); end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def logger; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def logger=(value); end

  # source://actionmailer//lib/action_mailer/base.rb#824
  def mail(headers = T.unsafe(nil), &block); end

  # source://actionmailer//lib/action_mailer/base.rb#634
  def mailer_name; end

  # source://activesupport/6.1.7.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def message; end

  # source://activesupport/6.1.7.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def message=(_arg0); end

  # source://actionmailer//lib/action_mailer/parameterized.rb#91
  def params; end

  # source://actionmailer//lib/action_mailer/parameterized.rb#91
  def params=(_arg0); end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def perform_caching; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def perform_caching=(value); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#14
  def perform_deliveries; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#14
  def perform_deliveries=(val); end

  # source://actionmailer//lib/action_mailer/preview.rb#25
  def preview_interceptors; end

  # source://actionmailer//lib/action_mailer/preview.rb#14
  def preview_path; end

  # source://actionmailer//lib/action_mailer/base.rb#607
  def process(method_name, *args); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#13
  def raise_delivery_errors; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#13
  def raise_delivery_errors=(val); end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def relative_url_root; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def relative_url_root=(value); end

  # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
  def rescue_handlers; end

  # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
  def rescue_handlers=(_arg0); end

  # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
  def rescue_handlers?; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def sendmail_settings; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def sendmail_settings=(_arg0); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def sendmail_settings?; end

  # source://actionmailer//lib/action_mailer/preview.rb#22
  def show_previews; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def smtp_settings; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def smtp_settings=(_arg0); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def smtp_settings?; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
  def stylesheets_dir; end

  # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
  def stylesheets_dir=(value); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def test_settings; end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def test_settings=(_arg0); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
  def test_settings?; end

  private

  # source://actionview/6.1.7.3/lib/action_view/layouts.rb#325
  def _layout(lookup_context, formats); end

  # source://actionmailer//lib/action_mailer/base.rb#1025
  def _protected_ivars; end

  # source://actionmailer//lib/action_mailer/base.rb#901
  def apply_defaults(headers); end

  # source://actionmailer//lib/action_mailer/base.rb#921
  def assign_headers_to_message(message, headers); end

  # source://actionmailer//lib/action_mailer/base.rb#927
  def collect_responses(headers, &block); end

  # source://actionmailer//lib/action_mailer/base.rb#937
  def collect_responses_from_block(headers); end

  # source://actionmailer//lib/action_mailer/base.rb#951
  def collect_responses_from_templates(headers); end

  # source://actionmailer//lib/action_mailer/base.rb#944
  def collect_responses_from_text(headers); end

  # source://actionmailer//lib/action_mailer/base.rb#911
  def compute_default(value); end

  # source://actionmailer//lib/action_mailer/base.rb#994
  def create_parts_from_responses(m, responses); end

  # source://actionmailer//lib/action_mailer/base.rb#891
  def default_i18n_subject(interpolations = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/base.rb#964
  def each_template(paths, name, &block); end

  # source://actionmailer//lib/action_mailer/base.rb#1007
  def insert_part(container, response, charset); end

  # source://actionmailer//lib/action_mailer/base.rb#1021
  def instrument_name; end

  # source://actionmailer//lib/action_mailer/base.rb#1014
  def instrument_payload(key); end

  # source://actionmailer//lib/action_mailer/base.rb#869
  def set_content_type(m, user_content_type, class_default); end

  # source://actionmailer//lib/action_mailer/base.rb#973
  def wrap_inline_attachments(message); end

  class << self
    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks=(value); end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks?; end

    # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#10
    def _helper_methods; end

    # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#10
    def _helper_methods=(value); end

    # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#10
    def _helper_methods?; end

    # source://actionpack/6.1.7.3/lib/abstract_controller/helpers.rb#14
    def _helpers; end

    # source://actionview/6.1.7.3/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/6.1.7.3/lib/action_view/layouts.rb#209
    def _layout=(value); end

    # source://actionview/6.1.7.3/lib/action_view/layouts.rb#209
    def _layout?; end

    # source://actionview/6.1.7.3/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionview/6.1.7.3/lib/action_view/layouts.rb#210
    def _layout_conditions=(value); end

    # source://actionview/6.1.7.3/lib/action_view/layouts.rb#210
    def _layout_conditions?; end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#827
    def _process_action_callbacks; end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#831
    def _process_action_callbacks=(value); end

    # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies; end

    # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies=(value); end

    # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies?; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def asset_host; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def asset_host=(value); end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def assets_dir; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def assets_dir=(value); end

    # source://actionmailer//lib/action_mailer/base.rb#529
    def controller_path; end

    # source://actionmailer//lib/action_mailer/base.rb#541
    def default(value = T.unsafe(nil)); end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def default_asset_host_protocol; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def default_asset_host_protocol=(value); end

    # source://actionmailer//lib/action_mailer/base.rb#541
    def default_options=(value = T.unsafe(nil)); end

    # source://actionmailer//lib/action_mailer/base.rb#461
    def default_params; end

    # source://actionmailer//lib/action_mailer/base.rb#461
    def default_params=(value); end

    # source://actionmailer//lib/action_mailer/base.rb#461
    def default_params?; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def default_static_extension; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def default_static_extension=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#15
    def deliver_later_queue_name; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#15
    def deliver_later_queue_name=(val); end

    # source://actionmailer//lib/action_mailer/base.rb#556
    def deliver_mail(mail); end

    # source://actionmailer//lib/action_mailer/base.rb#460
    def delivery_job; end

    # source://actionmailer//lib/action_mailer/base.rb#460
    def delivery_job=(value); end

    # source://actionmailer//lib/action_mailer/base.rb#460
    def delivery_job?; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#18
    def delivery_method; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#18
    def delivery_method=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#18
    def delivery_method?; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#17
    def delivery_methods; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#17
    def delivery_methods=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#17
    def delivery_methods?; end

    # source://actionmailer//lib/action_mailer/base.rb#564
    def email_address_with_name(address, name); end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def enable_fragment_cache_logging; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def enable_fragment_cache_logging=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def file_settings; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def file_settings=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def file_settings?; end

    # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys; end

    # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys=(value); end

    # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys?; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def javascripts_dir; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def javascripts_dir=(value); end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def logger; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def logger=(value); end

    # source://actionmailer//lib/action_mailer/base.rb#529
    def mailer_name; end

    # source://actionmailer//lib/action_mailer/base.rb#533
    def mailer_name=(_arg0); end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def perform_caching; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def perform_caching=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#14
    def perform_deliveries; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#14
    def perform_deliveries=(val); end

    # source://actionmailer//lib/action_mailer/preview.rb#25
    def preview_interceptors; end

    # source://actionmailer//lib/action_mailer/preview.rb#25
    def preview_interceptors=(val); end

    # source://actionmailer//lib/action_mailer/preview.rb#14
    def preview_path; end

    # source://actionmailer//lib/action_mailer/preview.rb#14
    def preview_path=(val); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#13
    def raise_delivery_errors; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#13
    def raise_delivery_errors=(val); end

    # source://actionmailer//lib/action_mailer/base.rb#506
    def register_interceptor(interceptor); end

    # source://actionmailer//lib/action_mailer/base.rb#480
    def register_interceptors(*interceptors); end

    # source://actionmailer//lib/action_mailer/base.rb#492
    def register_observer(observer); end

    # source://actionmailer//lib/action_mailer/base.rb#470
    def register_observers(*observers); end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def relative_url_root; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def relative_url_root=(value); end

    # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
    def rescue_handlers; end

    # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
    def rescue_handlers=(value); end

    # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
    def rescue_handlers?; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def sendmail_settings; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def sendmail_settings=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def sendmail_settings?; end

    # source://actionmailer//lib/action_mailer/preview.rb#22
    def show_previews; end

    # source://actionmailer//lib/action_mailer/preview.rb#22
    def show_previews=(val); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def smtp_settings; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def smtp_settings=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def smtp_settings?; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#111
    def stylesheets_dir; end

    # source://activesupport/6.1.7.3/lib/active_support/configurable.rb#112
    def stylesheets_dir=(value); end

    # source://actionmailer//lib/action_mailer/base.rb#897
    def supports_path?; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def test_settings; end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def test_settings=(value); end

    # source://actionmailer//lib/action_mailer/delivery_methods.rb#51
    def test_settings?; end

    # source://actionmailer//lib/action_mailer/base.rb#513
    def unregister_interceptor(interceptor); end

    # source://actionmailer//lib/action_mailer/base.rb#485
    def unregister_interceptors(*interceptors); end

    # source://actionmailer//lib/action_mailer/base.rb#499
    def unregister_observer(observer); end

    # source://actionmailer//lib/action_mailer/base.rb#475
    def unregister_observers(*observers); end

    private

    # source://actionmailer//lib/action_mailer/base.rb#585
    def method_missing(method_name, *args); end

    # source://actionmailer//lib/action_mailer/base.rb#517
    def observer_class_for(value); end

    # source://actionmailer//lib/action_mailer/base.rb#594
    def respond_to_missing?(method, include_all = T.unsafe(nil)); end

    # source://actionmailer//lib/action_mailer/base.rb#572
    def set_payload_for_mail(payload, mail); end
  end
end

# source://actionmailer//lib/action_mailer/base.rb#0
module ActionMailer::Base::HelperMethods
  include ::ActionMailer::MailHelper

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching/fragments.rb#31
  def combined_fragment_cache_key(*args, &block); end

  # source://actionpack/6.1.7.3/lib/abstract_controller/caching.rb#43
  def view_cache_dependencies(*args, &block); end
end

# source://actionmailer//lib/action_mailer/base.rb#723
class ActionMailer::Base::LateAttachmentsProxy < ::SimpleDelegator
  # source://actionmailer//lib/action_mailer/base.rb#725
  def []=(_name, _content); end

  # source://actionmailer//lib/action_mailer/base.rb#724
  def inline; end

  private

  # source://actionmailer//lib/action_mailer/base.rb#728
  def _raise_error; end
end

# source://actionmailer//lib/action_mailer/base.rb#620
class ActionMailer::Base::NullMail
  # source://actionmailer//lib/action_mailer/base.rb#621
  def body; end

  # source://actionmailer//lib/action_mailer/base.rb#622
  def header; end

  # source://actionmailer//lib/action_mailer/base.rb#628
  def method_missing(*args); end

  # source://actionmailer//lib/action_mailer/base.rb#624
  def respond_to?(string, include_all = T.unsafe(nil)); end
end

# source://actionmailer//lib/action_mailer/base.rb#456
ActionMailer::Base::PROTECTED_IVARS = T.let(T.unsafe(nil), Array)

# source://actionmailer//lib/action_mailer/collector.rb#8
class ActionMailer::Collector
  include ::AbstractController::Collector

  # source://actionmailer//lib/action_mailer/collector.rb#12
  def initialize(context, &block); end

  # source://actionmailer//lib/action_mailer/collector.rb#18
  def all(*args, &block); end

  # source://actionmailer//lib/action_mailer/collector.rb#18
  def any(*args, &block); end

  # source://actionmailer//lib/action_mailer/collector.rb#25
  def custom(mime, options = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/collector.rb#10
  def responses; end
end

# source://actionmailer//lib/action_mailer/delivery_job.rb#10
class ActionMailer::DeliveryJob < ::ActiveJob::Base
  # source://actionmailer//lib/action_mailer/delivery_job.rb#23
  def perform(mailer, mail_method, delivery_method, *args); end

  private

  # source://actionmailer//lib/action_mailer/delivery_job.rb#37
  def handle_exception_with_mailer_class(exception); end

  # source://actionmailer//lib/action_mailer/delivery_job.rb#31
  def mailer_class; end

  class << self
    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://activejob/6.1.7.3/lib/active_job/queue_name.rb#56
    def queue_name; end

    # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
    def rescue_handlers; end
  end
end

# source://actionmailer//lib/action_mailer/delivery_methods.rb#8
module ActionMailer::DeliveryMethods
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionMailer::DeliveryMethods::ClassMethods

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#78
  def wrap_delivery_behavior!(*args); end

  module GeneratedClassMethods
    def delivery_method; end
    def delivery_method=(value); end
    def delivery_method?; end
    def delivery_methods; end
    def delivery_methods=(value); end
    def delivery_methods?; end
    def file_settings; end
    def file_settings=(value); end
    def file_settings?; end
    def sendmail_settings; end
    def sendmail_settings=(value); end
    def sendmail_settings?; end
    def smtp_settings; end
    def smtp_settings=(value); end
    def smtp_settings?; end
    def test_settings; end
    def test_settings=(value); end
    def test_settings?; end
  end

  module GeneratedInstanceMethods
    def delivery_method; end
    def delivery_method=(value); end
    def delivery_method?; end
    def delivery_methods; end
    def delivery_methods=(value); end
    def delivery_methods?; end
    def file_settings; end
    def file_settings=(value); end
    def file_settings?; end
    def sendmail_settings; end
    def sendmail_settings=(value); end
    def sendmail_settings?; end
    def smtp_settings; end
    def smtp_settings=(value); end
    def smtp_settings?; end
    def test_settings; end
    def test_settings=(value); end
    def test_settings?; end
  end
end

# source://actionmailer//lib/action_mailer/delivery_methods.rb#40
module ActionMailer::DeliveryMethods::ClassMethods
  # source://actionmailer//lib/action_mailer/delivery_methods.rb#50
  def add_delivery_method(symbol, klass, default_options = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#42
  def deliveries(*_arg0, &_arg1); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#42
  def deliveries=(arg); end

  # source://actionmailer//lib/action_mailer/delivery_methods.rb#56
  def wrap_delivery_behavior(mail, method = T.unsafe(nil), options = T.unsafe(nil)); end
end

# source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#15
class ActionMailer::InlinePreviewInterceptor
  include ::Base64

  # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#24
  def initialize(message); end

  # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#28
  def transform!; end

  private

  # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#49
  def data_url(part); end

  # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#53
  def find_part(cid); end

  # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#45
  def html_part; end

  # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#43
  def message; end

  class << self
    # source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#20
    def previewing_email(message); end
  end
end

# source://actionmailer//lib/action_mailer/inline_preview_interceptor.rb#16
ActionMailer::InlinePreviewInterceptor::PATTERN = T.let(T.unsafe(nil), Regexp)

# source://actionmailer//lib/action_mailer/log_subscriber.rb#9
class ActionMailer::LogSubscriber < ::ActiveSupport::LogSubscriber
  # source://actionmailer//lib/action_mailer/log_subscriber.rb#10
  def deliver(event); end

  # source://actionmailer//lib/action_mailer/log_subscriber.rb#33
  def logger; end

  # source://actionmailer//lib/action_mailer/log_subscriber.rb#24
  def process(event); end
end

# source://actionmailer//lib/action_mailer/mail_delivery_job.rb#11
class ActionMailer::MailDeliveryJob < ::ActiveJob::Base
  # source://actionmailer//lib/action_mailer/mail_delivery_job.rb#16
  def perform(mailer, mail_method, delivery_method, args:, kwargs: T.unsafe(nil), params: T.unsafe(nil)); end

  private

  # source://actionmailer//lib/action_mailer/mail_delivery_job.rb#35
  def handle_exception_with_mailer_class(exception); end

  # source://actionmailer//lib/action_mailer/mail_delivery_job.rb#29
  def mailer_class; end

  class << self
    # source://activejob/6.1.7.3/lib/active_job/queue_name.rb#56
    def queue_name; end

    # source://activesupport/6.1.7.3/lib/active_support/rescuable.rb#13
    def rescue_handlers; end
  end
end

# source://actionmailer//lib/action_mailer/mail_helper.rb#7
module ActionMailer::MailHelper
  # source://actionmailer//lib/action_mailer/mail_helper.rb#43
  def attachments; end

  # source://actionmailer//lib/action_mailer/mail_helper.rb#20
  def block_format(text); end

  # source://actionmailer//lib/action_mailer/mail_helper.rb#55
  def format_paragraph(text, len = T.unsafe(nil), indent = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/mail_helper.rb#33
  def mailer; end

  # source://actionmailer//lib/action_mailer/mail_helper.rb#38
  def message; end
end

# source://actionmailer//lib/action_mailer/message_delivery.rb#17
class ActionMailer::MessageDelivery
  # source://actionmailer//lib/action_mailer/message_delivery.rb#18
  def initialize(mailer_class, action, *args); end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#29
  def __getobj__; end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#34
  def __setobj__(mail_message); end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#98
  def deliver_later(options = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#72
  def deliver_later!(options = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#117
  def deliver_now; end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#107
  def deliver_now!; end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#39
  def message; end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#44
  def processed?; end

  private

  # source://actionmailer//lib/action_mailer/message_delivery.rb#132
  def enqueue_delivery(delivery_method, options = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#126
  def processed_mailer; end

  # source://actionmailer//lib/action_mailer/message_delivery.rb#168
  def use_new_args?(job); end
end

# source://actionmailer//lib/action_mailer/test_case.rb#7
class ActionMailer::NonInferrableMailerError < ::StandardError
  # source://actionmailer//lib/action_mailer/test_case.rb#8
  def initialize(name); end
end

# source://actionmailer//lib/action_mailer/parameterized.rb#87
module ActionMailer::Parameterized
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionMailer::Parameterized::ClassMethods
end

# source://actionmailer//lib/action_mailer/parameterized.rb#94
module ActionMailer::Parameterized::ClassMethods
  # source://actionmailer//lib/action_mailer/parameterized.rb#100
  def with(params); end
end

# source://actionmailer//lib/action_mailer/parameterized.rb#125
class ActionMailer::Parameterized::DeliveryJob < ::ActionMailer::DeliveryJob
  # source://actionmailer//lib/action_mailer/parameterized.rb#126
  def perform(mailer, mail_method, delivery_method, params, *args); end
end

# source://actionmailer//lib/action_mailer/parameterized.rb#105
class ActionMailer::Parameterized::Mailer
  # source://actionmailer//lib/action_mailer/parameterized.rb#106
  def initialize(mailer, params); end

  private

  # source://actionmailer//lib/action_mailer/parameterized.rb#111
  def method_missing(method_name, *args); end

  # source://actionmailer//lib/action_mailer/parameterized.rb#120
  def respond_to_missing?(method, include_all = T.unsafe(nil)); end
end

# source://actionmailer//lib/action_mailer/parameterized.rb#132
class ActionMailer::Parameterized::MessageDelivery < ::ActionMailer::MessageDelivery
  # source://actionmailer//lib/action_mailer/parameterized.rb#133
  def initialize(mailer_class, action, params, *args); end

  private

  # source://actionmailer//lib/action_mailer/parameterized.rb#163
  def delivery_job_class; end

  # source://actionmailer//lib/action_mailer/parameterized.rb#147
  def enqueue_delivery(delivery_method, options = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/parameterized.rb#140
  def processed_mailer; end
end

# source://actionmailer//lib/action_mailer/preview.rb#69
class ActionMailer::Preview
  extend ::ActiveSupport::DescendantsTracker

  # source://actionmailer//lib/action_mailer/preview.rb#74
  def initialize(params = T.unsafe(nil)); end

  # source://actionmailer//lib/action_mailer/preview.rb#72
  def params; end

  class << self
    # source://actionmailer//lib/action_mailer/preview.rb#80
    def all; end

    # source://actionmailer//lib/action_mailer/preview.rb#88
    def call(email, params = T.unsafe(nil)); end

    # source://actionmailer//lib/action_mailer/preview.rb#101
    def email_exists?(email); end

    # source://actionmailer//lib/action_mailer/preview.rb#96
    def emails; end

    # source://actionmailer//lib/action_mailer/preview.rb#106
    def exists?(preview); end

    # source://actionmailer//lib/action_mailer/preview.rb#111
    def find(preview); end

    # source://actionmailer//lib/action_mailer/preview.rb#116
    def preview_name; end

    private

    # source://actionmailer//lib/action_mailer/preview.rb#135
    def inform_preview_interceptors(message); end

    # source://actionmailer//lib/action_mailer/preview.rb#121
    def load_previews; end

    # source://actionmailer//lib/action_mailer/preview.rb#127
    def preview_path; end

    # source://actionmailer//lib/action_mailer/preview.rb#131
    def show_previews; end
  end
end

# source://actionmailer//lib/action_mailer/preview.rb#6
module ActionMailer::Previews
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionMailer::Previews::ClassMethods
end

# source://actionmailer//lib/action_mailer/preview.rb#28
module ActionMailer::Previews::ClassMethods
  # source://actionmailer//lib/action_mailer/preview.rb#42
  def register_preview_interceptor(interceptor); end

  # source://actionmailer//lib/action_mailer/preview.rb#30
  def register_preview_interceptors(*interceptors); end

  # source://actionmailer//lib/action_mailer/preview.rb#53
  def unregister_preview_interceptor(interceptor); end

  # source://actionmailer//lib/action_mailer/preview.rb#35
  def unregister_preview_interceptors(*interceptors); end

  private

  # source://actionmailer//lib/action_mailer/preview.rb#58
  def interceptor_class_for(interceptor); end
end

# source://actionmailer//lib/action_mailer/rescuable.rb#6
module ActionMailer::Rescuable
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Rescuable

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Rescuable::ClassMethods
  mixes_in_class_methods ::ActionMailer::Rescuable::ClassMethods

  # source://actionmailer//lib/action_mailer/rescuable.rb#16
  def handle_exceptions; end

  private

  # source://actionmailer//lib/action_mailer/rescuable.rb#23
  def process(*_arg0); end

  module GeneratedClassMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end

  module GeneratedInstanceMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end
end

# source://actionmailer//lib/action_mailer/rescuable.rb#0
module ActionMailer::Rescuable::ClassMethods
  # source://actionmailer//lib/action_mailer/rescuable.rb#11
  def handle_exception(exception); end
end

# source://actionmailer//lib/action_mailer/test_case.rb#15
class ActionMailer::TestCase < ::ActiveSupport::TestCase
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActiveJob::TestHelper
  include ::ActionMailer::TestHelper
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::ActionMailer::TestCase::Behavior
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionMailer::TestCase::Behavior::ClassMethods

  # source://actionmailer//lib/action_mailer/test_case.rb#41
  def _mailer_class; end

  # source://actionmailer//lib/action_mailer/test_case.rb#41
  def _mailer_class=(_arg0); end

  # source://actionmailer//lib/action_mailer/test_case.rb#41
  def _mailer_class?; end

  class << self
    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://actionmailer//lib/action_mailer/test_case.rb#41
    def _mailer_class; end

    # source://actionmailer//lib/action_mailer/test_case.rb#41
    def _mailer_class=(value); end

    # source://actionmailer//lib/action_mailer/test_case.rb#41
    def _mailer_class?; end
  end
end

# source://actionmailer//lib/action_mailer/test_case.rb#32
module ActionMailer::TestCase::Behavior
  include ::ActiveSupport::Testing::Assertions
  include ::ActiveJob::TestHelper
  include ::ActionMailer::TestHelper
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Testing::ConstantLookup

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  mixes_in_class_methods ::ActionMailer::TestCase::Behavior::ClassMethods

  private

  # source://actionmailer//lib/action_mailer/test_case.rb#106
  def charset; end

  # source://actionmailer//lib/action_mailer/test_case.rb#110
  def encode(subject); end

  # source://actionmailer//lib/action_mailer/test_case.rb#78
  def initialize_test_deliveries; end

  # source://actionmailer//lib/action_mailer/test_case.rb#114
  def read_fixture(action); end

  # source://actionmailer//lib/action_mailer/test_case.rb#95
  def restore_delivery_method; end

  # source://actionmailer//lib/action_mailer/test_case.rb#85
  def restore_test_deliveries; end

  # source://actionmailer//lib/action_mailer/test_case.rb#90
  def set_delivery_method(method); end

  # source://actionmailer//lib/action_mailer/test_case.rb#100
  def set_expected_mail; end

  module GeneratedClassMethods
    def _mailer_class; end
    def _mailer_class=(value); end
    def _mailer_class?; end
  end

  module GeneratedInstanceMethods
    def _mailer_class; end
    def _mailer_class=(value); end
    def _mailer_class?; end
  end
end

# source://actionmailer//lib/action_mailer/test_case.rb#48
module ActionMailer::TestCase::Behavior::ClassMethods
  # source://actionmailer//lib/action_mailer/test_case.rb#68
  def determine_default_mailer(name); end

  # source://actionmailer//lib/action_mailer/test_case.rb#60
  def mailer_class; end

  # source://actionmailer//lib/action_mailer/test_case.rb#49
  def tests(mailer); end
end

# source://actionmailer//lib/action_mailer/test_case.rb#16
module ActionMailer::TestCase::ClearTestDeliveries
  extend ::ActiveSupport::Concern

  private

  # source://actionmailer//lib/action_mailer/test_case.rb#25
  def clear_test_deliveries; end
end

# source://actionmailer//lib/action_mailer/test_helper.rb#8
module ActionMailer::TestHelper
  include ::ActiveSupport::Testing::Assertions
  include ::ActiveJob::TestHelper

  # source://actionmailer//lib/action_mailer/test_helper.rb#34
  def assert_emails(number, &block); end

  # source://actionmailer//lib/action_mailer/test_helper.rb#126
  def assert_enqueued_email_with(mailer, method, args: T.unsafe(nil), queue: T.unsafe(nil), &block); end

  # source://actionmailer//lib/action_mailer/test_helper.rb#92
  def assert_enqueued_emails(number, &block); end

  # source://actionmailer//lib/action_mailer/test_helper.rb#64
  def assert_no_emails(&block); end

  # source://actionmailer//lib/action_mailer/test_helper.rb#150
  def assert_no_enqueued_emails(&block); end

  private

  # source://actionmailer//lib/action_mailer/test_helper.rb#155
  def delivery_job_filter(job); end
end

# source://actionmailer//lib/action_mailer/gem_version.rb#9
module ActionMailer::VERSION; end

# source://actionmailer//lib/action_mailer/gem_version.rb#10
ActionMailer::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://actionmailer//lib/action_mailer/gem_version.rb#11
ActionMailer::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://actionmailer//lib/action_mailer/gem_version.rb#13
ActionMailer::VERSION::PRE = T.let(T.unsafe(nil), String)

# source://actionmailer//lib/action_mailer/gem_version.rb#15
ActionMailer::VERSION::STRING = T.let(T.unsafe(nil), String)

# source://actionmailer//lib/action_mailer/gem_version.rb#12
ActionMailer::VERSION::TINY = T.let(T.unsafe(nil), Integer)
