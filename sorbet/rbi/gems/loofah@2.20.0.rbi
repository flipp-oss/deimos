# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `loofah` gem.
# Please instead update this file by running `bin/tapioca gem loofah`.

# source://loofah//lib/loofah/version.rb#2
module Loofah
  class << self
    # source://loofah//lib/loofah.rb#35
    def document(*args, &block); end

    # source://loofah//lib/loofah.rb#41
    def fragment(*args, &block); end

    # source://loofah//lib/loofah.rb#78
    def remove_extraneous_whitespace(string); end

    # source://loofah//lib/loofah.rb#51
    def scrub_document(string_or_io, method); end

    # source://loofah//lib/loofah.rb#46
    def scrub_fragment(string_or_io, method); end

    # source://loofah//lib/loofah.rb#73
    def scrub_xml_document(string_or_io, method); end

    # source://loofah//lib/loofah.rb#68
    def scrub_xml_fragment(string_or_io, method); end

    # source://loofah//lib/loofah.rb#57
    def xml_document(*args, &block); end

    # source://loofah//lib/loofah.rb#63
    def xml_fragment(*args, &block); end

    private

    # source://loofah//lib/loofah.rb#93
    def remove_comments_before_html_element(doc); end
  end
end

# source://loofah//lib/loofah/instance_methods.rb#126
module Loofah::DocumentDecorator
  # source://loofah//lib/loofah/instance_methods.rb#127
  def initialize(*args, &block); end
end

# source://loofah//lib/loofah/elements.rb#5
module Loofah::Elements; end

# source://loofah//lib/loofah/elements.rb#91
Loofah::Elements::BLOCK_LEVEL = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/elements.rb#88
Loofah::Elements::INLINE_LINE_BREAK = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/elements.rb#92
Loofah::Elements::LINEBREAKERS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/elements.rb#75
Loofah::Elements::LOOSE_BLOCK_LEVEL = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/elements.rb#90
Loofah::Elements::STRICT_BLOCK_LEVEL = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/elements.rb#6
Loofah::Elements::STRICT_BLOCK_LEVEL_HTML4 = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/elements.rb#34
Loofah::Elements::STRICT_BLOCK_LEVEL_HTML5 = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html/document.rb#3
module Loofah::HTML; end

# source://loofah//lib/loofah/html5/safelist.rb#5
module Loofah::HTML5; end

# source://loofah//lib/loofah/html5/safelist.rb#48
module Loofah::HTML5::SafeList; end

# source://loofah//lib/loofah/html5/safelist.rb#231
Loofah::HTML5::SafeList::ACCEPTABLE_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#734
Loofah::HTML5::SafeList::ACCEPTABLE_CSS_COLORS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#754
Loofah::HTML5::SafeList::ACCEPTABLE_CSS_EXTENDED_COLORS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#906
Loofah::HTML5::SafeList::ACCEPTABLE_CSS_FUNCTIONS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#695
Loofah::HTML5::SafeList::ACCEPTABLE_CSS_KEYWORDS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#625
Loofah::HTML5::SafeList::ACCEPTABLE_CSS_PROPERTIES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#49
Loofah::HTML5::SafeList::ACCEPTABLE_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#979
Loofah::HTML5::SafeList::ACCEPTABLE_PROTOCOLS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#966
Loofah::HTML5::SafeList::ACCEPTABLE_SVG_PROPERTIES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1010
Loofah::HTML5::SafeList::ACCEPTABLE_URI_DATA_MEDIATYPES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1020
Loofah::HTML5::SafeList::ALLOWED_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1023
Loofah::HTML5::SafeList::ALLOWED_CSS_FUNCTIONS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1022
Loofah::HTML5::SafeList::ALLOWED_CSS_KEYWORDS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1021
Loofah::HTML5::SafeList::ALLOWED_CSS_PROPERTIES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1019
Loofah::HTML5::SafeList::ALLOWED_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1044
Loofah::HTML5::SafeList::ALLOWED_ELEMENTS_WITH_LIBXML2 = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1025
Loofah::HTML5::SafeList::ALLOWED_PROTOCOLS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1024
Loofah::HTML5::SafeList::ALLOWED_SVG_PROPERTIES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1026
Loofah::HTML5::SafeList::ALLOWED_URI_DATA_MEDIATYPES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#525
Loofah::HTML5::SafeList::ARIA_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#581
Loofah::HTML5::SafeList::ATTR_VAL_IS_URI = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#314
Loofah::HTML5::SafeList::MATHML_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#146
Loofah::HTML5::SafeList::MATHML_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#977
Loofah::HTML5::SafeList::PROTOCOL_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://loofah//lib/loofah/html5/safelist.rb#959
Loofah::HTML5::SafeList::SHORTHAND_CSS_PROPERTIES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#607
Loofah::HTML5::SafeList::SVG_ALLOW_LOCAL_HREF = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#366
Loofah::HTML5::SafeList::SVG_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#593
Loofah::HTML5::SafeList::SVG_ATTR_VAL_ALLOWS_REF = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#182
Loofah::HTML5::SafeList::SVG_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1039
Loofah::HTML5::SafeList::TAGS_SAFE_WITH_LIBXML2 = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/safelist.rb#1030
Loofah::HTML5::SafeList::VOID_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/scrub.rb#7
module Loofah::HTML5::Scrub
  class << self
    # source://loofah//lib/loofah/html5/scrub.rb#16
    def allowed_element?(element_name); end

    # source://loofah//lib/loofah/html5/scrub.rb#191
    def cdata_escape(node); end

    # source://loofah//lib/loofah/html5/scrub.rb#186
    def cdata_needs_escaping?(node); end

    # source://loofah//lib/loofah/html5/scrub.rb#206
    def escape_tags(string); end

    # source://loofah//lib/loofah/html5/scrub.rb#165
    def force_correct_attribute_escaping!(node); end

    # source://loofah//lib/loofah/html5/scrub.rb#119
    def scrub_attribute_that_allows_local_ref(attr_node); end

    # source://loofah//lib/loofah/html5/scrub.rb#21
    def scrub_attributes(node); end

    # source://loofah//lib/loofah/html5/scrub.rb#68
    def scrub_css(style); end

    # source://loofah//lib/loofah/html5/scrub.rb#63
    def scrub_css_attribute(node); end

    # source://loofah//lib/loofah/html5/scrub.rb#142
    def scrub_uri_attribute(attr_node); end
  end
end

# source://loofah//lib/loofah/html5/scrub.rb#8
Loofah::HTML5::Scrub::CONTROL_CHARACTERS = T.let(T.unsafe(nil), Regexp)

# source://loofah//lib/loofah/html5/scrub.rb#10
Loofah::HTML5::Scrub::CRASS_SEMICOLON = T.let(T.unsafe(nil), Hash)

# source://loofah//lib/loofah/html5/scrub.rb#11
Loofah::HTML5::Scrub::CSS_IMPORTANT = T.let(T.unsafe(nil), String)

# source://loofah//lib/loofah/html5/scrub.rb#9
Loofah::HTML5::Scrub::CSS_KEYWORDISH = T.let(T.unsafe(nil), Regexp)

# source://loofah//lib/loofah/html5/scrub.rb#12
Loofah::HTML5::Scrub::CSS_PROPERTY_STRING_WITHOUT_EMBEDDED_QUOTES = T.let(T.unsafe(nil), Regexp)

# source://loofah//lib/loofah/html5/scrub.rb#13
Loofah::HTML5::Scrub::DATA_ATTRIBUTE_NAME = T.let(T.unsafe(nil), Regexp)

# source://loofah//lib/loofah/html5/safelist.rb#1047
Loofah::HTML5::WhiteList = Loofah::HTML5::SafeList

# source://loofah//lib/loofah/html/document.rb#9
class Loofah::HTML::Document < ::Nokogiri::HTML4::Document
  include ::Loofah::ScrubBehavior::Node
  include ::Loofah::DocumentDecorator
  include ::Loofah::TextBehavior

  # source://loofah//lib/loofah/html/document.rb#14
  def serialize_root; end
end

# source://loofah//lib/loofah/html/document_fragment.rb#9
class Loofah::HTML::DocumentFragment < ::Nokogiri::HTML4::DocumentFragment
  include ::Loofah::TextBehavior

  # source://loofah//lib/loofah/html/document_fragment.rb#31
  def serialize; end

  # source://loofah//lib/loofah/html/document_fragment.rb#37
  def serialize_root; end

  # source://loofah//lib/loofah/html/document_fragment.rb#31
  def to_s; end

  class << self
    # source://loofah//lib/loofah/html/document_fragment.rb#18
    def parse(tags, encoding = T.unsafe(nil)); end
  end
end

# source://loofah//lib/loofah/html5/libxml2_workarounds.rb#11
module Loofah::LibxmlWorkarounds; end

# source://loofah//lib/loofah/html5/libxml2_workarounds.rb#19
Loofah::LibxmlWorkarounds::BROKEN_ESCAPING_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://loofah//lib/loofah/html5/libxml2_workarounds.rb#25
Loofah::LibxmlWorkarounds::BROKEN_ESCAPING_ATTRIBUTES_QUALIFYING_TAG = T.let(T.unsafe(nil), Hash)

# source://loofah//lib/loofah/metahelpers.rb#3
module Loofah::MetaHelpers
  class << self
    # source://loofah//lib/loofah/metahelpers.rb#4
    def add_downcased_set_members_to_all_set_constants(mojule); end
  end
end

# source://loofah//lib/loofah/instance_methods.rb#30
module Loofah::ScrubBehavior
  class << self
    # source://loofah//lib/loofah/instance_methods.rb#60
    def resolve_scrubber(scrubber); end
  end
end

# source://loofah//lib/loofah/instance_methods.rb#31
module Loofah::ScrubBehavior::Node
  # source://loofah//lib/loofah/instance_methods.rb#32
  def scrub!(scrubber); end
end

# source://loofah//lib/loofah/instance_methods.rb#53
module Loofah::ScrubBehavior::NodeSet
  # source://loofah//lib/loofah/instance_methods.rb#54
  def scrub!(scrubber); end
end

# source://loofah//lib/loofah/scrubber.rb#34
class Loofah::Scrubber
  # source://loofah//lib/loofah/scrubber.rb#65
  def initialize(options = T.unsafe(nil), &block); end

  # source://loofah//lib/loofah/scrubber.rb#94
  def append_attribute(node, attribute, value); end

  # source://loofah//lib/loofah/scrubber.rb#49
  def block; end

  # source://loofah//lib/loofah/scrubber.rb#44
  def direction; end

  # source://loofah//lib/loofah/scrubber.rb#86
  def scrub(node); end

  # source://loofah//lib/loofah/scrubber.rb#78
  def traverse(node); end

  private

  # source://loofah//lib/loofah/scrubber.rb#103
  def html5lib_sanitize(node); end

  # source://loofah//lib/loofah/scrubber.rb#129
  def traverse_conditionally_bottom_up(node); end

  # source://loofah//lib/loofah/scrubber.rb#120
  def traverse_conditionally_top_down(node); end
end

# source://loofah//lib/loofah/scrubber.rb#37
Loofah::Scrubber::CONTINUE = T.let(T.unsafe(nil), Object)

# source://loofah//lib/loofah/scrubber.rb#40
Loofah::Scrubber::STOP = T.let(T.unsafe(nil), Object)

# source://loofah//lib/loofah/scrubber.rb#6
class Loofah::ScrubberNotFound < ::RuntimeError; end

# source://loofah//lib/loofah/scrubbers.rb#86
module Loofah::Scrubbers
  class << self
    # source://loofah//lib/loofah/scrubbers.rb#295
    def scrubber_symbols; end
  end
end

# source://loofah//lib/loofah/scrubbers.rb#139
class Loofah::Scrubbers::Escape < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#140
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#144
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#281
Loofah::Scrubbers::MAP = T.let(T.unsafe(nil), Hash)

# source://loofah//lib/loofah/scrubbers.rb#233
class Loofah::Scrubbers::NewlineBlockElements < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#234
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#238
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#199
class Loofah::Scrubbers::NoFollow < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#200
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#204
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#220
class Loofah::Scrubbers::NoOpener < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#221
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#225
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#118
class Loofah::Scrubbers::Prune < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#119
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#123
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#96
class Loofah::Scrubbers::Strip < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#97
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#101
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#265
class Loofah::Scrubbers::Unprintable < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#266
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#270
  def scrub(node); end
end

# source://loofah//lib/loofah/scrubbers.rb#170
class Loofah::Scrubbers::Whitewash < ::Loofah::Scrubber
  # source://loofah//lib/loofah/scrubbers.rb#171
  def initialize; end

  # source://loofah//lib/loofah/scrubbers.rb#175
  def scrub(node); end
end

# source://loofah//lib/loofah/instance_methods.rb#73
module Loofah::TextBehavior
  # source://loofah//lib/loofah/instance_methods.rb#95
  def inner_text(options = T.unsafe(nil)); end

  # source://loofah//lib/loofah/instance_methods.rb#95
  def text(options = T.unsafe(nil)); end

  # source://loofah//lib/loofah/instance_methods.rb#95
  def to_str(options = T.unsafe(nil)); end

  # source://loofah//lib/loofah/instance_methods.rb#121
  def to_text(options = T.unsafe(nil)); end
end

# source://loofah//lib/loofah/version.rb#4
Loofah::VERSION = T.let(T.unsafe(nil), String)

# source://loofah//lib/loofah/xml/document.rb#3
module Loofah::XML; end

# source://loofah//lib/loofah/xml/document.rb#9
class Loofah::XML::Document < ::Nokogiri::XML::Document
  include ::Loofah::ScrubBehavior::Node
  include ::Loofah::DocumentDecorator
end

# source://loofah//lib/loofah/xml/document_fragment.rb#9
class Loofah::XML::DocumentFragment < ::Nokogiri::XML::DocumentFragment
  class << self
    # source://loofah//lib/loofah/xml/document_fragment.rb#16
    def parse(tags); end
  end
end
