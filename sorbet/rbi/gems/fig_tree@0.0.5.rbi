# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `fig_tree` gem.
# Please instead update this file by running `bin/tapioca gem fig_tree`.

# source://fig_tree//lib/fig_tree/version.rb#3
module FigTree
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::FigTree::ClassMethods
end

# source://fig_tree//lib/fig_tree.rb#219
module FigTree::ClassMethods
  # source://fig_tree//lib/fig_tree.rb#266
  def after_configure(&block); end

  # source://fig_tree//lib/fig_tree.rb#233
  def config; end

  # source://fig_tree//lib/fig_tree.rb#226
  def configure(&block); end

  # source://fig_tree//lib/fig_tree.rb#221
  def define_settings(&block); end

  # source://fig_tree//lib/fig_tree.rb#240
  def with_config(values = T.unsafe(nil), &block); end
end

# source://fig_tree//lib/fig_tree.rb#36
class FigTree::ConfigStruct
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker

  # source://fig_tree//lib/fig_tree.rb#42
  def initialize(name); end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
  def __callbacks; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
  def __callbacks?; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#835
  def _configure_callbacks; end

  # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#823
  def _run_configure_callbacks(&block); end

  # source://fig_tree//lib/fig_tree.rb#74
  def clone_and_reset; end

  # source://fig_tree//lib/fig_tree.rb#58
  def deprecate(old_config, new_config); end

  # source://fig_tree//lib/fig_tree.rb#64
  def inspect; end

  # source://fig_tree//lib/fig_tree.rb#127
  def method_missing(method, *args, &block); end

  # source://fig_tree//lib/fig_tree.rb#50
  def reset!; end

  # source://fig_tree//lib/fig_tree.rb#100
  def setting(name, default_value = T.unsafe(nil), default_proc: T.unsafe(nil), &block); end

  # source://fig_tree//lib/fig_tree.rb#89
  def setting_object(name, &block); end

  # source://fig_tree//lib/fig_tree.rb#69
  def to_h; end

  protected

  # source://fig_tree//lib/fig_tree.rb#158
  def setting_objects; end

  # source://fig_tree//lib/fig_tree.rb#158
  def setting_objects=(_arg0); end

  # source://fig_tree//lib/fig_tree.rb#158
  def settings; end

  # source://fig_tree//lib/fig_tree.rb#158
  def settings=(_arg0); end

  private

  # source://fig_tree//lib/fig_tree.rb#209
  def _block_config_method(config_key, &block); end

  # source://fig_tree//lib/fig_tree.rb#181
  def _default_config_method(config_key, *args); end

  # source://fig_tree//lib/fig_tree.rb#162
  def _deprecated_config_method(method, *args); end

  # source://fig_tree//lib/fig_tree.rb#196
  def _new_setting_object_method(config_key, &block); end

  # source://fig_tree//lib/fig_tree.rb#203
  def _setting_object_method(config_key); end

  # source://fig_tree//lib/fig_tree.rb#118
  def respond_to_missing?(method, include_all = T.unsafe(nil)); end

  class << self
    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks; end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks=(value); end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#67
    def __callbacks?; end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#827
    def _configure_callbacks; end

    # source://activesupport/6.1.7.3/lib/active_support/callbacks.rb#831
    def _configure_callbacks=(value); end
  end
end

# source://fig_tree//lib/fig_tree.rb#14
class FigTree::ConfigValue < ::Struct
  # source://fig_tree//lib/fig_tree.rb#26
  def clone_and_reset; end

  def default_proc; end

  # source://fig_tree//lib/fig_tree.rb#14
  def default_proc=(_); end

  def default_value; end

  # source://fig_tree//lib/fig_tree.rb#14
  def default_value=(_); end

  def deprecation; end

  # source://fig_tree//lib/fig_tree.rb#14
  def deprecation=(_); end

  # source://fig_tree//lib/fig_tree.rb#17
  def reset!; end

  def value; end

  # source://fig_tree//lib/fig_tree.rb#14
  def value=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://fig_tree//lib/fig_tree/version.rb#4
FigTree::VERSION = T.let(T.unsafe(nil), String)
